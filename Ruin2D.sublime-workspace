{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"jr",
				"jrMurmurHash"
			],
			[
				"clone",
				"clone"
			],
			[
				"alloc",
				"allocator"
			],
			[
				"In",
				"INVALID_VECTOR_BOUNDS"
			],
			[
				"jrSetNo",
				"jrSetNodeBlack"
			],
			[
				"jrDe",
				"jrDefaultCompare"
			],
			[
				"jrD",
				"jrDestroy"
			],
			[
				"half",
				"halfHeight"
			],
			[
				"cont",
				"controller"
			],
			[
				"bottom",
				"bottomBoundaryNormal"
			],
			[
				"start",
				"startSelected"
			],
			[
				"Draw",
				"DrawRectangle"
			],
			[
				"DrawBitMap",
				"DrawBitMapTile"
			],
			[
				"gamelib",
				"gamelibFileHandle"
			],
			[
				"Debug",
				"OutputDebugStringA"
			],
			[
				"Initia",
				"InitializeGameFunc"
			],
			[
				"Initial",
				"InitializeGame"
			],
			[
				"paddleS",
				"paddleSfx"
			],
			[
				"window",
				"windowWidth"
			],
			[
				"Trigger",
				"TriggerGameUpdate"
			],
			[
				"sound",
				"soundplayer"
			],
			[
				"GameUp",
				"GameUpdateLock"
			],
			[
				"pad",
				"paddleSfx"
			],
			[
				"score",
				"scoreSfx"
			],
			[
				"Wave",
				"WaveDataChunk"
			],
			[
				"image",
				"imageHeader"
			],
			[
				"imag",
				"imageWidth"
			],
			[
				"BITM",
				"BitMapFileHeader"
			],
			[
				"tStor",
				"tStorageStart"
			],
			[
				"pS",
				"pStorageStart"
			],
			[
				"pStor",
				"pStorageAddress"
			],
			[
				"Bounda",
				"BoundaryTagAllocator"
			],
			[
				"tempor",
				"temporary"
			],
			[
				"_hea",
				"_headerChain"
			],
			[
				"alig",
				"alignedPtr"
			],
			[
				"u",
				"uintptr_t"
			],
			[
				"Bound",
				"BoundaryTagAllocator"
			],
			[
				"mem",
				"memBlock"
			],
			[
				"freed",
				"freedBlock"
			],
			[
				"Free",
				"FreeList"
			],
			[
				"nextBl",
				"nextBlockLength"
			],
			[
				"next",
				"nextBlockTag"
			],
			[
				"all",
				"_allocated"
			],
			[
				"pre",
				"prevBlockTag"
			],
			[
				"block",
				"blockLength"
			],
			[
				"prevB",
				"prevBlockLength"
			],
			[
				"SetBoun",
				"SetBoundaryTagsFree"
			],
			[
				"Set",
				"SetBlockFree"
			],
			[
				"prevBloc",
				"prevBlockTag"
			],
			[
				"Creat",
				"CreateBoundaryTagsFree"
			],
			[
				"SetBound",
				"SetBoundaryTagsFree"
			],
			[
				"bound",
				"BoundaryTag"
			],
			[
				"SetBoundaryT",
				"SetBoundaryTagsAlloc"
			],
			[
				"SetBl",
				"SetBlockAllocated"
			],
			[
				"bloc",
				"blockLength"
			],
			[
				"SetBlo",
				"SetBlockAllocated"
			],
			[
				"con",
				"controllerState"
			],
			[
				"pu",
				"puckPos"
			],
			[
				"puck",
				"puckPos"
			],
			[
				"windo",
				"windowHeight"
			],
			[
				"norma",
				"normalizedLX"
			],
			[
				"XInputSetStat",
				"XInputSetStateStub"
			],
			[
				"glBuffer",
				"glBufferSubData"
			],
			[
				"transform",
				"transformBuffer"
			],
			[
				"tran",
				"transforms"
			],
			[
				"square",
				"squareIndicies"
			],
			[
				"indi",
				"indices"
			],
			[
				"transf",
				"transformBuffer"
			],
			[
				"squ",
				"squareVerts"
			],
			[
				"tile",
				"tileHeight"
			],
			[
				"tileWid",
				"tileWidthDelta"
			],
			[
				"col",
				"column"
			],
			[
				"graphics",
				"love.graphics.draw()"
			],
			[
				"Resorce",
				"ResourceCache"
			],
			[
				"Resource",
				"ResourceCache"
			],
			[
				"file",
				"love.filesystem.load(${1:name})"
			],
			[
				"Resour",
				"ResourceCache"
			],
			[
				"buildC",
				"buildCacheFromManifest"
			],
			[
				"fi",
				"love.filesystem.isFile(${1:filename})"
			],
			[
				"love",
				"love.filesystem"
			],
			[
				"Ruin",
				"RuinEngine"
			],
			[
				"RenderOb",
				"RenderObjectMap"
			],
			[
				"resource",
				"resourceManifest"
			],
			[
				"SDL_Dest",
				"SDL_DestroyTexture"
			],
			[
				"de",
				"destinationRect"
			],
			[
				"O",
				"OBJDIR"
			],
			[
				"resou",
				"resourceMgr"
			],
			[
				"resour",
				"resourceMgr"
			],
			[
				"n",
				"n"
			],
			[
				"pro",
				"projData"
			],
			[
				"pa",
				"package_name"
			],
			[
				"lay",
				"layout_width"
			],
			[
				"layout",
				"layout_width"
			]
		]
	},
	"buffers":
	[
		{
			"file": "build.bat",
			"settings":
			{
				"buffer_size": 313,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "#include \"jr_vector.h\"\n\n#include \"jr_assert.h\"\n#include \"jr_mem.h\"\n#include \"jr_pointerutils.h\"\n\n#define NULL_VECTOR_ERROR_MSG \"\"\n#define NULL_ITEM_ERROR_MSG \"\"\n#define INVALID_VECTOR_BOUNDS \"\"\n\nvoid* jrGet(JRVector* vec, size_t index)\n{\n	jrAssert(vec, NULL_VECTOR_ERROR_MSG);\n	jrAssert(index >= 0, INVALID_VECTOR_BOUNDS);\n	jrAssert(index < vec->length, INVALID_VECTOR_BOUNDS);\n\n	if (vec && index >= 0 && index < vec->length)\n		return jrOffsetPointer(vec->array, (vec->itemSize * index));\n	else\n		return nullptr;\n}\n\nvoid* jrFront(JRVector* vec)\n{\n	jrAssert(vec, NULL_VECTOR_ERROR_MSG);\n	jrAssert(vec->length > 0, INVALID_VECTOR_BOUNDS);\n\n	if (vec && vec->length > 0)\n		return vec->array;\n	else\n		return nullptr;\n}\n\nvoid* jrBack(JRVector* vec)\n{\n	jrAssert(vec, NULL_VECTOR_ERROR_MSG);\n	jrAssert(vec->length > 0, INVALID_VECTOR_BOUNDS);\n\n	if (vec && vec->length > 0)\n		return jrOffsetPointer(vec->array, (vec->itemSize * (vec->length - 1)));\n	else\n		return nullptr;\n}\n\nvoid jrPushFront(JRVector* vec, void* item)\n{\n	jrAssert(vec, NULL_VECTOR_ERROR_MSG);\n	jrAssert(item, NULL_ITEM_ERROR_MSG);\n\n	if (vec && item)\n	{\n		if (vec->length == vec->capacity)\n		{\n			void* tempArray = vec->allocator->alloc(vec->itemSize * vec->capacity * 2);\n			jrMemCopy(\n				jrOffsetPointer(tempArray, vec->itemSize),\n				vec->array,\n				vec->itemSize * vec->length);\n			vec->allocator->free(vec->array);\n			vec->array = tempArray;\n			vec->capacity *= 2;\n		}\n		else\n		{\n			jrMemCopy(\n				jrOffsetPointer(vec->array, vec->itemSize),\n				vec->array,\n				vec->itemSize * vec->length);\n		}\n		\n		jrMemCopy(vec->array, item, vec->itemSize);\n		vec->length++;\n	}\n}\n\nvoid jrPushBack(JRVector* vec, void* item)\n{\n	jrAssert(vec, NULL_VECTOR_ERROR_MSG);\n	jrAssert(item, NULL_ITEM_ERROR_MSG);\n\n	if (vec && item)\n	{\n		if (vec->length == vec->capacity)\n			jrResize(vec, vec->capacity * 2);\n\n		void* ptr = jrOffsetPointer(vec->array, (vec->itemSize * vec->length));\n		jrMemCopy(ptr, item, vec->itemSize);\n		vec->length++;\n	}\n}\n\nvoid jrPopFront(JRVector* vec)\n{\n	jrAssert(vec, NULL_VECTOR_ERROR_MSG);\n	jrAssert(vec->length > 0, INVALID_VECTOR_BOUNDS);\n\n	if (vec && vec->length > 0)\n	{\n		vec->length--;\n\n		jrMemCopy(\n			vec->array,\n			jrOffsetPointer(vec->array, vec->itemSize),\n			vec->itemSize * vec->length);\n	}\n}\n\nvoid jrPopBack(JRVector* vec)\n{\n	jrAssert(vec, NULL_VECTOR_ERROR_MSG);\n	jrAssert(vec->length > 0, INVALID_VECTOR_BOUNDS);\n	\n	if (vec && vec->length > 0)\n		vec->length--;\n}\n\nvoid jrClear(JRVector* vec)\n{\n	jrAssert(vec, NULL_VECTOR_ERROR_MSG);\n\n	if (vec)\n		vec->length = 0;\n}\n\nvoid jrResize(JRVector* vec, size_t size)\n{\n	jrAssert(vec, NULL_VECTOR_ERROR_MSG);\n	jrAssert(size > vec->capacity, INVALID_VECTOR_BOUNDS);\n\n	if (vec && size > vec->capacity)\n	{\n		void* tempArray =jrAlloc(vec->itemSize * size);\n		\n		jrMemCopy(tempArray, vec->array, vec->itemSize * vec->length);\n		\n		jrFree(vec->array);\n		vec->array = tempArray;\n		vec->capacity *= size;\n	}\n}\n\nsize_t jrLength(JRVector* vec)\n{\n	jrAssert(vec, NULL_VECTOR_ERROR_MSG);\n\n	return vec->length;\n}\n\nbool jrEmpty(JRVector* vec)\n{\n	jrAssert(vec, NULL_VECTOR_ERROR_MSG);\n\n	return vec->length == 0;\n}\n\nvoid jrCreateVector(JRVector* vec, size_t capacity, size_t itemSize)\n{\n	jrAssert(vec, \"No Vector.\");\n	jrAssert(capacity > 0, \"Capacity should be greater than zero.\");\n	jrAssert(itemSize > 0, \"Item size must be greater than zero.\");\n\n	vec->array = jrAlloc(itemSize * capacity);\n	vec->capacity = capacity;\n	vec->length = 0;\n	vec->itemSize = itemSize;\n}\n\nvoid jrClone(JRVector* clone, JRVector* source)\n{\n	jrAssert(clone, NULL_VECTOR_ERROR_MSG);\n	jrAssert(source, NULL_VECTOR_ERROR_MSG);\n\n	jrDestroy(clone);\n\n	clone->array = jrAlloc(source->itemSize * source->capacity);\n	jrMemCopy(clone->array, source->array, source->itemSize * source->length);\n	clone->capacity = source->capacity;\n	clone->length = source->length;\n	clone->itemSize = source->itemSize;\n}\n\nvoid jrDestroy(JRVector* vec)\n{\n	jrAssert(vec, NULL_VECTOR_ERROR_MSG);\n\n	if (vec->array)\n		jrFree(vec->array);\n	vec->capacity = 0;\n	vec->length = 0;\n	\n	vec->itemSize = 0;\n	vec->array = nullptr;\n}\n",
			"file": "lib/jrcore/code/jr_vector.cpp",
			"file_size": 4265,
			"file_write_time": 130781196137324501,
			"settings":
			{
				"buffer_size": 4072,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "#ifndef __glcorearb_h_\n#define __glcorearb_h_ 1\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n/*\n** Copyright (c) 2013-2014 The Khronos Group Inc.\n**\n** Permission is hereby granted, free of charge, to any person obtaining a\n** copy of this software and/or associated documentation files (the\n** \"Materials\"), to deal in the Materials without restriction, including\n** without limitation the rights to use, copy, modify, merge, publish,\n** distribute, sublicense, and/or sell copies of the Materials, and to\n** permit persons to whom the Materials are furnished to do so, subject to\n** the following conditions:\n**\n** The above copyright notice and this permission notice shall be included\n** in all copies or substantial portions of the Materials.\n**\n** THE MATERIALS ARE PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.\n*/\n/*\n** This header is generated from the Khronos OpenGL / OpenGL ES XML\n** API Registry. The current version of the Registry, generator scripts\n** used to make the header, and the header can be found at\n**   http://www.opengl.org/registry/\n**\n** Khronos $Revision: 30645 $ on $Date: 2015-04-09 12:53:39 -0700 (Thu, 09 Apr 2015) $\n*/\n\n#if defined(_WIN32) && !defined(APIENTRY) && !defined(__CYGWIN__) && !defined(__SCITECH_SNAP__)\n#ifndef WIN32_LEAN_AND_MEAN\n#define WIN32_LEAN_AND_MEAN 1\n#endif\n#include <windows.h>\n#endif\n\n#ifndef APIENTRY\n#define APIENTRY\n#endif\n#ifndef APIENTRYP\n#define APIENTRYP APIENTRY *\n#endif\n#ifndef GLAPI\n#define GLAPI extern\n#endif\n\n/* glcorearb.h is for use with OpenGL core profile implementations.\n** It should should be placed in the same directory as gl.h and\n** included as <GL/glcorearb.h>.\n**\n** glcorearb.h includes only APIs in the latest OpenGL core profile\n** implementation together with APIs in newer ARB extensions which \n** can be supported by the core profile. It does not, and never will\n** include functionality removed from the core profile, such as\n** fixed-function vertex and fragment processing.\n**\n** Do not #include both <GL/glcorearb.h> and either of <GL/gl.h> or\n** <GL/glext.h> in the same source file.\n*/\n\n/* Generated C header for:\n * API: gl\n * Profile: core\n * Versions considered: .*\n * Versions emitted: .*\n * Default extensions included: glcore\n * Additional extensions included: _nomatch_^\n * Extensions removed: _nomatch_^\n */\n\n#ifndef GL_VERSION_1_0\n#define GL_VERSION_1_0 1\ntypedef void GLvoid;\ntypedef unsigned int GLenum;\ntypedef float GLfloat;\ntypedef int GLint;\ntypedef int GLsizei;\ntypedef unsigned int GLbitfield;\ntypedef double GLdouble;\ntypedef unsigned int GLuint;\ntypedef unsigned char GLboolean;\ntypedef unsigned char GLubyte;\ntypedef void (APIENTRYP PFNGLCULLFACEPROC) (GLenum mode);\ntypedef void (APIENTRYP PFNGLFRONTFACEPROC) (GLenum mode);\ntypedef void (APIENTRYP PFNGLHINTPROC) (GLenum target, GLenum mode);\ntypedef void (APIENTRYP PFNGLLINEWIDTHPROC) (GLfloat width);\ntypedef void (APIENTRYP PFNGLPOINTSIZEPROC) (GLfloat size);\ntypedef void (APIENTRYP PFNGLPOLYGONMODEPROC) (GLenum face, GLenum mode);\ntypedef void (APIENTRYP PFNGLSCISSORPROC) (GLint x, GLint y, GLsizei width, GLsizei height);\ntypedef void (APIENTRYP PFNGLTEXPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat param);\ntypedef void (APIENTRYP PFNGLTEXPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);\ntypedef void (APIENTRYP PFNGLTEXPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);\ntypedef void (APIENTRYP PFNGLTEXPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);\ntypedef void (APIENTRYP PFNGLTEXIMAGE1DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);\ntypedef void (APIENTRYP PFNGLTEXIMAGE2DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);\ntypedef void (APIENTRYP PFNGLDRAWBUFFERPROC) (GLenum buf);\ntypedef void (APIENTRYP PFNGLCLEARPROC) (GLbitfield mask);\ntypedef void (APIENTRYP PFNGLCLEARCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);\ntypedef void (APIENTRYP PFNGLCLEARSTENCILPROC) (GLint s);\ntypedef void (APIENTRYP PFNGLCLEARDEPTHPROC) (GLdouble depth);\ntypedef void (APIENTRYP PFNGLSTENCILMASKPROC) (GLuint mask);\ntypedef void (APIENTRYP PFNGLCOLORMASKPROC) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);\ntypedef void (APIENTRYP PFNGLDEPTHMASKPROC) (GLboolean flag);\ntypedef void (APIENTRYP PFNGLDISABLEPROC) (GLenum cap);\ntypedef void (APIENTRYP PFNGLENABLEPROC) (GLenum cap);\ntypedef void (APIENTRYP PFNGLFINISHPROC) (void);\ntypedef void (APIENTRYP PFNGLFLUSHPROC) (void);\ntypedef void (APIENTRYP PFNGLBLENDFUNCPROC) (GLenum sfactor, GLenum dfactor);\ntypedef void (APIENTRYP PFNGLLOGICOPPROC) (GLenum opcode);\ntypedef void (APIENTRYP PFNGLSTENCILFUNCPROC) (GLenum func, GLint ref, GLuint mask);\ntypedef void (APIENTRYP PFNGLSTENCILOPPROC) (GLenum fail, GLenum zfail, GLenum zpass);\ntypedef void (APIENTRYP PFNGLDEPTHFUNCPROC) (GLenum func);\ntypedef void (APIENTRYP PFNGLPIXELSTOREFPROC) (GLenum pname, GLfloat param);\ntypedef void (APIENTRYP PFNGLPIXELSTOREIPROC) (GLenum pname, GLint param);\ntypedef void (APIENTRYP PFNGLREADBUFFERPROC) (GLenum src);\ntypedef void (APIENTRYP PFNGLREADPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);\ntypedef void (APIENTRYP PFNGLGETBOOLEANVPROC) (GLenum pname, GLboolean *data);\ntypedef void (APIENTRYP PFNGLGETDOUBLEVPROC) (GLenum pname, GLdouble *data);\ntypedef GLenum (APIENTRYP PFNGLGETERRORPROC) (void);\ntypedef void (APIENTRYP PFNGLGETFLOATVPROC) (GLenum pname, GLfloat *data);\ntypedef void (APIENTRYP PFNGLGETINTEGERVPROC) (GLenum pname, GLint *data);\ntypedef const GLubyte *(APIENTRYP PFNGLGETSTRINGPROC) (GLenum name);\ntypedef void (APIENTRYP PFNGLGETTEXIMAGEPROC) (GLenum target, GLint level, GLenum format, GLenum type, void *pixels);\ntypedef void (APIENTRYP PFNGLGETTEXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);\ntypedef void (APIENTRYP PFNGLGETTEXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);\ntypedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERFVPROC) (GLenum target, GLint level, GLenum pname, GLfloat *params);\ntypedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERIVPROC) (GLenum target, GLint level, GLenum pname, GLint *params);\ntypedef GLboolean (APIENTRYP PFNGLISENABLEDPROC) (GLenum cap);\ntypedef void (APIENTRYP PFNGLDEPTHRANGEPROC) (GLdouble near, GLdouble far);\ntypedef void (APIENTRYP PFNGLVIEWPORTPROC) (GLint x, GLint y, GLsizei width, GLsizei height);\n#ifdef GL_GLEXT_PROTOTYPES\nGLAPI void APIENTRY glCullFace (GLenum mode);\nGLAPI void APIENTRY glFrontFace (GLenum mode);\nGLAPI void APIENTRY glHint (GLenum target, GLenum mode);\nGLAPI void APIENTRY glLineWidth (GLfloat width);\nGLAPI void APIENTRY glPointSize (GLfloat size);\nGLAPI void APIENTRY glPolygonMode (GLenum face, GLenum mode);\nGLAPI void APIENTRY glScissor (GLint x, GLint y, GLsizei width, GLsizei height);\nGLAPI void APIENTRY glTexParameterf (GLenum target, GLenum pname, GLfloat param);\nGLAPI void APIENTRY glTexParameterfv (GLenum target, GLenum pname, const GLfloat *params);\nGLAPI void APIENTRY glTexParameteri (GLenum target, GLenum pname, GLint param);\nGLAPI void APIENTRY glTexParameteriv (GLenum target, GLenum pname, const GLint *params);\nGLAPI void APIENTRY glTexImage1D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);\nGLAPI void APIENTRY glTexImage2D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);\nGLAPI void APIENTRY glDrawBuffer (GLenum buf);\nGLAPI void APIENTRY glClear (GLbitfield mask);\nGLAPI void APIENTRY glClearColor (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);\nGLAPI void APIENTRY glClearStencil (GLint s);\nGLAPI void APIENTRY glClearDepth (GLdouble depth);\nGLAPI void APIENTRY glStencilMask (GLuint mask);\nGLAPI void APIENTRY glColorMask (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);\nGLAPI void APIENTRY glDepthMask (GLboolean flag);\nGLAPI void APIENTRY glDisable (GLenum cap);\nGLAPI void APIENTRY glEnable (GLenum cap);\nGLAPI void APIENTRY glFinish (void);\nGLAPI void APIENTRY glFlush (void);\nGLAPI void APIENTRY glBlendFunc (GLenum sfactor, GLenum dfactor);\nGLAPI void APIENTRY glLogicOp (GLenum opcode);\nGLAPI void APIENTRY glStencilFunc (GLenum func, GLint ref, GLuint mask);\nGLAPI void APIENTRY glStencilOp (GLenum fail, GLenum zfail, GLenum zpass);\nGLAPI void APIENTRY glDepthFunc (GLenum func);\nGLAPI void APIENTRY glPixelStoref (GLenum pname, GLfloat param);\nGLAPI void APIENTRY glPixelStorei (GLenum pname, GLint param);\nGLAPI void APIENTRY glReadBuffer (GLenum src);\nGLAPI void APIENTRY glReadPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);\nGLAPI void APIENTRY glGetBooleanv (GLenum pname, GLboolean *data);\nGLAPI void APIENTRY glGetDoublev (GLenum pname, GLdouble *data);\nGLAPI GLenum APIENTRY glGetError (void);\nGLAPI void APIENTRY glGetFloatv (GLenum pname, GLfloat *data);\nGLAPI void APIENTRY glGetIntegerv (GLenum pname, GLint *data);\nGLAPI const GLubyte *APIENTRY glGetString (GLenum name);\nGLAPI void APIENTRY glGetTexImage (GLenum target, GLint level, GLenum format, GLenum type, void *pixels);\nGLAPI void APIENTRY glGetTexParameterfv (GLenum target, GLenum pname, GLfloat *params);\nGLAPI void APIENTRY glGetTexParameteriv (GLenum target, GLenum pname, GLint *params);\nGLAPI void APIENTRY glGetTexLevelParameterfv (GLenum target, GLint level, GLenum pname, GLfloat *params);\nGLAPI void APIENTRY glGetTexLevelParameteriv (GLenum target, GLint level, GLenum pname, GLint *params);\nGLAPI GLboolean APIENTRY glIsEnabled (GLenum cap);\nGLAPI void APIENTRY glDepthRange (GLdouble near, GLdouble far);\nGLAPI void APIENTRY glViewport (GLint x, GLint y, GLsizei width, GLsizei height);\n#endif\n#endif /* GL_VERSION_1_0 */\n\n#ifndef GL_VERSION_1_1\n#define GL_VERSION_1_1 1\ntypedef float GLclampf;\ntypedef double GLclampd;\n#define GL_DEPTH_BUFFER_BIT               0x00000100\n#define GL_STENCIL_BUFFER_BIT             0x00000400\n#define GL_COLOR_BUFFER_BIT               0x00004000\n#define GL_FALSE                          0\n#define GL_TRUE                           1\n#define GL_POINTS                         0x0000\n#define GL_LINES                          0x0001\n#define GL_LINE_LOOP                      0x0002\n#define GL_LINE_STRIP                     0x0003\n#define GL_TRIANGLES                      0x0004\n#define GL_TRIANGLE_STRIP                 0x0005\n#define GL_TRIANGLE_FAN                   0x0006\n#define GL_QUADS                          0x0007\n#define GL_NEVER                          0x0200\n#define GL_LESS                           0x0201\n#define GL_EQUAL                          0x0202\n#define GL_LEQUAL                         0x0203\n#define GL_GREATER                        0x0204\n#define GL_NOTEQUAL                       0x0205\n#define GL_GEQUAL                         0x0206\n#define GL_ALWAYS                         0x0207\n#define GL_ZERO                           0\n#define GL_ONE                            1\n#define GL_SRC_COLOR                      0x0300\n#define GL_ONE_MINUS_SRC_COLOR            0x0301\n#define GL_SRC_ALPHA                      0x0302\n#define GL_ONE_MINUS_SRC_ALPHA            0x0303\n#define GL_DST_ALPHA                      0x0304\n#define GL_ONE_MINUS_DST_ALPHA            0x0305\n#define GL_DST_COLOR                      0x0306\n#define GL_ONE_MINUS_DST_COLOR            0x0307\n#define GL_SRC_ALPHA_SATURATE             0x0308\n#define GL_NONE                           0\n#define GL_FRONT_LEFT                     0x0400\n#define GL_FRONT_RIGHT                    0x0401\n#define GL_BACK_LEFT                      0x0402\n#define GL_BACK_RIGHT                     0x0403\n#define GL_FRONT                          0x0404\n#define GL_BACK                           0x0405\n#define GL_LEFT                           0x0406\n#define GL_RIGHT                          0x0407\n#define GL_FRONT_AND_BACK                 0x0408\n#define GL_NO_ERROR                       0\n#define GL_INVALID_ENUM                   0x0500\n#define GL_INVALID_VALUE                  0x0501\n#define GL_INVALID_OPERATION              0x0502\n#define GL_OUT_OF_MEMORY                  0x0505\n#define GL_CW                             0x0900\n#define GL_CCW                            0x0901\n#define GL_POINT_SIZE                     0x0B11\n#define GL_POINT_SIZE_RANGE               0x0B12\n#define GL_POINT_SIZE_GRANULARITY         0x0B13\n#define GL_LINE_SMOOTH                    0x0B20\n#define GL_LINE_WIDTH                     0x0B21\n#define GL_LINE_WIDTH_RANGE               0x0B22\n#define GL_LINE_WIDTH_GRANULARITY         0x0B23\n#define GL_POLYGON_MODE                   0x0B40\n#define GL_POLYGON_SMOOTH                 0x0B41\n#define GL_CULL_FACE                      0x0B44\n#define GL_CULL_FACE_MODE                 0x0B45\n#define GL_FRONT_FACE                     0x0B46\n#define GL_DEPTH_RANGE                    0x0B70\n#define GL_DEPTH_TEST                     0x0B71\n#define GL_DEPTH_WRITEMASK                0x0B72\n#define GL_DEPTH_CLEAR_VALUE              0x0B73\n#define GL_DEPTH_FUNC                     0x0B74\n#define GL_STENCIL_TEST                   0x0B90\n#define GL_STENCIL_CLEAR_VALUE            0x0B91\n#define GL_STENCIL_FUNC                   0x0B92\n#define GL_STENCIL_VALUE_MASK             0x0B93\n#define GL_STENCIL_FAIL                   0x0B94\n#define GL_STENCIL_PASS_DEPTH_FAIL        0x0B95\n#define GL_STENCIL_PASS_DEPTH_PASS        0x0B96\n#define GL_STENCIL_REF                    0x0B97\n#define GL_STENCIL_WRITEMASK              0x0B98\n#define GL_VIEWPORT                       0x0BA2\n#define GL_DITHER                         0x0BD0\n#define GL_BLEND_DST                      0x0BE0\n#define GL_BLEND_SRC                      0x0BE1\n#define GL_BLEND                          0x0BE2\n#define GL_LOGIC_OP_MODE                  0x0BF0\n#define GL_COLOR_LOGIC_OP                 0x0BF2\n#define GL_DRAW_BUFFER                    0x0C01\n#define GL_READ_BUFFER                    0x0C02\n#define GL_SCISSOR_BOX                    0x0C10\n#define GL_SCISSOR_TEST                   0x0C11\n#define GL_COLOR_CLEAR_VALUE              0x0C22\n#define GL_COLOR_WRITEMASK                0x0C23\n#define GL_DOUBLEBUFFER                   0x0C32\n#define GL_STEREO                         0x0C33\n#define GL_LINE_SMOOTH_HINT               0x0C52\n#define GL_POLYGON_SMOOTH_HINT            0x0C53\n#define GL_UNPACK_SWAP_BYTES              0x0CF0\n#define GL_UNPACK_LSB_FIRST               0x0CF1\n#define GL_UNPACK_ROW_LENGTH              0x0CF2\n#define GL_UNPACK_SKIP_ROWS               0x0CF3\n#define GL_UNPACK_SKIP_PIXELS             0x0CF4\n#define GL_UNPACK_ALIGNMENT               0x0CF5\n#define GL_PACK_SWAP_BYTES                0x0D00\n#define GL_PACK_LSB_FIRST                 0x0D01\n#define GL_PACK_ROW_LENGTH                0x0D02\n#define GL_PACK_SKIP_ROWS                 0x0D03\n#define GL_PACK_SKIP_PIXELS               0x0D04\n#define GL_PACK_ALIGNMENT                 0x0D05\n#define GL_MAX_TEXTURE_SIZE               0x0D33\n#define GL_MAX_VIEWPORT_DIMS              0x0D3A\n#define GL_SUBPIXEL_BITS                  0x0D50\n#define GL_TEXTURE_1D                     0x0DE0\n#define GL_TEXTURE_2D                     0x0DE1\n#define GL_POLYGON_OFFSET_UNITS           0x2A00\n#define GL_POLYGON_OFFSET_POINT           0x2A01\n#define GL_POLYGON_OFFSET_LINE            0x2A02\n#define GL_POLYGON_OFFSET_FILL            0x8037\n#define GL_POLYGON_OFFSET_FACTOR          0x8038\n#define GL_TEXTURE_BINDING_1D             0x8068\n#define GL_TEXTURE_BINDING_2D             0x8069\n#define GL_TEXTURE_WIDTH                  0x1000\n#define GL_TEXTURE_HEIGHT                 0x1001\n#define GL_TEXTURE_INTERNAL_FORMAT        0x1003\n#define GL_TEXTURE_BORDER_COLOR           0x1004\n#define GL_TEXTURE_RED_SIZE               0x805C\n#define GL_TEXTURE_GREEN_SIZE             0x805D\n#define GL_TEXTURE_BLUE_SIZE              0x805E\n#define GL_TEXTURE_ALPHA_SIZE             0x805F\n#define GL_DONT_CARE                      0x1100\n#define GL_FASTEST                        0x1101\n#define GL_NICEST                         0x1102\n#define GL_BYTE                           0x1400\n#define GL_UNSIGNED_BYTE                  0x1401\n#define GL_SHORT                          0x1402\n#define GL_UNSIGNED_SHORT                 0x1403\n#define GL_INT                            0x1404\n#define GL_UNSIGNED_INT                   0x1405\n#define GL_FLOAT                          0x1406\n#define GL_DOUBLE                         0x140A\n#define GL_STACK_OVERFLOW                 0x0503\n#define GL_STACK_UNDERFLOW                0x0504\n#define GL_CLEAR                          0x1500\n#define GL_AND                            0x1501\n#define GL_AND_REVERSE                    0x1502\n#define GL_COPY                           0x1503\n#define GL_AND_INVERTED                   0x1504\n#define GL_NOOP                           0x1505\n#define GL_XOR                            0x1506\n#define GL_OR                             0x1507\n#define GL_NOR                            0x1508\n#define GL_EQUIV                          0x1509\n#define GL_INVERT                         0x150A\n#define GL_OR_REVERSE                     0x150B\n#define GL_COPY_INVERTED                  0x150C\n#define GL_OR_INVERTED                    0x150D\n#define GL_NAND                           0x150E\n#define GL_SET                            0x150F\n#define GL_TEXTURE                        0x1702\n#define GL_COLOR                          0x1800\n#define GL_DEPTH                          0x1801\n#define GL_STENCIL                        0x1802\n#define GL_STENCIL_INDEX                  0x1901\n#define GL_DEPTH_COMPONENT                0x1902\n#define GL_RED                            0x1903\n#define GL_GREEN                          0x1904\n#define GL_BLUE                           0x1905\n#define GL_ALPHA                          0x1906\n#define GL_RGB                            0x1907\n#define GL_RGBA                           0x1908\n#define GL_POINT                          0x1B00\n#define GL_LINE                           0x1B01\n#define GL_FILL                           0x1B02\n#define GL_KEEP                           0x1E00\n#define GL_REPLACE                        0x1E01\n#define GL_INCR                           0x1E02\n#define GL_DECR                           0x1E03\n#define GL_VENDOR                         0x1F00\n#define GL_RENDERER                       0x1F01\n#define GL_VERSION                        0x1F02\n#define GL_EXTENSIONS                     0x1F03\n#define GL_NEAREST                        0x2600\n#define GL_LINEAR                         0x2601\n#define GL_NEAREST_MIPMAP_NEAREST         0x2700\n#define GL_LINEAR_MIPMAP_NEAREST          0x2701\n#define GL_NEAREST_MIPMAP_LINEAR          0x2702\n#define GL_LINEAR_MIPMAP_LINEAR           0x2703\n#define GL_TEXTURE_MAG_FILTER             0x2800\n#define GL_TEXTURE_MIN_FILTER             0x2801\n#define GL_TEXTURE_WRAP_S                 0x2802\n#define GL_TEXTURE_WRAP_T                 0x2803\n#define GL_PROXY_TEXTURE_1D               0x8063\n#define GL_PROXY_TEXTURE_2D               0x8064\n#define GL_REPEAT                         0x2901\n#define GL_R3_G3_B2                       0x2A10\n#define GL_RGB4                           0x804F\n#define GL_RGB5                           0x8050\n#define GL_RGB8                           0x8051\n#define GL_RGB10                          0x8052\n#define GL_RGB12                          0x8053\n#define GL_RGB16                          0x8054\n#define GL_RGBA2                          0x8055\n#define GL_RGBA4                          0x8056\n#define GL_RGB5_A1                        0x8057\n#define GL_RGBA8                          0x8058\n#define GL_RGB10_A2                       0x8059\n#define GL_RGBA12                         0x805A\n#define GL_RGBA16                         0x805B\n#define GL_VERTEX_ARRAY                   0x8074\ntypedef void (APIENTRYP PFNGLDRAWARRAYSPROC) (GLenum mode, GLint first, GLsizei count);\ntypedef void (APIENTRYP PFNGLDRAWELEMENTSPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices);\ntypedef void (APIENTRYP PFNGLGETPOINTERVPROC) (GLenum pname, void **params);\ntypedef void (APIENTRYP PFNGLPOLYGONOFFSETPROC) (GLfloat factor, GLfloat units);\ntypedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);\ntypedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);\ntypedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);\ntypedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);\ntypedef void (APIENTRYP PFNGLTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);\ntypedef void (APIENTRYP PFNGLTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);\ntypedef void (APIENTRYP PFNGLBINDTEXTUREPROC) (GLenum target, GLuint texture);\ntypedef void (APIENTRYP PFNGLDELETETEXTURESPROC) (GLsizei n, const GLuint *textures);\ntypedef void (APIENTRYP PFNGLGENTEXTURESPROC) (GLsizei n, GLuint *textures);\ntypedef GLboolean (APIENTRYP PFNGLISTEXTUREPROC) (GLuint texture);\n#ifdef GL_GLEXT_PROTOTYPES\nGLAPI void APIENTRY glDrawArrays (GLenum mode, GLint first, GLsizei count);\nGLAPI void APIENTRY glDrawElements (GLenum mode, GLsizei count, GLenum type, const void *indices);\nGLAPI void APIENTRY glGetPointerv (GLenum pname, void **params);\nGLAPI void APIENTRY glPolygonOffset (GLfloat factor, GLfloat units);\nGLAPI void APIENTRY glCopyTexImage1D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);\nGLAPI void APIENTRY glCopyTexImage2D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);\nGLAPI void APIENTRY glCopyTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);\nGLAPI void APIENTRY glCopyTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);\nGLAPI void APIENTRY glTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);\nGLAPI void APIENTRY glTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);\nGLAPI void APIENTRY glBindTexture (GLenum target, GLuint texture);\nGLAPI void APIENTRY glDeleteTextures (GLsizei n, const GLuint *textures);\nGLAPI void APIENTRY glGenTextures (GLsizei n, GLuint *textures);\nGLAPI GLboolean APIENTRY glIsTexture (GLuint texture);\n#endif\n#endif /* GL_VERSION_1_1 */\n\n#ifndef GL_VERSION_1_2\n#define GL_VERSION_1_2 1\n#define GL_UNSIGNED_BYTE_3_3_2            0x8032\n#define GL_UNSIGNED_SHORT_4_4_4_4         0x8033\n#define GL_UNSIGNED_SHORT_5_5_5_1         0x8034\n#define GL_UNSIGNED_INT_8_8_8_8           0x8035\n#define GL_UNSIGNED_INT_10_10_10_2        0x8036\n#define GL_TEXTURE_BINDING_3D             0x806A\n#define GL_PACK_SKIP_IMAGES               0x806B\n#define GL_PACK_IMAGE_HEIGHT              0x806C\n#define GL_UNPACK_SKIP_IMAGES             0x806D\n#define GL_UNPACK_IMAGE_HEIGHT            0x806E\n#define GL_TEXTURE_3D                     0x806F\n#define GL_PROXY_TEXTURE_3D               0x8070\n#define GL_TEXTURE_DEPTH                  0x8071\n#define GL_TEXTURE_WRAP_R                 0x8072\n#define GL_MAX_3D_TEXTURE_SIZE            0x8073\n#define GL_UNSIGNED_BYTE_2_3_3_REV        0x8362\n#define GL_UNSIGNED_SHORT_5_6_5           0x8363\n#define GL_UNSIGNED_SHORT_5_6_5_REV       0x8364\n#define GL_UNSIGNED_SHORT_4_4_4_4_REV     0x8365\n#define GL_UNSIGNED_SHORT_1_5_5_5_REV     0x8366\n#define GL_UNSIGNED_INT_8_8_8_8_REV       0x8367\n#define GL_UNSIGNED_INT_2_10_10_10_REV    0x8368\n#define GL_BGR                            0x80E0\n#define GL_BGRA                           0x80E1\n#define GL_MAX_ELEMENTS_VERTICES          0x80E8\n#define GL_MAX_ELEMENTS_INDICES           0x80E9\n#define GL_CLAMP_TO_EDGE                  0x812F\n#define GL_TEXTURE_MIN_LOD                0x813A\n#define GL_TEXTURE_MAX_LOD                0x813B\n#define GL_TEXTURE_BASE_LEVEL             0x813C\n#define GL_TEXTURE_MAX_LEVEL              0x813D\n#define GL_SMOOTH_POINT_SIZE_RANGE        0x0B12\n#define GL_SMOOTH_POINT_SIZE_GRANULARITY  0x0B13\n#define GL_SMOOTH_LINE_WIDTH_RANGE        0x0B22\n#define GL_SMOOTH_LINE_WIDTH_GRANULARITY  0x0B23\n#define GL_ALIASED_LINE_WIDTH_RANGE       0x846E\ntypedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);\ntypedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);\ntypedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);\ntypedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);\n#ifdef GL_GLEXT_PROTOTYPES\nGLAPI void APIENTRY glDrawRangeElements (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);\nGLAPI void APIENTRY glTexImage3D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);\nGLAPI void APIENTRY glTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);\nGLAPI void APIENTRY glCopyTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);\n#endif\n#endif /* GL_VERSION_1_2 */\n\n#ifndef GL_VERSION_1_3\n#define GL_VERSION_1_3 1\n#define GL_TEXTURE0                       0x84C0\n#define GL_TEXTURE1                       0x84C1\n#define GL_TEXTURE2                       0x84C2\n#define GL_TEXTURE3                       0x84C3\n#define GL_TEXTURE4                       0x84C4\n#define GL_TEXTURE5                       0x84C5\n#define GL_TEXTURE6                       0x84C6\n#define GL_TEXTURE7                       0x84C7\n#define GL_TEXTURE8                       0x84C8\n#define GL_TEXTURE9                       0x84C9\n#define GL_TEXTURE10                      0x84CA\n#define GL_TEXTURE11                      0x84CB\n#define GL_TEXTURE12                      0x84CC\n#define GL_TEXTURE13                      0x84CD\n#define GL_TEXTURE14                      0x84CE\n#define GL_TEXTURE15                      0x84CF\n#define GL_TEXTURE16                      0x84D0\n#define GL_TEXTURE17                      0x84D1\n#define GL_TEXTURE18                      0x84D2\n#define GL_TEXTURE19                      0x84D3\n#define GL_TEXTURE20                      0x84D4\n#define GL_TEXTURE21                      0x84D5\n#define GL_TEXTURE22                      0x84D6\n#define GL_TEXTURE23                      0x84D7\n#define GL_TEXTURE24                      0x84D8\n#define GL_TEXTURE25                      0x84D9\n#define GL_TEXTURE26                      0x84DA\n#define GL_TEXTURE27                      0x84DB\n#define GL_TEXTURE28                      0x84DC\n#define GL_TEXTURE29                      0x84DD\n#define GL_TEXTURE30                      0x84DE\n#define GL_TEXTURE31                      0x84DF\n#define GL_ACTIVE_TEXTURE                 0x84E0\n#define GL_MULTISAMPLE                    0x809D\n#define GL_SAMPLE_ALPHA_TO_COVERAGE       0x809E\n#define GL_SAMPLE_ALPHA_TO_ONE            0x809F\n#define GL_SAMPLE_COVERAGE                0x80A0\n#define GL_SAMPLE_BUFFERS                 0x80A8\n#define GL_SAMPLES                        0x80A9\n#define GL_SAMPLE_COVERAGE_VALUE          0x80AA\n#define GL_SAMPLE_COVERAGE_INVERT         0x80AB\n#define GL_TEXTURE_CUBE_MAP               0x8513\n#define GL_TEXTURE_BINDING_CUBE_MAP       0x8514\n#define GL_TEXTURE_CUBE_MAP_POSITIVE_X    0x8515\n#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X    0x8516\n#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y    0x8517\n#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y    0x8518\n#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z    0x8519\n#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z    0x851A\n#define GL_PROXY_TEXTURE_CUBE_MAP         0x851B\n#define GL_MAX_CUBE_MAP_TEXTURE_SIZE      0x851C\n#define GL_COMPRESSED_RGB                 0x84ED\n#define GL_COMPRESSED_RGBA                0x84EE\n#define GL_TEXTURE_COMPRESSION_HINT       0x84EF\n#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE  0x86A0\n#define GL_TEXTURE_COMPRESSED             0x86A1\n#define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2\n#define GL_COMPRESSED_TEXTURE_FORMATS     0x86A3\n#define GL_CLAMP_TO_BORDER                0x812D\ntypedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);\ntypedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);\ntypedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);\ntypedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);\ntypedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);\ntypedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);\ntypedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);\ntypedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);\ntypedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, void *img);\n#ifdef GL_GLEXT_PROTOTYPES\nGLAPI void APIENTRY glActiveTexture (GLenum texture);\nGLAPI void APIENTRY glSampleCoverage (GLfloat value, GLboolean invert);\nGLAPI void APIENTRY glCompressedTexImage3D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);\nGLAPI void APIENTRY glCompressedTexImage2D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);\nGLAPI void APIENTRY glCompressedTexImage1D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);\nGLAPI void APIENTRY glCompressedTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);\nGLAPI void APIENTRY glCompressedTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);\nGLAPI void APIENTRY glCompressedTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);\nGLAPI void APIENTRY glGetCompressedTexImage (GLenum target, GLint level, void *img);\n#endif\n#endif /* GL_VERSION_1_3 */\n\n#ifndef GL_VERSION_1_4\n#define GL_VERSION_1_4 1\n#define GL_BLEND_DST_RGB                  0x80C8\n#define GL_BLEND_SRC_RGB                  0x80C9\n#define GL_BLEND_DST_ALPHA                0x80CA\n#define GL_BLEND_SRC_ALPHA                0x80CB\n#define GL_POINT_FADE_THRESHOLD_SIZE      0x8128\n#define GL_DEPTH_COMPONENT16              0x81A5\n#define GL_DEPTH_COMPONENT24              0x81A6\n#define GL_DEPTH_COMPONENT32              0x81A7\n#define GL_MIRRORED_REPEAT                0x8370\n#define GL_MAX_TEXTURE_LOD_BIAS           0x84FD\n#define GL_TEXTURE_LOD_BIAS               0x8501\n#define GL_INCR_WRAP                      0x8507\n#define GL_DECR_WRAP                      0x8508\n#define GL_TEXTURE_DEPTH_SIZE             0x884A\n#define GL_TEXTURE_COMPARE_MODE           0x884C\n#define GL_TEXTURE_COMPARE_FUNC           0x884D\n#define GL_FUNC_ADD                       0x8006\n#define GL_FUNC_SUBTRACT                  0x800A\n#define GL_FUNC_REVERSE_SUBTRACT          0x800B\n#define GL_MIN                            0x8007\n#define GL_MAX                            0x8008\n#define GL_CONSTANT_COLOR                 0x8001\n#define GL_ONE_MINUS_CONSTANT_COLOR       0x8002\n#define GL_CONSTANT_ALPHA                 0x8003\n#define GL_ONE_MINUS_CONSTANT_ALPHA       0x8004\ntypedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);\ntypedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);\ntypedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);\ntypedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);\ntypedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);\ntypedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);\ntypedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);\ntypedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);\ntypedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);\n#ifdef GL_GLEXT_PROTOTYPES\nGLAPI void APIENTRY glBlendFuncSeparate (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);\nGLAPI void APIENTRY glMultiDrawArrays (GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);\nGLAPI void APIENTRY glMultiDrawElements (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);\nGLAPI void APIENTRY glPointParameterf (GLenum pname, GLfloat param);\nGLAPI void APIENTRY glPointParameterfv (GLenum pname, const GLfloat *params);\nGLAPI void APIENTRY glPointParameteri (GLenum pname, GLint param);\nGLAPI void APIENTRY glPointParameteriv (GLenum pname, const GLint *params);\nGLAPI void APIENTRY glBlendColor (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);\nGLAPI void APIENTRY glBlendEquation (GLenum mode);\n#endif\n#endif /* GL_VERSION_1_4 */\n\n#ifndef GL_VERSION_1_5\n#define GL_VERSION_1_5 1\n#include <stddef.h>\ntypedef ptrdiff_t GLsizeiptr;\ntypedef ptrdiff_t GLintptr;\n#define GL_BUFFER_SIZE                    0x8764\n#define GL_BUFFER_USAGE                   0x8765\n#define GL_QUERY_COUNTER_BITS             0x8864\n#define GL_CURRENT_QUERY                  0x8865\n#define GL_QUERY_RESULT                   0x8866\n#define GL_QUERY_RESULT_AVAILABLE         0x8867\n#define GL_ARRAY_BUFFER                   0x8892\n#define GL_ELEMENT_ARRAY_BUFFER           0x8893\n#define GL_ARRAY_BUFFER_BINDING           0x8894\n#define GL_ELEMENT_ARRAY_BUFFER_BINDING   0x8895\n#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 0x889F\n#define GL_READ_ONLY                      0x88B8\n#define GL_WRITE_ONLY                     0x88B9\n#define GL_READ_WRITE                     0x88BA\n#define GL_BUFFER_ACCESS                  0x88BB\n#define GL_BUFFER_MAPPED                  0x88BC\n#define GL_BUFFER_MAP_POINTER             0x88BD\n#define GL_STREAM_DRAW                    0x88E0\n#define GL_STREAM_READ                    0x88E1\n#define GL_STREAM_COPY                    0x88E2\n#define GL_STATIC_DRAW                    0x88E4\n#define GL_STATIC_READ                    0x88E5\n#define GL_STATIC_COPY                    0x88E6\n#define GL_DYNAMIC_DRAW                   0x88E8\n#define GL_DYNAMIC_READ                   0x88E9\n#define GL_DYNAMIC_COPY                   0x88EA\n#define GL_SAMPLES_PASSED                 0x8914\n#define GL_SRC1_ALPHA                     0x8589\ntypedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);\ntypedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);\ntypedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);\ntypedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);\ntypedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);\ntypedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);\ntypedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);\ntypedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);\ntypedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);\ntypedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);\ntypedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);\ntypedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);\ntypedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const void *data, GLenum usage);\ntypedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, const void *data);\ntypedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, void *data);\ntypedef void *(APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);\ntypedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);\ntypedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);\ntypedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, void **params);\n#ifdef GL_GLEXT_PROTOTYPES\nGLAPI void APIENTRY glGenQueries (GLsizei n, GLuint *ids);\nGLAPI void APIENTRY glDeleteQueries (GLsizei n, const GLuint *ids);\nGLAPI GLboolean APIENTRY glIsQuery (GLuint id);\nGLAPI void APIENTRY glBeginQuery (GLenum target, GLuint id);\nGLAPI void APIENTRY glEndQuery (GLenum target);\nGLAPI void APIENTRY glGetQueryiv (GLenum target, GLenum pname, GLint *params);\nGLAPI void APIENTRY glGetQueryObjectiv (GLuint id, GLenum pname, GLint *params);\nGLAPI void APIENTRY glGetQueryObjectuiv (GLuint id, GLenum pname, GLuint *params);\nGLAPI void APIENTRY glBindBuffer (GLenum target, GLuint buffer);\nGLAPI void APIENTRY glDeleteBuffers (GLsizei n, const GLuint *buffers);\nGLAPI void APIENTRY glGenBuffers (GLsizei n, GLuint *buffers);\nGLAPI GLboolean APIENTRY glIsBuffer (GLuint buffer);\nGLAPI void APIENTRY glBufferData (GLenum target, GLsizeiptr size, const void *data, GLenum usage);\nGLAPI void APIENTRY glBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, const void *data);\nGLAPI void APIENTRY glGetBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, void *data);\nGLAPI void *APIENTRY glMapBuffer (GLenum target, GLenum access);\nGLAPI GLboolean APIENTRY glUnmapBuffer (GLenum target);\nGLAPI void APIENTRY glGetBufferParameteriv (GLenum target, GLenum pname, GLint *params);\nGLAPI void APIENTRY glGetBufferPointerv (GLenum target, GLenum pname, void **params);\n#endif\n#endif /* GL_VERSION_1_5 */\n\n#ifndef GL_VERSION_2_0\n#define GL_VERSION_2_0 1\ntypedef char GLchar;\ntypedef short GLshort;\ntypedef signed char GLbyte;\ntypedef unsigned short GLushort;\n#define GL_BLEND_EQUATION_RGB             0x8009\n#define GL_VERTEX_ATTRIB_ARRAY_ENABLED    0x8622\n#define GL_VERTEX_ATTRIB_ARRAY_SIZE       0x8623\n#define GL_VERTEX_ATTRIB_ARRAY_STRIDE     0x8624\n#define GL_VERTEX_ATTRIB_ARRAY_TYPE       0x8625\n#define GL_CURRENT_VERTEX_ATTRIB          0x8626\n#define GL_VERTEX_PROGRAM_POINT_SIZE      0x8642\n#define GL_VERTEX_ATTRIB_ARRAY_POINTER    0x8645\n#define GL_STENCIL_BACK_FUNC              0x8800\n#define GL_STENCIL_BACK_FAIL              0x8801\n#define GL_STENCIL_BACK_PASS_DEPTH_FAIL   0x8802\n#define GL_STENCIL_BACK_PASS_DEPTH_PASS   0x8803\n#define GL_MAX_DRAW_BUFFERS               0x8824\n#define GL_DRAW_BUFFER0                   0x8825\n#define GL_DRAW_BUFFER1                   0x8826\n#define GL_DRAW_BUFFER2                   0x8827\n#define GL_DRAW_BUFFER3                   0x8828\n#define GL_DRAW_BUFFER4                   0x8829\n#define GL_DRAW_BUFFER5                   0x882A\n#define GL_DRAW_BUFFER6                   0x882B\n#define GL_DRAW_BUFFER7                   0x882C\n#define GL_DRAW_BUFFER8                   0x882D\n#define GL_DRAW_BUFFER9                   0x882E\n#define GL_DRAW_BUFFER10                  0x882F\n#define GL_DRAW_BUFFER11                  0x8830\n#define GL_DRAW_BUFFER12                  0x8831\n#define GL_DRAW_BUFFER13                  0x8832\n#define GL_DRAW_BUFFER14                  0x8833\n#define GL_DRAW_BUFFER15                  0x8834\n#define GL_BLEND_EQUATION_ALPHA           0x883D\n#define GL_MAX_VERTEX_ATTRIBS             0x8869\n#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A\n#define GL_MAX_TEXTURE_IMAGE_UNITS        0x8872\n#define GL_FRAGMENT_SHADER                0x8B30\n#define GL_VERTEX_SHADER                  0x8B31\n#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 0x8B49\n#define GL_MAX_VERTEX_UNIFORM_COMPONENTS  0x8B4A\n#define GL_MAX_VARYING_FLOATS             0x8B4B\n#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS 0x8B4C\n#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x8B4D\n#define GL_SHADER_TYPE                    0x8B4F\n#define GL_FLOAT_VEC2                     0x8B50\n#define GL_FLOAT_VEC3                     0x8B51\n#define GL_FLOAT_VEC4                     0x8B52\n#define GL_INT_VEC2                       0x8B53\n#define GL_INT_VEC3                       0x8B54\n#define GL_INT_VEC4                       0x8B55\n#define GL_BOOL                           0x8B56\n#define GL_BOOL_VEC2                      0x8B57\n#define GL_BOOL_VEC3                      0x8B58\n#define GL_BOOL_VEC4                      0x8B59\n#define GL_FLOAT_MAT2                     0x8B5A\n#define GL_FLOAT_MAT3                     0x8B5B\n#define GL_FLOAT_MAT4                     0x8B5C\n#define GL_SAMPLER_1D                     0x8B5D\n#define GL_SAMPLER_2D                     0x8B5E\n#define GL_SAMPLER_3D                     0x8B5F\n#define GL_SAMPLER_CUBE                   0x8B60\n#define GL_SAMPLER_1D_SHADOW              0x8B61\n#define GL_SAMPLER_2D_SHADOW              0x8B62\n#define GL_DELETE_STATUS                  0x8B80\n#define GL_COMPILE_STATUS                 0x8B81\n#define GL_LINK_STATUS                    0x8B82\n#define GL_VALIDATE_STATUS                0x8B83\n#define GL_INFO_LOG_LENGTH                0x8B84\n#define GL_ATTACHED_SHADERS               0x8B85\n#define GL_ACTIVE_UNIFORMS                0x8B86\n#define GL_ACTIVE_UNIFORM_MAX_LENGTH      0x8B87\n#define GL_SHADER_SOURCE_LENGTH           0x8B88\n#define GL_ACTIVE_ATTRIBUTES              0x8B89\n#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH    0x8B8A\n#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT 0x8B8B\n#define GL_SHADING_LANGUAGE_VERSION       0x8B8C\n#define GL_CURRENT_PROGRAM                0x8B8D\n#define GL_POINT_SPRITE_COORD_ORIGIN      0x8CA0\n#define GL_LOWER_LEFT                     0x8CA1\n#define GL_UPPER_LEFT                     0x8CA2\n#define GL_STENCIL_BACK_REF               0x8CA3\n#define GL_STENCIL_BACK_VALUE_MASK        0x8CA4\n#define GL_STENCIL_BACK_WRITEMASK         0x8CA5\ntypedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);\ntypedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);\ntypedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);\ntypedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLuint mask);\ntypedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);\ntypedef void (APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);\ntypedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar *name);\ntypedef void (APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);\ntypedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) (void);\ntypedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);\ntypedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);\ntypedef void (APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);\ntypedef void (APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);\ntypedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);\ntypedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);\ntypedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);\ntypedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);\ntypedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);\ntypedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);\ntypedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);\ntypedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);\ntypedef void (APIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);\ntypedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);\ntypedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);\ntypedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);\ntypedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params);\ntypedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);\ntypedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *params);\ntypedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params);\ntypedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);\ntypedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, void **pointer);\ntypedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) (GLuint program);\ntypedef GLboolean (APIENTRYP PFNGLISSHADERPROC) (GLuint shader);\ntypedef void (APIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);\ntypedef void (APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);\ntypedef void (APIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);\ntypedef void (APIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);\ntypedef void (APIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);\ntypedef void (APIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);\ntypedef void (APIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);\ntypedef void (APIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);\ntypedef void (APIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);\ntypedef void (APIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);\ntypedef void (APIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);\ntypedef void (APIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *value);\ntypedef void (APIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *value);\ntypedef void (APIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *value);\ntypedef void (APIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *value);\ntypedef void (APIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value);\ntypedef void (APIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value);\ntypedef void (APIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value);\ntypedef void (APIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value);\ntypedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\ntypedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\ntypedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\ntypedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);\n#ifdef GL_GLEXT_PROTOTYPES\nGLAPI void APIENTRY glBlendEquationSeparate (GLenum modeRGB, GLenum modeAlpha);\nGLAPI void APIENTRY glDrawBuffers (GLsizei n, const GLenum *bufs);\nGLAPI void APIENTRY glStencilOpSeparate (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);\nGLAPI void APIENTRY glStencilFuncSeparate (GLenum face, GLenum func, GLint ref, GLuint mask);\nGLAPI void APIENTRY glStencilMaskSeparate (GLenum face, GLuint mask);\nGLAPI void APIENTRY glAttachShader (GLuint program, GLuint shader);\nGLAPI void APIENTRY glBindAttribLocation (GLuint program, GLuint index, const GLchar *name);\nGLAPI void APIENTRY glCompileShader (GLuint shader);\nGLAPI GLuint APIENTRY glCreateProgram (void);\nGLAPI GLuint APIENTRY glCreateShader (GLenum type);\nGLAPI void APIENTRY glDeleteProgram (GLuint program);\nGLAPI void APIENTRY glDeleteShader (GLuint shader);\nGLAPI void APIENTRY glDetachShader (GLuint program, GLuint shader);\nGLAPI void APIENTRY glDisableVertexAttribArray (GLuint index);\nGLAPI void APIENTRY glEnableVertexAttribArray (GLuint index);\nGLAPI void APIENTRY glGetActiveAttrib (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);\nGLAPI void APIENTRY glGetActiveUniform (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);\nGLAPI void APIENTRY glGetAttachedShaders (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);\nGLAPI GLint APIENTRY glGetAttribLocation (GLuint program, const GLchar *name);\nGLAPI void APIENTRY glGetProgramiv (GLuint program, GLenum pname, GLint *params);\nGLAPI void APIENTRY glGetProgramInfoLog (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);\nGLAPI void APIENTRY glGetShaderiv (GLuint shader, GLenum pname, GLint *params);\nGLAPI void APIENTRY glGetShaderInfoLog (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);\nGLAPI void APIENTRY glGetShaderSource (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);\nGLAPI GLint APIENTRY glGetUniformLocation (GLuint program, const GLchar *name);\nGLAPI void APIENTRY glGetUniformfv (GLuint program, GLint location, GLfloat *params);\nGLAPI void APIENTRY glGetUniformiv (GLuint program, GLint location, GLint *params);\nGLAPI void APIENTRY glGetVertexAttribdv (GLuint index, GLenum pname, GLdouble *params);\nGLAPI void APIENTRY glGetVertexAttribfv (GLuint index, GLenum pname, GLfloat *params);\nGLAPI void APIENTRY glGetVertexAttribiv (GLuint index, GLenum pname, GLint *params);\nGLAPI void APIENTRY glGetVertexAttribPointerv (GLuint index, GLenum pname, void **pointer);\nGLAPI GLboolean APIENTRY glIsProgram (GLuint program);\nGLAPI GLboolean APIENTRY glIsShader (GLuint shader);\nGLAPI void APIENTRY glLinkProgram (GLuint program);\nGLAPI void APIENTRY glShaderSource (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);\nGLAPI void APIENTRY glUseProgram (GLuint program);\nGLAPI void APIENTRY glUniform1f (GLint location, GLfloat v0);\nGLAPI void APIENTRY glUniform2f (GLint location, GLfloat v0, GLfloat v1);\nGLAPI void APIENTRY glUniform3f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);\nGLAPI void APIENTRY glUniform4f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);\nGLAPI void APIENTRY glUniform1i (GLint location, GLint v0);\nGLAPI void APIENTRY glUniform2i (GLint location, GLint v0, GLint v1);\nGLAPI void APIENTRY glUniform3i (GLint location, GLint v0, GLint v1, GLint v2);\nGLAPI void APIENTRY glUniform4i (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);\nGLAPI void APIENTRY glUniform1fv (GLint location, GLsizei count, const GLfloat *value);\nGLAPI void APIENTRY glUniform2fv (GLint location, GLsizei count, const GLfloat *value);\nGLAPI void APIENTRY glUniform3fv (GLint location, GLsizei count, const GLfloat *value);\nGLAPI void APIENTRY glUniform4fv (GLint location, GLsizei count, const GLfloat *value);\nGLAPI void APIENTRY glUniform1iv (GLint location, GLsizei count, const GLint *value);\nGLAPI void APIENTRY glUniform2iv (GLint location, GLsizei count, const GLint *value);\nGLAPI void APIENTRY glUniform3iv (GLint location, GLsizei count, const GLint *value);\nGLAPI void APIENTRY glUniform4iv (GLint location, GLsizei count, const GLint *value);\nGLAPI void APIENTRY glUniformMatrix2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\nGLAPI void APIENTRY glUniformMatrix3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\nGLAPI void APIENTRY glUniformMatrix4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\nGLAPI void APIENTRY glValidateProgram (GLuint program);\nGLAPI void APIENTRY glVertexAttrib1d (GLuint index, GLdouble x);\nGLAPI void APIENTRY glVertexAttrib1dv (GLuint index, const GLdouble *v);\nGLAPI void APIENTRY glVertexAttrib1f (GLuint index, GLfloat x);\nGLAPI void APIENTRY glVertexAttrib1fv (GLuint index, const GLfloat *v);\nGLAPI void APIENTRY glVertexAttrib1s (GLuint index, GLshort x);\nGLAPI void APIENTRY glVertexAttrib1sv (GLuint index, const GLshort *v);\nGLAPI void APIENTRY glVertexAttrib2d (GLuint index, GLdouble x, GLdouble y);\nGLAPI void APIENTRY glVertexAttrib2dv (GLuint index, const GLdouble *v);\nGLAPI void APIENTRY glVertexAttrib2f (GLuint index, GLfloat x, GLfloat y);\nGLAPI void APIENTRY glVertexAttrib2fv (GLuint index, const GLfloat *v);\nGLAPI void APIENTRY glVertexAttrib2s (GLuint index, GLshort x, GLshort y);\nGLAPI void APIENTRY glVertexAttrib2sv (GLuint index, const GLshort *v);\nGLAPI void APIENTRY glVertexAttrib3d (GLuint index, GLdouble x, GLdouble y, GLdouble z);\nGLAPI void APIENTRY glVertexAttrib3dv (GLuint index, const GLdouble *v);\nGLAPI void APIENTRY glVertexAttrib3f (GLuint index, GLfloat x, GLfloat y, GLfloat z);\nGLAPI void APIENTRY glVertexAttrib3fv (GLuint index, const GLfloat *v);\nGLAPI void APIENTRY glVertexAttrib3s (GLuint index, GLshort x, GLshort y, GLshort z);\nGLAPI void APIENTRY glVertexAttrib3sv (GLuint index, const GLshort *v);\nGLAPI void APIENTRY glVertexAttrib4Nbv (GLuint index, const GLbyte *v);\nGLAPI void APIENTRY glVertexAttrib4Niv (GLuint index, const GLint *v);\nGLAPI void APIENTRY glVertexAttrib4Nsv (GLuint index, const GLshort *v);\nGLAPI void APIENTRY glVertexAttrib4Nub (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);\nGLAPI void APIENTRY glVertexAttrib4Nubv (GLuint index, const GLubyte *v);\nGLAPI void APIENTRY glVertexAttrib4Nuiv (GLuint index, const GLuint *v);\nGLAPI void APIENTRY glVertexAttrib4Nusv (GLuint index, const GLushort *v);\nGLAPI void APIENTRY glVertexAttrib4bv (GLuint index, const GLbyte *v);\nGLAPI void APIENTRY glVertexAttrib4d (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);\nGLAPI void APIENTRY glVertexAttrib4dv (GLuint index, const GLdouble *v);\nGLAPI void APIENTRY glVertexAttrib4f (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);\nGLAPI void APIENTRY glVertexAttrib4fv (GLuint index, const GLfloat *v);\nGLAPI void APIENTRY glVertexAttrib4iv (GLuint index, const GLint *v);\nGLAPI void APIENTRY glVertexAttrib4s (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);\nGLAPI void APIENTRY glVertexAttrib4sv (GLuint index, const GLshort *v);\nGLAPI void APIENTRY glVertexAttrib4ubv (GLuint index, const GLubyte *v);\nGLAPI void APIENTRY glVertexAttrib4uiv (GLuint index, const GLuint *v);\nGLAPI void APIENTRY glVertexAttrib4usv (GLuint index, const GLushort *v);\nGLAPI void APIENTRY glVertexAttribPointer (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);\n#endif\n#endif /* GL_VERSION_2_0 */\n\n#ifndef GL_VERSION_2_1\n#define GL_VERSION_2_1 1\n#define GL_PIXEL_PACK_BUFFER              0x88EB\n#define GL_PIXEL_UNPACK_BUFFER            0x88EC\n#define GL_PIXEL_PACK_BUFFER_BINDING      0x88ED\n#define GL_PIXEL_UNPACK_BUFFER_BINDING    0x88EF\n#define GL_FLOAT_MAT2x3                   0x8B65\n#define GL_FLOAT_MAT2x4                   0x8B66\n#define GL_FLOAT_MAT3x2                   0x8B67\n#define GL_FLOAT_MAT3x4                   0x8B68\n#define GL_FLOAT_MAT4x2                   0x8B69\n#define GL_FLOAT_MAT4x3                   0x8B6A\n#define GL_SRGB                           0x8C40\n#define GL_SRGB8                          0x8C41\n#define GL_SRGB_ALPHA                     0x8C42\n#define GL_SRGB8_ALPHA8                   0x8C43\n#define GL_COMPRESSED_SRGB                0x8C48\n#define GL_COMPRESSED_SRGB_ALPHA          0x8C49\ntypedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\ntypedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\ntypedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\ntypedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\ntypedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\ntypedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\n#ifdef GL_GLEXT_PROTOTYPES\nGLAPI void APIENTRY glUniformMatrix2x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\nGLAPI void APIENTRY glUniformMatrix3x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\nGLAPI void APIENTRY glUniformMatrix2x4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\nGLAPI void APIENTRY glUniformMatrix4x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\nGLAPI void APIENTRY glUniformMatrix3x4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\nGLAPI void APIENTRY glUniformMatrix4x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\n#endif\n#endif /* GL_VERSION_2_1 */\n\n#ifndef GL_VERSION_3_0\n#define GL_VERSION_3_0 1\ntypedef unsigned short GLhalf;\n#define GL_COMPARE_REF_TO_TEXTURE         0x884E\n#define GL_CLIP_DISTANCE0                 0x3000\n#define GL_CLIP_DISTANCE1                 0x3001\n#define GL_CLIP_DISTANCE2                 0x3002\n#define GL_CLIP_DISTANCE3                 0x3003\n#define GL_CLIP_DISTANCE4                 0x3004\n#define GL_CLIP_DISTANCE5                 0x3005\n#define GL_CLIP_DISTANCE6                 0x3006\n#define GL_CLIP_DISTANCE7                 0x3007\n#define GL_MAX_CLIP_DISTANCES             0x0D32\n#define GL_MAJOR_VERSION                  0x821B\n#define GL_MINOR_VERSION                  0x821C\n#define GL_NUM_EXTENSIONS                 0x821D\n#define GL_CONTEXT_FLAGS                  0x821E\n#define GL_COMPRESSED_RED                 0x8225\n#define GL_COMPRESSED_RG                  0x8226\n#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT 0x00000001\n#define GL_RGBA32F                        0x8814\n#define GL_RGB32F                         0x8815\n#define GL_RGBA16F                        0x881A\n#define GL_RGB16F                         0x881B\n#define GL_VERTEX_ATTRIB_ARRAY_INTEGER    0x88FD\n#define GL_MAX_ARRAY_TEXTURE_LAYERS       0x88FF\n#define GL_MIN_PROGRAM_TEXEL_OFFSET       0x8904\n#define GL_MAX_PROGRAM_TEXEL_OFFSET       0x8905\n#define GL_CLAMP_READ_COLOR               0x891C\n#define GL_FIXED_ONLY                     0x891D\n#define GL_MAX_VARYING_COMPONENTS         0x8B4B\n#define GL_TEXTURE_1D_ARRAY               0x8C18\n#define GL_PROXY_TEXTURE_1D_ARRAY         0x8C19\n#define GL_TEXTURE_2D_ARRAY               0x8C1A\n#define GL_PROXY_TEXTURE_2D_ARRAY         0x8C1B\n#define GL_TEXTURE_BINDING_1D_ARRAY       0x8C1C\n#define GL_TEXTURE_BINDING_2D_ARRAY       0x8C1D\n#define GL_R11F_G11F_B10F                 0x8C3A\n#define GL_UNSIGNED_INT_10F_11F_11F_REV   0x8C3B\n#define GL_RGB9_E5                        0x8C3D\n#define GL_UNSIGNED_INT_5_9_9_9_REV       0x8C3E\n#define GL_TEXTURE_SHARED_SIZE            0x8C3F\n#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH 0x8C76\n#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE 0x8C7F\n#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS 0x8C80\n#define GL_TRANSFORM_FEEDBACK_VARYINGS    0x8C83\n#define GL_TRANSFORM_FEEDBACK_BUFFER_START 0x8C84\n#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE 0x8C85\n#define GL_PRIMITIVES_GENERATED           0x8C87\n#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN 0x8C88\n#define GL_RASTERIZER_DISCARD             0x8C89\n#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS 0x8C8A\n#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS 0x8C8B\n#define GL_INTERLEAVED_ATTRIBS            0x8C8C\n#define GL_SEPARATE_ATTRIBS               0x8C8D\n#define GL_TRANSFORM_FEEDBACK_BUFFER      0x8C8E\n#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING 0x8C8F\n#define GL_RGBA32UI                       0x8D70\n#define GL_RGB32UI                        0x8D71\n#define GL_RGBA16UI                       0x8D76\n#define GL_RGB16UI                        0x8D77\n#define GL_RGBA8UI                        0x8D7C\n#define GL_RGB8UI                         0x8D7D\n#define GL_RGBA32I                        0x8D82\n#define GL_RGB32I                         0x8D83\n#define GL_RGBA16I                        0x8D88\n#define GL_RGB16I                         0x8D89\n#define GL_RGBA8I                         0x8D8E\n#define GL_RGB8I                          0x8D8F\n#define GL_RED_INTEGER                    0x8D94\n#define GL_GREEN_INTEGER                  0x8D95\n#define GL_BLUE_INTEGER                   0x8D96\n#define GL_RGB_INTEGER                    0x8D98\n#define GL_RGBA_INTEGER                   0x8D99\n#define GL_BGR_INTEGER                    0x8D9A\n#define GL_BGRA_INTEGER                   0x8D9B\n#define GL_SAMPLER_1D_ARRAY               0x8DC0\n#define GL_SAMPLER_2D_ARRAY               0x8DC1\n#define GL_SAMPLER_1D_ARRAY_SHADOW        0x8DC3\n#define GL_SAMPLER_2D_ARRAY_SHADOW        0x8DC4\n#define GL_SAMPLER_CUBE_SHADOW            0x8DC5\n#define GL_UNSIGNED_INT_VEC2              0x8DC6\n#define GL_UNSIGNED_INT_VEC3              0x8DC7\n#define GL_UNSIGNED_INT_VEC4              0x8DC8\n#define GL_INT_SAMPLER_1D                 0x8DC9\n#define GL_INT_SAMPLER_2D                 0x8DCA\n#define GL_INT_SAMPLER_3D                 0x8DCB\n#define GL_INT_SAMPLER_CUBE               0x8DCC\n#define GL_INT_SAMPLER_1D_ARRAY           0x8DCE\n#define GL_INT_SAMPLER_2D_ARRAY           0x8DCF\n#define GL_UNSIGNED_INT_SAMPLER_1D        0x8DD1\n#define GL_UNSIGNED_INT_SAMPLER_2D        0x8DD2\n#define GL_UNSIGNED_INT_SAMPLER_3D        0x8DD3\n#define GL_UNSIGNED_INT_SAMPLER_CUBE      0x8DD4\n#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY  0x8DD6\n#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY  0x8DD7\n#define GL_QUERY_WAIT                     0x8E13\n#define GL_QUERY_NO_WAIT                  0x8E14\n#define GL_QUERY_BY_REGION_WAIT           0x8E15\n#define GL_QUERY_BY_REGION_NO_WAIT        0x8E16\n#define GL_BUFFER_ACCESS_FLAGS            0x911F\n#define GL_BUFFER_MAP_LENGTH              0x9120\n#define GL_BUFFER_MAP_OFFSET              0x9121\n#define GL_DEPTH_COMPONENT32F             0x8CAC\n#define GL_DEPTH32F_STENCIL8              0x8CAD\n#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV 0x8DAD\n#define GL_INVALID_FRAMEBUFFER_OPERATION  0x0506\n#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210\n#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211\n#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212\n#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213\n#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214\n#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215\n#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216\n#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217\n#define GL_FRAMEBUFFER_DEFAULT            0x8218\n#define GL_FRAMEBUFFER_UNDEFINED          0x8219\n#define GL_DEPTH_STENCIL_ATTACHMENT       0x821A\n#define GL_MAX_RENDERBUFFER_SIZE          0x84E8\n#define GL_DEPTH_STENCIL                  0x84F9\n#define GL_UNSIGNED_INT_24_8              0x84FA\n#define GL_DEPTH24_STENCIL8               0x88F0\n#define GL_TEXTURE_STENCIL_SIZE           0x88F1\n#define GL_TEXTURE_RED_TYPE               0x8C10\n#define GL_TEXTURE_GREEN_TYPE             0x8C11\n#define GL_TEXTURE_BLUE_TYPE              0x8C12\n#define GL_TEXTURE_ALPHA_TYPE             0x8C13\n#define GL_TEXTURE_DEPTH_TYPE             0x8C16\n#define GL_UNSIGNED_NORMALIZED            0x8C17\n#define GL_FRAMEBUFFER_BINDING            0x8CA6\n#define GL_DRAW_FRAMEBUFFER_BINDING       0x8CA6\n#define GL_RENDERBUFFER_BINDING           0x8CA7\n#define GL_READ_FRAMEBUFFER               0x8CA8\n#define GL_DRAW_FRAMEBUFFER               0x8CA9\n#define GL_READ_FRAMEBUFFER_BINDING       0x8CAA\n#define GL_RENDERBUFFER_SAMPLES           0x8CAB\n#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0\n#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1\n#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2\n#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3\n#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4\n#define GL_FRAMEBUFFER_COMPLETE           0x8CD5\n#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6\n#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7\n#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB\n#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC\n#define GL_FRAMEBUFFER_UNSUPPORTED        0x8CDD\n#define GL_MAX_COLOR_ATTACHMENTS          0x8CDF\n#define GL_COLOR_ATTACHMENT0              0x8CE0\n#define GL_COLOR_ATTACHMENT1              0x8CE1\n#define GL_COLOR_ATTACHMENT2              0x8CE2\n#define GL_COLOR_ATTACHMENT3              0x8CE3\n#define GL_COLOR_ATTACHMENT4              0x8CE4\n#define GL_COLOR_ATTACHMENT5              0x8CE5\n#define GL_COLOR_ATTACHMENT6              0x8CE6\n#define GL_COLOR_ATTACHMENT7              0x8CE7\n#define GL_COLOR_ATTACHMENT8              0x8CE8\n#define GL_COLOR_ATTACHMENT9              0x8CE9\n#define GL_COLOR_ATTACHMENT10             0x8CEA\n#define GL_COLOR_ATTACHMENT11             0x8CEB\n#define GL_COLOR_ATTACHMENT12             0x8CEC\n#define GL_COLOR_ATTACHMENT13             0x8CED\n#define GL_COLOR_ATTACHMENT14             0x8CEE\n#define GL_COLOR_ATTACHMENT15             0x8CEF\n#define GL_DEPTH_ATTACHMENT               0x8D00\n#define GL_STENCIL_ATTACHMENT             0x8D20\n#define GL_FRAMEBUFFER                    0x8D40\n#define GL_RENDERBUFFER                   0x8D41\n#define GL_RENDERBUFFER_WIDTH             0x8D42\n#define GL_RENDERBUFFER_HEIGHT            0x8D43\n#define GL_RENDERBUFFER_INTERNAL_FORMAT   0x8D44\n#define GL_STENCIL_INDEX1                 0x8D46\n#define GL_STENCIL_INDEX4                 0x8D47\n#define GL_STENCIL_INDEX8                 0x8D48\n#define GL_STENCIL_INDEX16                0x8D49\n#define GL_RENDERBUFFER_RED_SIZE          0x8D50\n#define GL_RENDERBUFFER_GREEN_SIZE        0x8D51\n#define GL_RENDERBUFFER_BLUE_SIZE         0x8D52\n#define GL_RENDERBUFFER_ALPHA_SIZE        0x8D53\n#define GL_RENDERBUFFER_DEPTH_SIZE        0x8D54\n#define GL_RENDERBUFFER_STENCIL_SIZE      0x8D55\n#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56\n#define GL_MAX_SAMPLES                    0x8D57\n#define GL_FRAMEBUFFER_SRGB               0x8DB9\n#define GL_HALF_FLOAT                     0x140B\n#define GL_MAP_READ_BIT                   0x0001\n#define GL_MAP_WRITE_BIT                  0x0002\n#define GL_MAP_INVALIDATE_RANGE_BIT       0x0004\n#define GL_MAP_INVALIDATE_BUFFER_BIT      0x0008\n#define GL_MAP_FLUSH_EXPLICIT_BIT         0x0010\n#define GL_MAP_UNSYNCHRONIZED_BIT         0x0020\n#define GL_COMPRESSED_RED_RGTC1           0x8DBB\n#define GL_COMPRESSED_SIGNED_RED_RGTC1    0x8DBC\n#define GL_COMPRESSED_RG_RGTC2            0x8DBD\n#define GL_COMPRESSED_SIGNED_RG_RGTC2     0x8DBE\n#define GL_RG                             0x8227\n#define GL_RG_INTEGER                     0x8228\n#define GL_R8                             0x8229\n#define GL_R16                            0x822A\n#define GL_RG8                            0x822B\n#define GL_RG16                           0x822C\n#define GL_R16F                           0x822D\n#define GL_R32F                           0x822E\n#define GL_RG16F                          0x822F\n#define GL_RG32F                          0x8230\n#define GL_R8I                            0x8231\n#define GL_R8UI                           0x8232\n#define GL_R16I                           0x8233\n#define GL_R16UI                          0x8234\n#define GL_R32I                           0x8235\n#define GL_R32UI                          0x8236\n#define GL_RG8I                           0x8237\n#define GL_RG8UI                          0x8238\n#define GL_RG16I                          0x8239\n#define GL_RG16UI                         0x823A\n#define GL_RG32I                          0x823B\n#define GL_RG32UI                         0x823C\n#define GL_VERTEX_ARRAY_BINDING           0x85B5\ntypedef void (APIENTRYP PFNGLCOLORMASKIPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);\ntypedef void (APIENTRYP PFNGLGETBOOLEANI_VPROC) (GLenum target, GLuint index, GLboolean *data);\ntypedef void (APIENTRYP PFNGLGETINTEGERI_VPROC) (GLenum target, GLuint index, GLint *data);\ntypedef void (APIENTRYP PFNGLENABLEIPROC) (GLenum target, GLuint index);\ntypedef void (APIENTRYP PFNGLDISABLEIPROC) (GLenum target, GLuint index);\ntypedef GLboolean (APIENTRYP PFNGLISENABLEDIPROC) (GLenum target, GLuint index);\ntypedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKPROC) (GLenum primitiveMode);\ntypedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKPROC) (void);\ntypedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);\ntypedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC) (GLenum target, GLuint index, GLuint buffer);\ntypedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);\ntypedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);\ntypedef void (APIENTRYP PFNGLCLAMPCOLORPROC) (GLenum target, GLenum clamp);\ntypedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERPROC) (GLuint id, GLenum mode);\ntypedef void (APIENTRYP PFNGLENDCONDITIONALRENDERPROC) (void);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);\ntypedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVPROC) (GLuint index, GLenum pname, GLint *params);\ntypedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVPROC) (GLuint index, GLenum pname, GLuint *params);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBI1IPROC) (GLuint index, GLint x);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBI2IPROC) (GLuint index, GLint x, GLint y);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBI3IPROC) (GLuint index, GLint x, GLint y, GLint z);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBI4IPROC) (GLuint index, GLint x, GLint y, GLint z, GLint w);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIPROC) (GLuint index, GLuint x);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIPROC) (GLuint index, GLuint x, GLuint y);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVPROC) (GLuint index, const GLint *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVPROC) (GLuint index, const GLint *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVPROC) (GLuint index, const GLint *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVPROC) (GLuint index, const GLint *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVPROC) (GLuint index, const GLuint *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVPROC) (GLuint index, const GLuint *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVPROC) (GLuint index, const GLuint *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVPROC) (GLuint index, const GLuint *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVPROC) (GLuint index, const GLbyte *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVPROC) (GLuint index, const GLshort *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVPROC) (GLuint index, const GLubyte *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVPROC) (GLuint index, const GLushort *v);\ntypedef void (APIENTRYP PFNGLGETUNIFORMUIVPROC) (GLuint program, GLint location, GLuint *params);\ntypedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONPROC) (GLuint program, GLuint color, const GLchar *name);\ntypedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONPROC) (GLuint program, const GLchar *name);\ntypedef void (APIENTRYP PFNGLUNIFORM1UIPROC) (GLint location, GLuint v0);\ntypedef void (APIENTRYP PFNGLUNIFORM2UIPROC) (GLint location, GLuint v0, GLuint v1);\ntypedef void (APIENTRYP PFNGLUNIFORM3UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);\ntypedef void (APIENTRYP PFNGLUNIFORM4UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);\ntypedef void (APIENTRYP PFNGLUNIFORM1UIVPROC) (GLint location, GLsizei count, const GLuint *value);\ntypedef void (APIENTRYP PFNGLUNIFORM2UIVPROC) (GLint location, GLsizei count, const GLuint *value);\ntypedef void (APIENTRYP PFNGLUNIFORM3UIVPROC) (GLint location, GLsizei count, const GLuint *value);\ntypedef void (APIENTRYP PFNGLUNIFORM4UIVPROC) (GLint location, GLsizei count, const GLuint *value);\ntypedef void (APIENTRYP PFNGLTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, const GLint *params);\ntypedef void (APIENTRYP PFNGLTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, const GLuint *params);\ntypedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, GLint *params);\ntypedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, GLuint *params);\ntypedef void (APIENTRYP PFNGLCLEARBUFFERIVPROC) (GLenum buffer, GLint drawbuffer, const GLint *value);\ntypedef void (APIENTRYP PFNGLCLEARBUFFERUIVPROC) (GLenum buffer, GLint drawbuffer, const GLuint *value);\ntypedef void (APIENTRYP PFNGLCLEARBUFFERFVPROC) (GLenum buffer, GLint drawbuffer, const GLfloat *value);\ntypedef void (APIENTRYP PFNGLCLEARBUFFERFIPROC) (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);\ntypedef const GLubyte *(APIENTRYP PFNGLGETSTRINGIPROC) (GLenum name, GLuint index);\ntypedef GLboolean (APIENTRYP PFNGLISRENDERBUFFERPROC) (GLuint renderbuffer);\ntypedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);\ntypedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);\ntypedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);\ntypedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);\ntypedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);\ntypedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFERPROC) (GLuint framebuffer);\ntypedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);\ntypedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);\ntypedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);\ntypedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);\ntypedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);\ntypedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);\ntypedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);\ntypedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);\ntypedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);\ntypedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC) (GLenum target);\ntypedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);\ntypedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);\ntypedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);\ntypedef void *(APIENTRYP PFNGLMAPBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);\ntypedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length);\ntypedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC) (GLuint array);\ntypedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC) (GLsizei n, const GLuint *arrays);\ntypedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);\ntypedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYPROC) (GLuint array);\n#ifdef GL_GLEXT_PROTOTYPES\nGLAPI void APIENTRY glColorMaski (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);\nGLAPI void APIENTRY glGetBooleani_v (GLenum target, GLuint index, GLboolean *data);\nGLAPI void APIENTRY glGetIntegeri_v (GLenum target, GLuint index, GLint *data);\nGLAPI void APIENTRY glEnablei (GLenum target, GLuint index);\nGLAPI void APIENTRY glDisablei (GLenum target, GLuint index);\nGLAPI GLboolean APIENTRY glIsEnabledi (GLenum target, GLuint index);\nGLAPI void APIENTRY glBeginTransformFeedback (GLenum primitiveMode);\nGLAPI void APIENTRY glEndTransformFeedback (void);\nGLAPI void APIENTRY glBindBufferRange (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);\nGLAPI void APIENTRY glBindBufferBase (GLenum target, GLuint index, GLuint buffer);\nGLAPI void APIENTRY glTransformFeedbackVaryings (GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);\nGLAPI void APIENTRY glGetTransformFeedbackVarying (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);\nGLAPI void APIENTRY glClampColor (GLenum target, GLenum clamp);\nGLAPI void APIENTRY glBeginConditionalRender (GLuint id, GLenum mode);\nGLAPI void APIENTRY glEndConditionalRender (void);\nGLAPI void APIENTRY glVertexAttribIPointer (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);\nGLAPI void APIENTRY glGetVertexAttribIiv (GLuint index, GLenum pname, GLint *params);\nGLAPI void APIENTRY glGetVertexAttribIuiv (GLuint index, GLenum pname, GLuint *params);\nGLAPI void APIENTRY glVertexAttribI1i (GLuint index, GLint x);\nGLAPI void APIENTRY glVertexAttribI2i (GLuint index, GLint x, GLint y);\nGLAPI void APIENTRY glVertexAttribI3i (GLuint index, GLint x, GLint y, GLint z);\nGLAPI void APIENTRY glVertexAttribI4i (GLuint index, GLint x, GLint y, GLint z, GLint w);\nGLAPI void APIENTRY glVertexAttribI1ui (GLuint index, GLuint x);\nGLAPI void APIENTRY glVertexAttribI2ui (GLuint index, GLuint x, GLuint y);\nGLAPI void APIENTRY glVertexAttribI3ui (GLuint index, GLuint x, GLuint y, GLuint z);\nGLAPI void APIENTRY glVertexAttribI4ui (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);\nGLAPI void APIENTRY glVertexAttribI1iv (GLuint index, const GLint *v);\nGLAPI void APIENTRY glVertexAttribI2iv (GLuint index, const GLint *v);\nGLAPI void APIENTRY glVertexAttribI3iv (GLuint index, const GLint *v);\nGLAPI void APIENTRY glVertexAttribI4iv (GLuint index, const GLint *v);\nGLAPI void APIENTRY glVertexAttribI1uiv (GLuint index, const GLuint *v);\nGLAPI void APIENTRY glVertexAttribI2uiv (GLuint index, const GLuint *v);\nGLAPI void APIENTRY glVertexAttribI3uiv (GLuint index, const GLuint *v);\nGLAPI void APIENTRY glVertexAttribI4uiv (GLuint index, const GLuint *v);\nGLAPI void APIENTRY glVertexAttribI4bv (GLuint index, const GLbyte *v);\nGLAPI void APIENTRY glVertexAttribI4sv (GLuint index, const GLshort *v);\nGLAPI void APIENTRY glVertexAttribI4ubv (GLuint index, const GLubyte *v);\nGLAPI void APIENTRY glVertexAttribI4usv (GLuint index, const GLushort *v);\nGLAPI void APIENTRY glGetUniformuiv (GLuint program, GLint location, GLuint *params);\nGLAPI void APIENTRY glBindFragDataLocation (GLuint program, GLuint color, const GLchar *name);\nGLAPI GLint APIENTRY glGetFragDataLocation (GLuint program, const GLchar *name);\nGLAPI void APIENTRY glUniform1ui (GLint location, GLuint v0);\nGLAPI void APIENTRY glUniform2ui (GLint location, GLuint v0, GLuint v1);\nGLAPI void APIENTRY glUniform3ui (GLint location, GLuint v0, GLuint v1, GLuint v2);\nGLAPI void APIENTRY glUniform4ui (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);\nGLAPI void APIENTRY glUniform1uiv (GLint location, GLsizei count, const GLuint *value);\nGLAPI void APIENTRY glUniform2uiv (GLint location, GLsizei count, const GLuint *value);\nGLAPI void APIENTRY glUniform3uiv (GLint location, GLsizei count, const GLuint *value);\nGLAPI void APIENTRY glUniform4uiv (GLint location, GLsizei count, const GLuint *value);\nGLAPI void APIENTRY glTexParameterIiv (GLenum target, GLenum pname, const GLint *params);\nGLAPI void APIENTRY glTexParameterIuiv (GLenum target, GLenum pname, const GLuint *params);\nGLAPI void APIENTRY glGetTexParameterIiv (GLenum target, GLenum pname, GLint *params);\nGLAPI void APIENTRY glGetTexParameterIuiv (GLenum target, GLenum pname, GLuint *params);\nGLAPI void APIENTRY glClearBufferiv (GLenum buffer, GLint drawbuffer, const GLint *value);\nGLAPI void APIENTRY glClearBufferuiv (GLenum buffer, GLint drawbuffer, const GLuint *value);\nGLAPI void APIENTRY glClearBufferfv (GLenum buffer, GLint drawbuffer, const GLfloat *value);\nGLAPI void APIENTRY glClearBufferfi (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);\nGLAPI const GLubyte *APIENTRY glGetStringi (GLenum name, GLuint index);\nGLAPI GLboolean APIENTRY glIsRenderbuffer (GLuint renderbuffer);\nGLAPI void APIENTRY glBindRenderbuffer (GLenum target, GLuint renderbuffer);\nGLAPI void APIENTRY glDeleteRenderbuffers (GLsizei n, const GLuint *renderbuffers);\nGLAPI void APIENTRY glGenRenderbuffers (GLsizei n, GLuint *renderbuffers);\nGLAPI void APIENTRY glRenderbufferStorage (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);\nGLAPI void APIENTRY glGetRenderbufferParameteriv (GLenum target, GLenum pname, GLint *params);\nGLAPI GLboolean APIENTRY glIsFramebuffer (GLuint framebuffer);\nGLAPI void APIENTRY glBindFramebuffer (GLenum target, GLuint framebuffer);\nGLAPI void APIENTRY glDeleteFramebuffers (GLsizei n, const GLuint *framebuffers);\nGLAPI void APIENTRY glGenFramebuffers (GLsizei n, GLuint *framebuffers);\nGLAPI GLenum APIENTRY glCheckFramebufferStatus (GLenum target);\nGLAPI void APIENTRY glFramebufferTexture1D (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);\nGLAPI void APIENTRY glFramebufferTexture2D (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);\nGLAPI void APIENTRY glFramebufferTexture3D (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);\nGLAPI void APIENTRY glFramebufferRenderbuffer (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);\nGLAPI void APIENTRY glGetFramebufferAttachmentParameteriv (GLenum target, GLenum attachment, GLenum pname, GLint *params);\nGLAPI void APIENTRY glGenerateMipmap (GLenum target);\nGLAPI void APIENTRY glBlitFramebuffer (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);\nGLAPI void APIENTRY glRenderbufferStorageMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);\nGLAPI void APIENTRY glFramebufferTextureLayer (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);\nGLAPI void *APIENTRY glMapBufferRange (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);\nGLAPI void APIENTRY glFlushMappedBufferRange (GLenum target, GLintptr offset, GLsizeiptr length);\nGLAPI void APIENTRY glBindVertexArray (GLuint array);\nGLAPI void APIENTRY glDeleteVertexArrays (GLsizei n, const GLuint *arrays);\nGLAPI void APIENTRY glGenVertexArrays (GLsizei n, GLuint *arrays);\nGLAPI GLboolean APIENTRY glIsVertexArray (GLuint array);\n#endif\n#endif /* GL_VERSION_3_0 */\n\n#ifndef GL_VERSION_3_1\n#define GL_VERSION_3_1 1\n#define GL_SAMPLER_2D_RECT                0x8B63\n#define GL_SAMPLER_2D_RECT_SHADOW         0x8B64\n#define GL_SAMPLER_BUFFER                 0x8DC2\n#define GL_INT_SAMPLER_2D_RECT            0x8DCD\n#define GL_INT_SAMPLER_BUFFER             0x8DD0\n#define GL_UNSIGNED_INT_SAMPLER_2D_RECT   0x8DD5\n#define GL_UNSIGNED_INT_SAMPLER_BUFFER    0x8DD8\n#define GL_TEXTURE_BUFFER                 0x8C2A\n#define GL_MAX_TEXTURE_BUFFER_SIZE        0x8C2B\n#define GL_TEXTURE_BINDING_BUFFER         0x8C2C\n#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING 0x8C2D\n#define GL_TEXTURE_RECTANGLE              0x84F5\n#define GL_TEXTURE_BINDING_RECTANGLE      0x84F6\n#define GL_PROXY_TEXTURE_RECTANGLE        0x84F7\n#define GL_MAX_RECTANGLE_TEXTURE_SIZE     0x84F8\n#define GL_R8_SNORM                       0x8F94\n#define GL_RG8_SNORM                      0x8F95\n#define GL_RGB8_SNORM                     0x8F96\n#define GL_RGBA8_SNORM                    0x8F97\n#define GL_R16_SNORM                      0x8F98\n#define GL_RG16_SNORM                     0x8F99\n#define GL_RGB16_SNORM                    0x8F9A\n#define GL_RGBA16_SNORM                   0x8F9B\n#define GL_SIGNED_NORMALIZED              0x8F9C\n#define GL_PRIMITIVE_RESTART              0x8F9D\n#define GL_PRIMITIVE_RESTART_INDEX        0x8F9E\n#define GL_COPY_READ_BUFFER               0x8F36\n#define GL_COPY_WRITE_BUFFER              0x8F37\n#define GL_UNIFORM_BUFFER                 0x8A11\n#define GL_UNIFORM_BUFFER_BINDING         0x8A28\n#define GL_UNIFORM_BUFFER_START           0x8A29\n#define GL_UNIFORM_BUFFER_SIZE            0x8A2A\n#define GL_MAX_VERTEX_UNIFORM_BLOCKS      0x8A2B\n#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS    0x8A2C\n#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS    0x8A2D\n#define GL_MAX_COMBINED_UNIFORM_BLOCKS    0x8A2E\n#define GL_MAX_UNIFORM_BUFFER_BINDINGS    0x8A2F\n#define GL_MAX_UNIFORM_BLOCK_SIZE         0x8A30\n#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS 0x8A31\n#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS 0x8A32\n#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS 0x8A33\n#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT 0x8A34\n#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH 0x8A35\n#define GL_ACTIVE_UNIFORM_BLOCKS          0x8A36\n#define GL_UNIFORM_TYPE                   0x8A37\n#define GL_UNIFORM_SIZE                   0x8A38\n#define GL_UNIFORM_NAME_LENGTH            0x8A39\n#define GL_UNIFORM_BLOCK_INDEX            0x8A3A\n#define GL_UNIFORM_OFFSET                 0x8A3B\n#define GL_UNIFORM_ARRAY_STRIDE           0x8A3C\n#define GL_UNIFORM_MATRIX_STRIDE          0x8A3D\n#define GL_UNIFORM_IS_ROW_MAJOR           0x8A3E\n#define GL_UNIFORM_BLOCK_BINDING          0x8A3F\n#define GL_UNIFORM_BLOCK_DATA_SIZE        0x8A40\n#define GL_UNIFORM_BLOCK_NAME_LENGTH      0x8A41\n#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS  0x8A42\n#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES 0x8A43\n#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER 0x8A44\n#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER 0x8A45\n#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER 0x8A46\n#define GL_INVALID_INDEX                  0xFFFFFFFFu\ntypedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDPROC) (GLenum mode, GLint first, GLsizei count, GLsizei instancecount);\ntypedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);\ntypedef void (APIENTRYP PFNGLTEXBUFFERPROC) (GLenum target, GLenum internalformat, GLuint buffer);\ntypedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXPROC) (GLuint index);\ntypedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC) (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);\ntypedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC) (GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);\ntypedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC) (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);\ntypedef void (APIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC) (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);\ntypedef GLuint (APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC) (GLuint program, const GLchar *uniformBlockName);\ntypedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);\ntypedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);\ntypedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC) (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);\n#ifdef GL_GLEXT_PROTOTYPES\nGLAPI void APIENTRY glDrawArraysInstanced (GLenum mode, GLint first, GLsizei count, GLsizei instancecount);\nGLAPI void APIENTRY glDrawElementsInstanced (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);\nGLAPI void APIENTRY glTexBuffer (GLenum target, GLenum internalformat, GLuint buffer);\nGLAPI void APIENTRY glPrimitiveRestartIndex (GLuint index);\nGLAPI void APIENTRY glCopyBufferSubData (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);\nGLAPI void APIENTRY glGetUniformIndices (GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);\nGLAPI void APIENTRY glGetActiveUniformsiv (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);\nGLAPI void APIENTRY glGetActiveUniformName (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);\nGLAPI GLuint APIENTRY glGetUniformBlockIndex (GLuint program, const GLchar *uniformBlockName);\nGLAPI void APIENTRY glGetActiveUniformBlockiv (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);\nGLAPI void APIENTRY glGetActiveUniformBlockName (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);\nGLAPI void APIENTRY glUniformBlockBinding (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);\n#endif\n#endif /* GL_VERSION_3_1 */\n\n#ifndef GL_VERSION_3_2\n#define GL_VERSION_3_2 1\ntypedef struct __GLsync *GLsync;\n#ifndef GLEXT_64_TYPES_DEFINED\n/* This code block is duplicated in glxext.h, so must be protected */\n#define GLEXT_64_TYPES_DEFINED\n/* Define int32_t, int64_t, and uint64_t types for UST/MSC */\n/* (as used in the GL_EXT_timer_query extension). */\n#if defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L\n#include <inttypes.h>\n#elif defined(__sun__) || defined(__digital__)\n#include <inttypes.h>\n#if defined(__STDC__)\n#if defined(__arch64__) || defined(_LP64)\ntypedef long int int64_t;\ntypedef unsigned long int uint64_t;\n#else\ntypedef long long int int64_t;\ntypedef unsigned long long int uint64_t;\n#endif /* __arch64__ */\n#endif /* __STDC__ */\n#elif defined( __VMS ) || defined(__sgi)\n#include <inttypes.h>\n#elif defined(__SCO__) || defined(__USLC__)\n#include <stdint.h>\n#elif defined(__UNIXOS2__) || defined(__SOL64__)\ntypedef long int int32_t;\ntypedef long long int int64_t;\ntypedef unsigned long long int uint64_t;\n#elif defined(_WIN32) && defined(__GNUC__)\n#include <stdint.h>\n#elif defined(_WIN32)\ntypedef __int32 int32_t;\ntypedef __int64 int64_t;\ntypedef unsigned __int64 uint64_t;\n#else\n/* Fallback if nothing above works */\n#include <inttypes.h>\n#endif\n#endif\ntypedef uint64_t GLuint64;\ntypedef int64_t GLint64;\n#define GL_CONTEXT_CORE_PROFILE_BIT       0x00000001\n#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT 0x00000002\n#define GL_LINES_ADJACENCY                0x000A\n#define GL_LINE_STRIP_ADJACENCY           0x000B\n#define GL_TRIANGLES_ADJACENCY            0x000C\n#define GL_TRIANGLE_STRIP_ADJACENCY       0x000D\n#define GL_PROGRAM_POINT_SIZE             0x8642\n#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS 0x8C29\n#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED 0x8DA7\n#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS 0x8DA8\n#define GL_GEOMETRY_SHADER                0x8DD9\n#define GL_GEOMETRY_VERTICES_OUT          0x8916\n#define GL_GEOMETRY_INPUT_TYPE            0x8917\n#define GL_GEOMETRY_OUTPUT_TYPE           0x8918\n#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS 0x8DDF\n#define GL_MAX_GEOMETRY_OUTPUT_VERTICES   0x8DE0\n#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS 0x8DE1\n#define GL_MAX_VERTEX_OUTPUT_COMPONENTS   0x9122\n#define GL_MAX_GEOMETRY_INPUT_COMPONENTS  0x9123\n#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS 0x9124\n#define GL_MAX_FRAGMENT_INPUT_COMPONENTS  0x9125\n#define GL_CONTEXT_PROFILE_MASK           0x9126\n#define GL_DEPTH_CLAMP                    0x864F\n#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION 0x8E4C\n#define GL_FIRST_VERTEX_CONVENTION        0x8E4D\n#define GL_LAST_VERTEX_CONVENTION         0x8E4E\n#define GL_PROVOKING_VERTEX               0x8E4F\n#define GL_TEXTURE_CUBE_MAP_SEAMLESS      0x884F\n#define GL_MAX_SERVER_WAIT_TIMEOUT        0x9111\n#define GL_OBJECT_TYPE                    0x9112\n#define GL_SYNC_CONDITION                 0x9113\n#define GL_SYNC_STATUS                    0x9114\n#define GL_SYNC_FLAGS                     0x9115\n#define GL_SYNC_FENCE                     0x9116\n#define GL_SYNC_GPU_COMMANDS_COMPLETE     0x9117\n#define GL_UNSIGNALED                     0x9118\n#define GL_SIGNALED                       0x9119\n#define GL_ALREADY_SIGNALED               0x911A\n#define GL_TIMEOUT_EXPIRED                0x911B\n#define GL_CONDITION_SATISFIED            0x911C\n#define GL_WAIT_FAILED                    0x911D\n#define GL_TIMEOUT_IGNORED                0xFFFFFFFFFFFFFFFFull\n#define GL_SYNC_FLUSH_COMMANDS_BIT        0x00000001\n#define GL_SAMPLE_POSITION                0x8E50\n#define GL_SAMPLE_MASK                    0x8E51\n#define GL_SAMPLE_MASK_VALUE              0x8E52\n#define GL_MAX_SAMPLE_MASK_WORDS          0x8E59\n#define GL_TEXTURE_2D_MULTISAMPLE         0x9100\n#define GL_PROXY_TEXTURE_2D_MULTISAMPLE   0x9101\n#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY   0x9102\n#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9103\n#define GL_TEXTURE_BINDING_2D_MULTISAMPLE 0x9104\n#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY 0x9105\n#define GL_TEXTURE_SAMPLES                0x9106\n#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS 0x9107\n#define GL_SAMPLER_2D_MULTISAMPLE         0x9108\n#define GL_INT_SAMPLER_2D_MULTISAMPLE     0x9109\n#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE 0x910A\n#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY   0x910B\n#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910C\n#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910D\n#define GL_MAX_COLOR_TEXTURE_SAMPLES      0x910E\n#define GL_MAX_DEPTH_TEXTURE_SAMPLES      0x910F\n#define GL_MAX_INTEGER_SAMPLES            0x9110\ntypedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);\ntypedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);\ntypedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);\ntypedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);\ntypedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC) (GLenum mode);\ntypedef GLsync (APIENTRYP PFNGLFENCESYNCPROC) (GLenum condition, GLbitfield flags);\ntypedef GLboolean (APIENTRYP PFNGLISSYNCPROC) (GLsync sync);\ntypedef void (APIENTRYP PFNGLDELETESYNCPROC) (GLsync sync);\ntypedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);\ntypedef void (APIENTRYP PFNGLWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);\ntypedef void (APIENTRYP PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64 *data);\ntypedef void (APIENTRYP PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);\ntypedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC) (GLenum target, GLuint index, GLint64 *data);\ntypedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum pname, GLint64 *params);\ntypedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);\ntypedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);\ntypedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);\ntypedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC) (GLenum pname, GLuint index, GLfloat *val);\ntypedef void (APIENTRYP PFNGLSAMPLEMASKIPROC) (GLuint maskNumber, GLbitfield mask);\n#ifdef GL_GLEXT_PROTOTYPES\nGLAPI void APIENTRY glDrawElementsBaseVertex (GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);\nGLAPI void APIENTRY glDrawRangeElementsBaseVertex (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);\nGLAPI void APIENTRY glDrawElementsInstancedBaseVertex (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);\nGLAPI void APIENTRY glMultiDrawElementsBaseVertex (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);\nGLAPI void APIENTRY glProvokingVertex (GLenum mode);\nGLAPI GLsync APIENTRY glFenceSync (GLenum condition, GLbitfield flags);\nGLAPI GLboolean APIENTRY glIsSync (GLsync sync);\nGLAPI void APIENTRY glDeleteSync (GLsync sync);\nGLAPI GLenum APIENTRY glClientWaitSync (GLsync sync, GLbitfield flags, GLuint64 timeout);\nGLAPI void APIENTRY glWaitSync (GLsync sync, GLbitfield flags, GLuint64 timeout);\nGLAPI void APIENTRY glGetInteger64v (GLenum pname, GLint64 *data);\nGLAPI void APIENTRY glGetSynciv (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);\nGLAPI void APIENTRY glGetInteger64i_v (GLenum target, GLuint index, GLint64 *data);\nGLAPI void APIENTRY glGetBufferParameteri64v (GLenum target, GLenum pname, GLint64 *params);\nGLAPI void APIENTRY glFramebufferTexture (GLenum target, GLenum attachment, GLuint texture, GLint level);\nGLAPI void APIENTRY glTexImage2DMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);\nGLAPI void APIENTRY glTexImage3DMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);\nGLAPI void APIENTRY glGetMultisamplefv (GLenum pname, GLuint index, GLfloat *val);\nGLAPI void APIENTRY glSampleMaski (GLuint maskNumber, GLbitfield mask);\n#endif\n#endif /* GL_VERSION_3_2 */\n\n#ifndef GL_VERSION_3_3\n#define GL_VERSION_3_3 1\n#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR    0x88FE\n#define GL_SRC1_COLOR                     0x88F9\n#define GL_ONE_MINUS_SRC1_COLOR           0x88FA\n#define GL_ONE_MINUS_SRC1_ALPHA           0x88FB\n#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS   0x88FC\n#define GL_ANY_SAMPLES_PASSED             0x8C2F\n#define GL_SAMPLER_BINDING                0x8919\n#define GL_RGB10_A2UI                     0x906F\n#define GL_TEXTURE_SWIZZLE_R              0x8E42\n#define GL_TEXTURE_SWIZZLE_G              0x8E43\n#define GL_TEXTURE_SWIZZLE_B              0x8E44\n#define GL_TEXTURE_SWIZZLE_A              0x8E45\n#define GL_TEXTURE_SWIZZLE_RGBA           0x8E46\n#define GL_TIME_ELAPSED                   0x88BF\n#define GL_TIMESTAMP                      0x8E28\n#define GL_INT_2_10_10_10_REV             0x8D9F\ntypedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) (GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);\ntypedef GLint (APIENTRYP PFNGLGETFRAGDATAINDEXPROC) (GLuint program, const GLchar *name);\ntypedef void (APIENTRYP PFNGLGENSAMPLERSPROC) (GLsizei count, GLuint *samplers);\ntypedef void (APIENTRYP PFNGLDELETESAMPLERSPROC) (GLsizei count, const GLuint *samplers);\ntypedef GLboolean (APIENTRYP PFNGLISSAMPLERPROC) (GLuint sampler);\ntypedef void (APIENTRYP PFNGLBINDSAMPLERPROC) (GLuint unit, GLuint sampler);\ntypedef void (APIENTRYP PFNGLSAMPLERPARAMETERIPROC) (GLuint sampler, GLenum pname, GLint param);\ntypedef void (APIENTRYP PFNGLSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, const GLint *param);\ntypedef void (APIENTRYP PFNGLSAMPLERPARAMETERFPROC) (GLuint sampler, GLenum pname, GLfloat param);\ntypedef void (APIENTRYP PFNGLSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, const GLfloat *param);\ntypedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, const GLint *param);\ntypedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, const GLuint *param);\ntypedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, GLint *params);\ntypedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, GLint *params);\ntypedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, GLfloat *params);\ntypedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, GLuint *params);\ntypedef void (APIENTRYP PFNGLQUERYCOUNTERPROC) (GLuint id, GLenum target);\ntypedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VPROC) (GLuint id, GLenum pname, GLint64 *params);\ntypedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VPROC) (GLuint id, GLenum pname, GLuint64 *params);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORPROC) (GLuint index, GLuint divisor);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);\n#ifdef GL_GLEXT_PROTOTYPES\nGLAPI void APIENTRY glBindFragDataLocationIndexed (GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);\nGLAPI GLint APIENTRY glGetFragDataIndex (GLuint program, const GLchar *name);\nGLAPI void APIENTRY glGenSamplers (GLsizei count, GLuint *samplers);\nGLAPI void APIENTRY glDeleteSamplers (GLsizei count, const GLuint *samplers);\nGLAPI GLboolean APIENTRY glIsSampler (GLuint sampler);\nGLAPI void APIENTRY glBindSampler (GLuint unit, GLuint sampler);\nGLAPI void APIENTRY glSamplerParameteri (GLuint sampler, GLenum pname, GLint param);\nGLAPI void APIENTRY glSamplerParameteriv (GLuint sampler, GLenum pname, const GLint *param);\nGLAPI void APIENTRY glSamplerParameterf (GLuint sampler, GLenum pname, GLfloat param);\nGLAPI void APIENTRY glSamplerParameterfv (GLuint sampler, GLenum pname, const GLfloat *param);\nGLAPI void APIENTRY glSamplerParameterIiv (GLuint sampler, GLenum pname, const GLint *param);\nGLAPI void APIENTRY glSamplerParameterIuiv (GLuint sampler, GLenum pname, const GLuint *param);\nGLAPI void APIENTRY glGetSamplerParameteriv (GLuint sampler, GLenum pname, GLint *params);\nGLAPI void APIENTRY glGetSamplerParameterIiv (GLuint sampler, GLenum pname, GLint *params);\nGLAPI void APIENTRY glGetSamplerParameterfv (GLuint sampler, GLenum pname, GLfloat *params);\nGLAPI void APIENTRY glGetSamplerParameterIuiv (GLuint sampler, GLenum pname, GLuint *params);\nGLAPI void APIENTRY glQueryCounter (GLuint id, GLenum target);\nGLAPI void APIENTRY glGetQueryObjecti64v (GLuint id, GLenum pname, GLint64 *params);\nGLAPI void APIENTRY glGetQueryObjectui64v (GLuint id, GLenum pname, GLuint64 *params);\nGLAPI void APIENTRY glVertexAttribDivisor (GLuint index, GLuint divisor);\nGLAPI void APIENTRY glVertexAttribP1ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);\nGLAPI void APIENTRY glVertexAttribP1uiv (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);\nGLAPI void APIENTRY glVertexAttribP2ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);\nGLAPI void APIENTRY glVertexAttribP2uiv (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);\nGLAPI void APIENTRY glVertexAttribP3ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);\nGLAPI void APIENTRY glVertexAttribP3uiv (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);\nGLAPI void APIENTRY glVertexAttribP4ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);\nGLAPI void APIENTRY glVertexAttribP4uiv (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);\n#endif\n#endif /* GL_VERSION_3_3 */\n\n#ifndef GL_VERSION_4_0\n#define GL_VERSION_4_0 1\n#define GL_SAMPLE_SHADING                 0x8C36\n#define GL_MIN_SAMPLE_SHADING_VALUE       0x8C37\n#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5E\n#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5F\n#define GL_TEXTURE_CUBE_MAP_ARRAY         0x9009\n#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY 0x900A\n#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY   0x900B\n#define GL_SAMPLER_CUBE_MAP_ARRAY         0x900C\n#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW  0x900D\n#define GL_INT_SAMPLER_CUBE_MAP_ARRAY     0x900E\n#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY 0x900F\n#define GL_DRAW_INDIRECT_BUFFER           0x8F3F\n#define GL_DRAW_INDIRECT_BUFFER_BINDING   0x8F43\n#define GL_GEOMETRY_SHADER_INVOCATIONS    0x887F\n#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS 0x8E5A\n#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET 0x8E5B\n#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET 0x8E5C\n#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS 0x8E5D\n#define GL_MAX_VERTEX_STREAMS             0x8E71\n#define GL_DOUBLE_VEC2                    0x8FFC\n#define GL_DOUBLE_VEC3                    0x8FFD\n#define GL_DOUBLE_VEC4                    0x8FFE\n#define GL_DOUBLE_MAT2                    0x8F46\n#define GL_DOUBLE_MAT3                    0x8F47\n#define GL_DOUBLE_MAT4                    0x8F48\n#define GL_DOUBLE_MAT2x3                  0x8F49\n#define GL_DOUBLE_MAT2x4                  0x8F4A\n#define GL_DOUBLE_MAT3x2                  0x8F4B\n#define GL_DOUBLE_MAT3x4                  0x8F4C\n#define GL_DOUBLE_MAT4x2                  0x8F4D\n#define GL_DOUBLE_MAT4x3                  0x8F4E\n#define GL_ACTIVE_SUBROUTINES             0x8DE5\n#define GL_ACTIVE_SUBROUTINE_UNIFORMS     0x8DE6\n#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47\n#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH   0x8E48\n#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49\n#define GL_MAX_SUBROUTINES                0x8DE7\n#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8\n#define GL_NUM_COMPATIBLE_SUBROUTINES     0x8E4A\n#define GL_COMPATIBLE_SUBROUTINES         0x8E4B\n#define GL_PATCHES                        0x000E\n#define GL_PATCH_VERTICES                 0x8E72\n#define GL_PATCH_DEFAULT_INNER_LEVEL      0x8E73\n#define GL_PATCH_DEFAULT_OUTER_LEVEL      0x8E74\n#define GL_TESS_CONTROL_OUTPUT_VERTICES   0x8E75\n#define GL_TESS_GEN_MODE                  0x8E76\n#define GL_TESS_GEN_SPACING               0x8E77\n#define GL_TESS_GEN_VERTEX_ORDER          0x8E78\n#define GL_TESS_GEN_POINT_MODE            0x8E79\n#define GL_ISOLINES                       0x8E7A\n#define GL_FRACTIONAL_ODD                 0x8E7B\n#define GL_FRACTIONAL_EVEN                0x8E7C\n#define GL_MAX_PATCH_VERTICES             0x8E7D\n#define GL_MAX_TESS_GEN_LEVEL             0x8E7E\n#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F\n#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80\n#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81\n#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82\n#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83\n#define GL_MAX_TESS_PATCH_COMPONENTS      0x8E84\n#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85\n#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86\n#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89\n#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A\n#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C\n#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D\n#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E\n#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F\n#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0\n#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1\n#define GL_TESS_EVALUATION_SHADER         0x8E87\n#define GL_TESS_CONTROL_SHADER            0x8E88\n#define GL_TRANSFORM_FEEDBACK             0x8E22\n#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED 0x8E23\n#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE 0x8E24\n#define GL_TRANSFORM_FEEDBACK_BINDING     0x8E25\n#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS 0x8E70\ntypedef void (APIENTRYP PFNGLMINSAMPLESHADINGPROC) (GLfloat value);\ntypedef void (APIENTRYP PFNGLBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);\ntypedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);\ntypedef void (APIENTRYP PFNGLBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);\ntypedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);\ntypedef void (APIENTRYP PFNGLDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect);\ntypedef void (APIENTRYP PFNGLDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void *indirect);\ntypedef void (APIENTRYP PFNGLUNIFORM1DPROC) (GLint location, GLdouble x);\ntypedef void (APIENTRYP PFNGLUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);\ntypedef void (APIENTRYP PFNGLUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);\ntypedef void (APIENTRYP PFNGLUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);\ntypedef void (APIENTRYP PFNGLUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);\ntypedef void (APIENTRYP PFNGLUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);\ntypedef void (APIENTRYP PFNGLUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);\ntypedef void (APIENTRYP PFNGLUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);\ntypedef void (APIENTRYP PFNGLUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\ntypedef void (APIENTRYP PFNGLUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\ntypedef void (APIENTRYP PFNGLUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\ntypedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\ntypedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\ntypedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\ntypedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\ntypedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\ntypedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\ntypedef void (APIENTRYP PFNGLGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);\ntypedef GLint (APIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);\ntypedef GLuint (APIENTRYP PFNGLGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);\ntypedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);\ntypedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);\ntypedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);\ntypedef void (APIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);\ntypedef void (APIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);\ntypedef void (APIENTRYP PFNGLGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);\ntypedef void (APIENTRYP PFNGLPATCHPARAMETERIPROC) (GLenum pname, GLint value);\ntypedef void (APIENTRYP PFNGLPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);\ntypedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKPROC) (GLenum target, GLuint id);\ntypedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSPROC) (GLsizei n, const GLuint *ids);\ntypedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);\ntypedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKPROC) (GLuint id);\ntypedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKPROC) (void);\ntypedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKPROC) (void);\ntypedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKPROC) (GLenum mode, GLuint id);\ntypedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) (GLenum mode, GLuint id, GLuint stream);\ntypedef void (APIENTRYP PFNGLBEGINQUERYINDEXEDPROC) (GLenum target, GLuint index, GLuint id);\ntypedef void (APIENTRYP PFNGLENDQUERYINDEXEDPROC) (GLenum target, GLuint index);\ntypedef void (APIENTRYP PFNGLGETQUERYINDEXEDIVPROC) (GLenum target, GLuint index, GLenum pname, GLint *params);\n#ifdef GL_GLEXT_PROTOTYPES\nGLAPI void APIENTRY glMinSampleShading (GLfloat value);\nGLAPI void APIENTRY glBlendEquationi (GLuint buf, GLenum mode);\nGLAPI void APIENTRY glBlendEquationSeparatei (GLuint buf, GLenum modeRGB, GLenum modeAlpha);\nGLAPI void APIENTRY glBlendFunci (GLuint buf, GLenum src, GLenum dst);\nGLAPI void APIENTRY glBlendFuncSeparatei (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);\nGLAPI void APIENTRY glDrawArraysIndirect (GLenum mode, const void *indirect);\nGLAPI void APIENTRY glDrawElementsIndirect (GLenum mode, GLenum type, const void *indirect);\nGLAPI void APIENTRY glUniform1d (GLint location, GLdouble x);\nGLAPI void APIENTRY glUniform2d (GLint location, GLdouble x, GLdouble y);\nGLAPI void APIENTRY glUniform3d (GLint location, GLdouble x, GLdouble y, GLdouble z);\nGLAPI void APIENTRY glUniform4d (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);\nGLAPI void APIENTRY glUniform1dv (GLint location, GLsizei count, const GLdouble *value);\nGLAPI void APIENTRY glUniform2dv (GLint location, GLsizei count, const GLdouble *value);\nGLAPI void APIENTRY glUniform3dv (GLint location, GLsizei count, const GLdouble *value);\nGLAPI void APIENTRY glUniform4dv (GLint location, GLsizei count, const GLdouble *value);\nGLAPI void APIENTRY glUniformMatrix2dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\nGLAPI void APIENTRY glUniformMatrix3dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\nGLAPI void APIENTRY glUniformMatrix4dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\nGLAPI void APIENTRY glUniformMatrix2x3dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\nGLAPI void APIENTRY glUniformMatrix2x4dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\nGLAPI void APIENTRY glUniformMatrix3x2dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\nGLAPI void APIENTRY glUniformMatrix3x4dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\nGLAPI void APIENTRY glUniformMatrix4x2dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\nGLAPI void APIENTRY glUniformMatrix4x3dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\nGLAPI void APIENTRY glGetUniformdv (GLuint program, GLint location, GLdouble *params);\nGLAPI GLint APIENTRY glGetSubroutineUniformLocation (GLuint program, GLenum shadertype, const GLchar *name);\nGLAPI GLuint APIENTRY glGetSubroutineIndex (GLuint program, GLenum shadertype, const GLchar *name);\nGLAPI void APIENTRY glGetActiveSubroutineUniformiv (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);\nGLAPI void APIENTRY glGetActiveSubroutineUniformName (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);\nGLAPI void APIENTRY glGetActiveSubroutineName (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);\nGLAPI void APIENTRY glUniformSubroutinesuiv (GLenum shadertype, GLsizei count, const GLuint *indices);\nGLAPI void APIENTRY glGetUniformSubroutineuiv (GLenum shadertype, GLint location, GLuint *params);\nGLAPI void APIENTRY glGetProgramStageiv (GLuint program, GLenum shadertype, GLenum pname, GLint *values);\nGLAPI void APIENTRY glPatchParameteri (GLenum pname, GLint value);\nGLAPI void APIENTRY glPatchParameterfv (GLenum pname, const GLfloat *values);\nGLAPI void APIENTRY glBindTransformFeedback (GLenum target, GLuint id);\nGLAPI void APIENTRY glDeleteTransformFeedbacks (GLsizei n, const GLuint *ids);\nGLAPI void APIENTRY glGenTransformFeedbacks (GLsizei n, GLuint *ids);\nGLAPI GLboolean APIENTRY glIsTransformFeedback (GLuint id);\nGLAPI void APIENTRY glPauseTransformFeedback (void);\nGLAPI void APIENTRY glResumeTransformFeedback (void);\nGLAPI void APIENTRY glDrawTransformFeedback (GLenum mode, GLuint id);\nGLAPI void APIENTRY glDrawTransformFeedbackStream (GLenum mode, GLuint id, GLuint stream);\nGLAPI void APIENTRY glBeginQueryIndexed (GLenum target, GLuint index, GLuint id);\nGLAPI void APIENTRY glEndQueryIndexed (GLenum target, GLuint index);\nGLAPI void APIENTRY glGetQueryIndexediv (GLenum target, GLuint index, GLenum pname, GLint *params);\n#endif\n#endif /* GL_VERSION_4_0 */\n\n#ifndef GL_VERSION_4_1\n#define GL_VERSION_4_1 1\n#define GL_FIXED                          0x140C\n#define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A\n#define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B\n#define GL_LOW_FLOAT                      0x8DF0\n#define GL_MEDIUM_FLOAT                   0x8DF1\n#define GL_HIGH_FLOAT                     0x8DF2\n#define GL_LOW_INT                        0x8DF3\n#define GL_MEDIUM_INT                     0x8DF4\n#define GL_HIGH_INT                       0x8DF5\n#define GL_SHADER_COMPILER                0x8DFA\n#define GL_SHADER_BINARY_FORMATS          0x8DF8\n#define GL_NUM_SHADER_BINARY_FORMATS      0x8DF9\n#define GL_MAX_VERTEX_UNIFORM_VECTORS     0x8DFB\n#define GL_MAX_VARYING_VECTORS            0x8DFC\n#define GL_MAX_FRAGMENT_UNIFORM_VECTORS   0x8DFD\n#define GL_RGB565                         0x8D62\n#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT 0x8257\n#define GL_PROGRAM_BINARY_LENGTH          0x8741\n#define GL_NUM_PROGRAM_BINARY_FORMATS     0x87FE\n#define GL_PROGRAM_BINARY_FORMATS         0x87FF\n#define GL_VERTEX_SHADER_BIT              0x00000001\n#define GL_FRAGMENT_SHADER_BIT            0x00000002\n#define GL_GEOMETRY_SHADER_BIT            0x00000004\n#define GL_TESS_CONTROL_SHADER_BIT        0x00000008\n#define GL_TESS_EVALUATION_SHADER_BIT     0x00000010\n#define GL_ALL_SHADER_BITS                0xFFFFFFFF\n#define GL_PROGRAM_SEPARABLE              0x8258\n#define GL_ACTIVE_PROGRAM                 0x8259\n#define GL_PROGRAM_PIPELINE_BINDING       0x825A\n#define GL_MAX_VIEWPORTS                  0x825B\n#define GL_VIEWPORT_SUBPIXEL_BITS         0x825C\n#define GL_VIEWPORT_BOUNDS_RANGE          0x825D\n#define GL_LAYER_PROVOKING_VERTEX         0x825E\n#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F\n#define GL_UNDEFINED_VERTEX               0x8260\ntypedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) (void);\ntypedef void (APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);\ntypedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);\ntypedef void (APIENTRYP PFNGLDEPTHRANGEFPROC) (GLfloat n, GLfloat f);\ntypedef void (APIENTRYP PFNGLCLEARDEPTHFPROC) (GLfloat d);\ntypedef void (APIENTRYP PFNGLGETPROGRAMBINARYPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);\ntypedef void (APIENTRYP PFNGLPROGRAMBINARYPROC) (GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);\ntypedef void (APIENTRYP PFNGLPROGRAMPARAMETERIPROC) (GLuint program, GLenum pname, GLint value);\ntypedef void (APIENTRYP PFNGLUSEPROGRAMSTAGESPROC) (GLuint pipeline, GLbitfield stages, GLuint program);\ntypedef void (APIENTRYP PFNGLACTIVESHADERPROGRAMPROC) (GLuint pipeline, GLuint program);\ntypedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMVPROC) (GLenum type, GLsizei count, const GLchar *const*strings);\ntypedef void (APIENTRYP PFNGLBINDPROGRAMPIPELINEPROC) (GLuint pipeline);\ntypedef void (APIENTRYP PFNGLDELETEPROGRAMPIPELINESPROC) (GLsizei n, const GLuint *pipelines);\ntypedef void (APIENTRYP PFNGLGENPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);\ntypedef GLboolean (APIENTRYP PFNGLISPROGRAMPIPELINEPROC) (GLuint pipeline);\ntypedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEIVPROC) (GLuint pipeline, GLenum pname, GLint *params);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IPROC) (GLuint program, GLint location, GLint v0);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FPROC) (GLuint program, GLint location, GLfloat v0);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DPROC) (GLuint program, GLint location, GLdouble v0);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIPROC) (GLuint program, GLint location, GLuint v0);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IPROC) (GLuint program, GLint location, GLint v0, GLint v1);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\ntypedef void (APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEPROC) (GLuint pipeline);\ntypedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGPROC) (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBL1DPROC) (GLuint index, GLdouble x);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBL2DPROC) (GLuint index, GLdouble x, GLdouble y);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBL3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBL4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVPROC) (GLuint index, const GLdouble *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVPROC) (GLuint index, const GLdouble *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVPROC) (GLuint index, const GLdouble *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVPROC) (GLuint index, const GLdouble *v);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);\ntypedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVPROC) (GLuint index, GLenum pname, GLdouble *params);\ntypedef void (APIENTRYP PFNGLVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);\ntypedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);\ntypedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);\ntypedef void (APIENTRYP PFNGLSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);\ntypedef void (APIENTRYP PFNGLSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);\ntypedef void (APIENTRYP PFNGLSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);\ntypedef void (APIENTRYP PFNGLDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);\ntypedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);\ntypedef void (APIENTRYP PFNGLGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);\ntypedef void (APIENTRYP PFNGLGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);\n#ifdef GL_GLEXT_PROTOTYPES\nGLAPI void APIENTRY glReleaseShaderCompiler (void);\nGLAPI void APIENTRY glShaderBinary (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);\nGLAPI void APIENTRY glGetShaderPrecisionFormat (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);\nGLAPI void APIENTRY glDepthRangef (GLfloat n, GLfloat f);\nGLAPI void APIENTRY glClearDepthf (GLfloat d);\nGLAPI void APIENTRY glGetProgramBinary (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);\nGLAPI void APIENTRY glProgramBinary (GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);\nGLAPI void APIENTRY glProgramParameteri (GLuint program, GLenum pname, GLint value);\nGLAPI void APIENTRY glUseProgramStages (GLuint pipeline, GLbitfield stages, GLuint program);\nGLAPI void APIENTRY glActiveShaderProgram (GLuint pipeline, GLuint program);\nGLAPI GLuint APIENTRY glCreateShaderProgramv (GLenum type, GLsizei count, const GLchar *const*strings);\nGLAPI void APIENTRY glBindProgramPipeline (GLuint pipeline);\nGLAPI void APIENTRY glDeleteProgramPipelines (GLsizei n, const GLuint *pipelines);\nGLAPI void APIENTRY glGenProgramPipelines (GLsizei n, GLuint *pipelines);\nGLAPI GLboolean APIENTRY glIsProgramPipeline (GLuint pipeline);\nGLAPI void APIENTRY glGetProgramPipelineiv (GLuint pipeline, GLenum pname, GLint *params);\nGLAPI void APIENTRY glProgramUniform1i (GLuint program, GLint location, GLint v0);\nGLAPI void APIENTRY glProgramUniform1iv (GLuint program, GLint location, GLsizei count, const GLint *value);\nGLAPI void APIENTRY glProgramUniform1f (GLuint program, GLint location, GLfloat v0);\nGLAPI void APIENTRY glProgramUniform1fv (GLuint program, GLint location, GLsizei count, const GLfloat *value);\nGLAPI void APIENTRY glProgramUniform1d (GLuint program, GLint location, GLdouble v0);\nGLAPI void APIENTRY glProgramUniform1dv (GLuint program, GLint location, GLsizei count, const GLdouble *value);\nGLAPI void APIENTRY glProgramUniform1ui (GLuint program, GLint location, GLuint v0);\nGLAPI void APIENTRY glProgramUniform1uiv (GLuint program, GLint location, GLsizei count, const GLuint *value);\nGLAPI void APIENTRY glProgramUniform2i (GLuint program, GLint location, GLint v0, GLint v1);\nGLAPI void APIENTRY glProgramUniform2iv (GLuint program, GLint location, GLsizei count, const GLint *value);\nGLAPI void APIENTRY glProgramUniform2f (GLuint program, GLint location, GLfloat v0, GLfloat v1);\nGLAPI void APIENTRY glProgramUniform2fv (GLuint program, GLint location, GLsizei count, const GLfloat *value);\nGLAPI void APIENTRY glProgramUniform2d (GLuint program, GLint location, GLdouble v0, GLdouble v1);\nGLAPI void APIENTRY glProgramUniform2dv (GLuint program, GLint location, GLsizei count, const GLdouble *value);\nGLAPI void APIENTRY glProgramUniform2ui (GLuint program, GLint location, GLuint v0, GLuint v1);\nGLAPI void APIENTRY glProgramUniform2uiv (GLuint program, GLint location, GLsizei count, const GLuint *value);\nGLAPI void APIENTRY glProgramUniform3i (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);\nGLAPI void APIENTRY glProgramUniform3iv (GLuint program, GLint location, GLsizei count, const GLint *value);\nGLAPI void APIENTRY glProgramUniform3f (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);\nGLAPI void APIENTRY glProgramUniform3fv (GLuint program, GLint location, GLsizei count, const GLfloat *value);\nGLAPI void APIENTRY glProgramUniform3d (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);\nGLAPI void APIENTRY glProgramUniform3dv (GLuint program, GLint location, GLsizei count, const GLdouble *value);\nGLAPI void APIENTRY glProgramUniform3ui (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);\nGLAPI void APIENTRY glProgramUniform3uiv (GLuint program, GLint location, GLsizei count, const GLuint *value);\nGLAPI void APIENTRY glProgramUniform4i (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);\nGLAPI void APIENTRY glProgramUniform4iv (GLuint program, GLint location, GLsizei count, const GLint *value);\nGLAPI void APIENTRY glProgramUniform4f (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);\nGLAPI void APIENTRY glProgramUniform4fv (GLuint program, GLint location, GLsizei count, const GLfloat *value);\nGLAPI void APIENTRY glProgramUniform4d (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);\nGLAPI void APIENTRY glProgramUniform4dv (GLuint program, GLint location, GLsizei count, const GLdouble *value);\nGLAPI void APIENTRY glProgramUniform4ui (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);\nGLAPI void APIENTRY glProgramUniform4uiv (GLuint program, GLint location, GLsizei count, const GLuint *value);\nGLAPI void APIENTRY glProgramUniformMatrix2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\nGLAPI void APIENTRY glProgramUniformMatrix3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\nGLAPI void APIENTRY glProgramUniformMatrix4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\nGLAPI void APIENTRY glProgramUniformMatrix2dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\nGLAPI void APIENTRY glProgramUniformMatrix3dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\nGLAPI void APIENTRY glProgramUniformMatrix4dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\nGLAPI void APIENTRY glProgramUniformMatrix2x3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\nGLAPI void APIENTRY glProgramUniformMatrix3x2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\nGLAPI void APIENTRY glProgramUniformMatrix2x4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\nGLAPI void APIENTRY glProgramUniformMatrix4x2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\nGLAPI void APIENTRY glProgramUniformMatrix3x4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\nGLAPI void APIENTRY glProgramUniformMatrix4x3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);\nGLAPI void APIENTRY glProgramUniformMatrix2x3dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\nGLAPI void APIENTRY glProgramUniformMatrix3x2dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\nGLAPI void APIENTRY glProgramUniformMatrix2x4dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\nGLAPI void APIENTRY glProgramUniformMatrix4x2dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\nGLAPI void APIENTRY glProgramUniformMatrix3x4dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\nGLAPI void APIENTRY glProgramUniformMatrix4x3dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);\nGLAPI void APIENTRY glValidateProgramPipeline (GLuint pipeline);\nGLAPI void APIENTRY glGetProgramPipelineInfoLog (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);\nGLAPI void APIENTRY glVertexAttribL1d (GLuint index, GLdouble x);\nGLAPI void APIENTRY glVertexAttribL2d (GLuint index, GLdouble x, GLdouble y);\nGLAPI void APIENTRY glVertexAttribL3d (GLuint index, GLdouble x, GLdouble y, GLdouble z);\nGLAPI void APIENTRY glVertexAttribL4d (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);\nGLAPI void APIENTRY glVertexAttribL1dv (GLuint index, const GLdouble *v);\nGLAPI void APIENTRY glVertexAttribL2dv (GLuint index, const GLdouble *v);\nGLAPI void APIENTRY glVertexAttribL3dv (GLuint index, const GLdouble *v);\nGLAPI void APIENTRY glVertexAttribL4dv (GLuint index, const GLdouble *v);\nGLAPI void APIENTRY glVertexAttribLPointer (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);\nGLAPI void APIENTRY glGetVertexAttribLdv (GLuint index, GLenum pname, GLdouble *params);\nGLAPI void APIENTRY glViewportArrayv (GLuint first, GLsizei count, const GLfloat *v);\nGLAPI void APIENTRY glViewportIndexedf (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);\nGLAPI void APIENTRY glViewportIndexedfv (GLuint index, const GLfloat *v);\nGLAPI void APIENTRY glScissorArrayv (GLuint first, GLsizei count, const GLint *v);\nGLAPI void APIENTRY glScissorIndexed (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);\nGLAPI void APIENTRY glScissorIndexedv (GLuint index, const GLint *v);\nGLAPI void APIENTRY glDepthRangeArrayv (GLuint first, GLsizei count, const GLdouble *v);\nGLAPI void APIENTRY glDepthRangeIndexed (GLuint index, GLdouble n, GLdouble f);\nGLAPI void APIENTRY glGetFloati_v (GLenum target, GLuint index, GLfloat *data);\nGLAPI void APIENTRY glGetDoublei_v (GLenum target, GLuint index, GLdouble *data);\n#endif\n#endif /* GL_VERSION_4_1 */\n\n#ifndef GL_VERSION_4_2\n#define GL_VERSION_4_2 1\n#define GL_COPY_READ_BUFFER_BINDING       0x8F36\n#define GL_COPY_WRITE_BUFFER_BINDING      0x8F37\n#define GL_TRANSFORM_FEEDBACK_ACTIVE      0x8E24\n#define GL_TRANSFORM_FEEDBACK_PAUSED      0x8E23\n#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH  0x9127\n#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT 0x9128\n#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH  0x9129\n#define GL_UNPACK_COMPRESSED_BLOCK_SIZE   0x912A\n#define GL_PACK_COMPRESSED_BLOCK_WIDTH    0x912B\n#define GL_PACK_COMPRESSED_BLOCK_HEIGHT   0x912C\n#define GL_PACK_COMPRESSED_BLOCK_DEPTH    0x912D\n#define GL_PACK_COMPRESSED_BLOCK_SIZE     0x912E\n#define GL_NUM_SAMPLE_COUNTS              0x9380\n#define GL_MIN_MAP_BUFFER_ALIGNMENT       0x90BC\n#define GL_ATOMIC_COUNTER_BUFFER          0x92C0\n#define GL_ATOMIC_COUNTER_BUFFER_BINDING  0x92C1\n#define GL_ATOMIC_COUNTER_BUFFER_START    0x92C2\n#define GL_ATOMIC_COUNTER_BUFFER_SIZE     0x92C3\n#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE 0x92C4\n#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS 0x92C5\n#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES 0x92C6\n#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER 0x92C7\n#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER 0x92C8\n#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER 0x92C9\n#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER 0x92CA\n#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER 0x92CB\n#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS 0x92CC\n#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS 0x92CD\n#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS 0x92CE\n#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS 0x92CF\n#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS 0x92D0\n#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS 0x92D1\n#define GL_MAX_VERTEX_ATOMIC_COUNTERS     0x92D2\n#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS 0x92D3\n#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS 0x92D4\n#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS   0x92D5\n#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS   0x92D6\n#define GL_MAX_COMBINED_ATOMIC_COUNTERS   0x92D7\n#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE 0x92D8\n#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS 0x92DC\n#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS  0x92D9\n#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX 0x92DA\n#define GL_UNSIGNED_INT_ATOMIC_COUNTER    0x92DB\n#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT 0x00000001\n#define GL_ELEMENT_ARRAY_BARRIER_BIT      0x00000002\n#define GL_UNIFORM_BARRIER_BIT            0x00000004\n#define GL_TEXTURE_FETCH_BARRIER_BIT      0x00000008\n#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT 0x00000020\n#define GL_COMMAND_BARRIER_BIT            0x00000040\n#define GL_PIXEL_BUFFER_BARRIER_BIT       0x00000080\n#define GL_TEXTURE_UPDATE_BARRIER_BIT     0x00000100\n#define GL_BUFFER_UPDATE_BARRIER_BIT      0x00000200\n#define GL_FRAMEBUFFER_BARRIER_BIT        0x00000400\n#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT 0x00000800\n#define GL_ATOMIC_COUNTER_BARRIER_BIT     0x00001000\n#define GL_ALL_BARRIER_BITS               0xFFFFFFFF\n#define GL_MAX_IMAGE_UNITS                0x8F38\n#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS 0x8F39\n#define GL_IMAGE_BINDING_NAME             0x8F3A\n#define GL_IMAGE_BINDING_LEVEL            0x8F3B\n#define GL_IMAGE_BINDING_LAYERED          0x8F3C\n#define GL_IMAGE_BINDING_LAYER            0x8F3D\n#define GL_IMAGE_BINDING_ACCESS           0x8F3E\n#define GL_IMAGE_1D                       0x904C\n#define GL_IMAGE_2D                       0x904D\n#define GL_IMAGE_3D                       0x904E\n#define GL_IMAGE_2D_RECT                  0x904F\n#define GL_IMAGE_CUBE                     0x9050\n#define GL_IMAGE_BUFFER                   0x9051\n#define GL_IMAGE_1D_ARRAY                 0x9052\n#define GL_IMAGE_2D_ARRAY                 0x9053\n#define GL_IMAGE_CUBE_MAP_ARRAY           0x9054\n#define GL_IMAGE_2D_MULTISAMPLE           0x9055\n#define GL_IMAGE_2D_MULTISAMPLE_ARRAY     0x9056\n#define GL_INT_IMAGE_1D                   0x9057\n#define GL_INT_IMAGE_2D                   0x9058\n#define GL_INT_IMAGE_3D                   0x9059\n#define GL_INT_IMAGE_2D_RECT              0x905A\n#define GL_INT_IMAGE_CUBE                 0x905B\n#define GL_INT_IMAGE_BUFFER               0x905C\n#define GL_INT_IMAGE_1D_ARRAY             0x905D\n#define GL_INT_IMAGE_2D_ARRAY             0x905E\n#define GL_INT_IMAGE_CUBE_MAP_ARRAY       0x905F\n#define GL_INT_IMAGE_2D_MULTISAMPLE       0x9060\n#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x9061\n#define GL_UNSIGNED_INT_IMAGE_1D          0x9062\n#define GL_UNSIGNED_INT_IMAGE_2D          0x9063\n#define GL_UNSIGNED_INT_IMAGE_3D          0x9064\n#define GL_UNSIGNED_INT_IMAGE_2D_RECT     0x9065\n#define GL_UNSIGNED_INT_IMAGE_CUBE        0x9066\n#define GL_UNSIGNED_INT_IMAGE_BUFFER      0x9067\n#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY    0x9068\n#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY    0x9069\n#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY 0x906A\n#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE 0x906B\n#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x906C\n#define GL_MAX_IMAGE_SAMPLES              0x906D\n#define GL_IMAGE_BINDING_FORMAT           0x906E\n#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE 0x90C7\n#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE 0x90C8\n#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS 0x90C9\n#define GL_MAX_VERTEX_IMAGE_UNIFORMS      0x90CA\n#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS 0x90CB\n#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS 0x90CC\n#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS    0x90CD\n#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS    0x90CE\n#define GL_MAX_COMBINED_IMAGE_UNIFORMS    0x90CF\n#define GL_COMPRESSED_RGBA_BPTC_UNORM     0x8E8C\n#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM 0x8E8D\n#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT 0x8E8E\n#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT 0x8E8F\n#define GL_TEXTURE_IMMUTABLE_FORMAT       0x912F\ntypedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);\ntypedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);\ntypedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);\ntypedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);\ntypedef void (APIENTRYP PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) (GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);\ntypedef void (APIENTRYP PFNGLBINDIMAGETEXTUREPROC) (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);\ntypedef void (APIENTRYP PFNGLMEMORYBARRIERPROC) (GLbitfield barriers);\ntypedef void (APIENTRYP PFNGLTEXSTORAGE1DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);\ntypedef void (APIENTRYP PFNGLTEXSTORAGE2DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);\ntypedef void (APIENTRYP PFNGLTEXSTORAGE3DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);\ntypedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) (GLenum mode, GLuint id, GLsizei instancecount);\ntypedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);\n#ifdef GL_GLEXT_PROTOTYPES\nGLAPI void APIENTRY glDrawArraysInstancedBaseInstance (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);\nGLAPI void APIENTRY glDrawElementsInstancedBaseInstance (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);\nGLAPI void APIENTRY glDrawElementsInstancedBaseVertexBaseInstance (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);\nGLAPI void APIENTRY glGetInternalformativ (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);\nGLAPI void APIENTRY glGetActiveAtomicCounterBufferiv (GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);\nGLAPI void APIENTRY glBindImageTexture (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);\nGLAPI void APIENTRY glMemoryBarrier (GLbitfield barriers);\nGLAPI void APIENTRY glTexStorage1D (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);\nGLAPI void APIENTRY glTexStorage2D (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);\nGLAPI void APIENTRY glTexStorage3D (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);\nGLAPI void APIENTRY glDrawTransformFeedbackInstanced (GLenum mode, GLuint id, GLsizei instancecount);\nGLAPI void APIENTRY glDrawTransformFeedbackStreamInstanced (GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);\n#endif\n#endif /* GL_VERSION_4_2 */\n\n#ifndef GL_VERSION_4_3\n#define GL_VERSION_4_3 1\ntypedef void (APIENTRY  *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);\n#define GL_NUM_SHADING_LANGUAGE_VERSIONS  0x82E9\n#define GL_VERTEX_ATTRIB_ARRAY_LONG       0x874E\n#define GL_COMPRESSED_RGB8_ETC2           0x9274\n#define GL_COMPRESSED_SRGB8_ETC2          0x9275\n#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9276\n#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9277\n#define GL_COMPRESSED_RGBA8_ETC2_EAC      0x9278\n#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC 0x9279\n#define GL_COMPRESSED_R11_EAC             0x9270\n#define GL_COMPRESSED_SIGNED_R11_EAC      0x9271\n#define GL_COMPRESSED_RG11_EAC            0x9272\n#define GL_COMPRESSED_SIGNED_RG11_EAC     0x9273\n#define GL_PRIMITIVE_RESTART_FIXED_INDEX  0x8D69\n#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE 0x8D6A\n#define GL_MAX_ELEMENT_INDEX              0x8D6B\n#define GL_COMPUTE_SHADER                 0x91B9\n#define GL_MAX_COMPUTE_UNIFORM_BLOCKS     0x91BB\n#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC\n#define GL_MAX_COMPUTE_IMAGE_UNIFORMS     0x91BD\n#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262\n#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263\n#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264\n#define GL_MAX_COMPUTE_ATOMIC_COUNTERS    0x8265\n#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266\n#define GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS 0x90EB\n#define GL_MAX_COMPUTE_WORK_GROUP_COUNT   0x91BE\n#define GL_MAX_COMPUTE_WORK_GROUP_SIZE    0x91BF\n#define GL_COMPUTE_WORK_GROUP_SIZE        0x8267\n#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC\n#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED\n#define GL_DISPATCH_INDIRECT_BUFFER       0x90EE\n#define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF\n#define GL_COMPUTE_SHADER_BIT             0x00000020\n#define GL_DEBUG_OUTPUT_SYNCHRONOUS       0x8242\n#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH 0x8243\n#define GL_DEBUG_CALLBACK_FUNCTION        0x8244\n#define GL_DEBUG_CALLBACK_USER_PARAM      0x8245\n#define GL_DEBUG_SOURCE_API               0x8246\n#define GL_DEBUG_SOURCE_WINDOW_SYSTEM     0x8247\n#define GL_DEBUG_SOURCE_SHADER_COMPILER   0x8248\n#define GL_DEBUG_SOURCE_THIRD_PARTY       0x8249\n#define GL_DEBUG_SOURCE_APPLICATION       0x824A\n#define GL_DEBUG_SOURCE_OTHER             0x824B\n#define GL_DEBUG_TYPE_ERROR               0x824C\n#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR 0x824D\n#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR  0x824E\n#define GL_DEBUG_TYPE_PORTABILITY         0x824F\n#define GL_DEBUG_TYPE_PERFORMANCE         0x8250\n#define GL_DEBUG_TYPE_OTHER               0x8251\n#define GL_MAX_DEBUG_MESSAGE_LENGTH       0x9143\n#define GL_MAX_DEBUG_LOGGED_MESSAGES      0x9144\n#define GL_DEBUG_LOGGED_MESSAGES          0x9145\n#define GL_DEBUG_SEVERITY_HIGH            0x9146\n#define GL_DEBUG_SEVERITY_MEDIUM          0x9147\n#define GL_DEBUG_SEVERITY_LOW             0x9148\n#define GL_DEBUG_TYPE_MARKER              0x8268\n#define GL_DEBUG_TYPE_PUSH_GROUP          0x8269\n#define GL_DEBUG_TYPE_POP_GROUP           0x826A\n#define GL_DEBUG_SEVERITY_NOTIFICATION    0x826B\n#define GL_MAX_DEBUG_GROUP_STACK_DEPTH    0x826C\n#define GL_DEBUG_GROUP_STACK_DEPTH        0x826D\n#define GL_BUFFER                         0x82E0\n#define GL_SHADER                         0x82E1\n#define GL_PROGRAM                        0x82E2\n#define GL_QUERY                          0x82E3\n#define GL_PROGRAM_PIPELINE               0x82E4\n#define GL_SAMPLER                        0x82E6\n#define GL_MAX_LABEL_LENGTH               0x82E8\n#define GL_DEBUG_OUTPUT                   0x92E0\n#define GL_CONTEXT_FLAG_DEBUG_BIT         0x00000002\n#define GL_MAX_UNIFORM_LOCATIONS          0x826E\n#define GL_FRAMEBUFFER_DEFAULT_WIDTH      0x9310\n#define GL_FRAMEBUFFER_DEFAULT_HEIGHT     0x9311\n#define GL_FRAMEBUFFER_DEFAULT_LAYERS     0x9312\n#define GL_FRAMEBUFFER_DEFAULT_SAMPLES    0x9313\n#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS 0x9314\n#define GL_MAX_FRAMEBUFFER_WIDTH          0x9315\n#define GL_MAX_FRAMEBUFFER_HEIGHT         0x9316\n#define GL_MAX_FRAMEBUFFER_LAYERS         0x9317\n#define GL_MAX_FRAMEBUFFER_SAMPLES        0x9318\n#define GL_INTERNALFORMAT_SUPPORTED       0x826F\n#define GL_INTERNALFORMAT_PREFERRED       0x8270\n#define GL_INTERNALFORMAT_RED_SIZE        0x8271\n#define GL_INTERNALFORMAT_GREEN_SIZE      0x8272\n#define GL_INTERNALFORMAT_BLUE_SIZE       0x8273\n#define GL_INTERNALFORMAT_ALPHA_SIZE      0x8274\n#define GL_INTERNALFORMAT_DEPTH_SIZE      0x8275\n#define GL_INTERNALFORMAT_STENCIL_SIZE    0x8276\n#define GL_INTERNALFORMAT_SHARED_SIZE     0x8277\n#define GL_INTERNALFORMAT_RED_TYPE        0x8278\n#define GL_INTERNALFORMAT_GREEN_TYPE      0x8279\n#define GL_INTERNALFORMAT_BLUE_TYPE       0x827A\n#define GL_INTERNALFORMAT_ALPHA_TYPE      0x827B\n#define GL_INTERNALFORMAT_DEPTH_TYPE      0x827C\n#define GL_INTERNALFORMAT_STENCIL_TYPE    0x827D\n#define GL_MAX_WIDTH                      0x827E\n#define GL_MAX_HEIGHT                     0x827F\n#define GL_MAX_DEPTH                      0x8280\n#define GL_MAX_LAYERS                     0x8281\n#define GL_MAX_COMBINED_DIMENSIONS        0x8282\n#define GL_COLOR_COMPONENTS               0x8283\n#define GL_DEPTH_COMPONENTS               0x8284\n#define GL_STENCIL_COMPONENTS             0x8285\n#define GL_COLOR_RENDERABLE               0x8286\n#define GL_DEPTH_RENDERABLE               0x8287\n#define GL_STENCIL_RENDERABLE             0x8288\n#define GL_FRAMEBUFFER_RENDERABLE         0x8289\n#define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A\n#define GL_FRAMEBUFFER_BLEND              0x828B\n#define GL_READ_PIXELS                    0x828C\n#define GL_READ_PIXELS_FORMAT             0x828D\n#define GL_READ_PIXELS_TYPE               0x828E\n#define GL_TEXTURE_IMAGE_FORMAT           0x828F\n#define GL_TEXTURE_IMAGE_TYPE             0x8290\n#define GL_GET_TEXTURE_IMAGE_FORMAT       0x8291\n#define GL_GET_TEXTURE_IMAGE_TYPE         0x8292\n#define GL_MIPMAP                         0x8293\n#define GL_MANUAL_GENERATE_MIPMAP         0x8294\n#define GL_AUTO_GENERATE_MIPMAP           0x8295\n#define GL_COLOR_ENCODING                 0x8296\n#define GL_SRGB_READ                      0x8297\n#define GL_SRGB_WRITE                     0x8298\n#define GL_FILTER                         0x829A\n#define GL_VERTEX_TEXTURE                 0x829B\n#define GL_TESS_CONTROL_TEXTURE           0x829C\n#define GL_TESS_EVALUATION_TEXTURE        0x829D\n#define GL_GEOMETRY_TEXTURE               0x829E\n#define GL_FRAGMENT_TEXTURE               0x829F\n#define GL_COMPUTE_TEXTURE                0x82A0\n#define GL_TEXTURE_SHADOW                 0x82A1\n#define GL_TEXTURE_GATHER                 0x82A2\n#define GL_TEXTURE_GATHER_SHADOW          0x82A3\n#define GL_SHADER_IMAGE_LOAD              0x82A4\n#define GL_SHADER_IMAGE_STORE             0x82A5\n#define GL_SHADER_IMAGE_ATOMIC            0x82A6\n#define GL_IMAGE_TEXEL_SIZE               0x82A7\n#define GL_IMAGE_COMPATIBILITY_CLASS      0x82A8\n#define GL_IMAGE_PIXEL_FORMAT             0x82A9\n#define GL_IMAGE_PIXEL_TYPE               0x82AA\n#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC\n#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD\n#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE\n#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF\n#define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1\n#define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2\n#define GL_TEXTURE_COMPRESSED_BLOCK_SIZE  0x82B3\n#define GL_CLEAR_BUFFER                   0x82B4\n#define GL_TEXTURE_VIEW                   0x82B5\n#define GL_VIEW_COMPATIBILITY_CLASS       0x82B6\n#define GL_FULL_SUPPORT                   0x82B7\n#define GL_CAVEAT_SUPPORT                 0x82B8\n#define GL_IMAGE_CLASS_4_X_32             0x82B9\n#define GL_IMAGE_CLASS_2_X_32             0x82BA\n#define GL_IMAGE_CLASS_1_X_32             0x82BB\n#define GL_IMAGE_CLASS_4_X_16             0x82BC\n#define GL_IMAGE_CLASS_2_X_16             0x82BD\n#define GL_IMAGE_CLASS_1_X_16             0x82BE\n#define GL_IMAGE_CLASS_4_X_8              0x82BF\n#define GL_IMAGE_CLASS_2_X_8              0x82C0\n#define GL_IMAGE_CLASS_1_X_8              0x82C1\n#define GL_IMAGE_CLASS_11_11_10           0x82C2\n#define GL_IMAGE_CLASS_10_10_10_2         0x82C3\n#define GL_VIEW_CLASS_128_BITS            0x82C4\n#define GL_VIEW_CLASS_96_BITS             0x82C5\n#define GL_VIEW_CLASS_64_BITS             0x82C6\n#define GL_VIEW_CLASS_48_BITS             0x82C7\n#define GL_VIEW_CLASS_32_BITS             0x82C8\n#define GL_VIEW_CLASS_24_BITS             0x82C9\n#define GL_VIEW_CLASS_16_BITS             0x82CA\n#define GL_VIEW_CLASS_8_BITS              0x82CB\n#define GL_VIEW_CLASS_S3TC_DXT1_RGB       0x82CC\n#define GL_VIEW_CLASS_S3TC_DXT1_RGBA      0x82CD\n#define GL_VIEW_CLASS_S3TC_DXT3_RGBA      0x82CE\n#define GL_VIEW_CLASS_S3TC_DXT5_RGBA      0x82CF\n#define GL_VIEW_CLASS_RGTC1_RED           0x82D0\n#define GL_VIEW_CLASS_RGTC2_RG            0x82D1\n#define GL_VIEW_CLASS_BPTC_UNORM          0x82D2\n#define GL_VIEW_CLASS_BPTC_FLOAT          0x82D3\n#define GL_UNIFORM                        0x92E1\n#define GL_UNIFORM_BLOCK                  0x92E2\n#define GL_PROGRAM_INPUT                  0x92E3\n#define GL_PROGRAM_OUTPUT                 0x92E4\n#define GL_BUFFER_VARIABLE                0x92E5\n#define GL_SHADER_STORAGE_BLOCK           0x92E6\n#define GL_VERTEX_SUBROUTINE              0x92E8\n#define GL_TESS_CONTROL_SUBROUTINE        0x92E9\n#define GL_TESS_EVALUATION_SUBROUTINE     0x92EA\n#define GL_GEOMETRY_SUBROUTINE            0x92EB\n#define GL_FRAGMENT_SUBROUTINE            0x92EC\n#define GL_COMPUTE_SUBROUTINE             0x92ED\n#define GL_VERTEX_SUBROUTINE_UNIFORM      0x92EE\n#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF\n#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0\n#define GL_GEOMETRY_SUBROUTINE_UNIFORM    0x92F1\n#define GL_FRAGMENT_SUBROUTINE_UNIFORM    0x92F2\n#define GL_COMPUTE_SUBROUTINE_UNIFORM     0x92F3\n#define GL_TRANSFORM_FEEDBACK_VARYING     0x92F4\n#define GL_ACTIVE_RESOURCES               0x92F5\n#define GL_MAX_NAME_LENGTH                0x92F6\n#define GL_MAX_NUM_ACTIVE_VARIABLES       0x92F7\n#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8\n#define GL_NAME_LENGTH                    0x92F9\n#define GL_TYPE                           0x92FA\n#define GL_ARRAY_SIZE                     0x92FB\n#define GL_OFFSET                         0x92FC\n#define GL_BLOCK_INDEX                    0x92FD\n#define GL_ARRAY_STRIDE                   0x92FE\n#define GL_MATRIX_STRIDE                  0x92FF\n#define GL_IS_ROW_MAJOR                   0x9300\n#define GL_ATOMIC_COUNTER_BUFFER_INDEX    0x9301\n#define GL_BUFFER_BINDING                 0x9302\n#define GL_BUFFER_DATA_SIZE               0x9303\n#define GL_NUM_ACTIVE_VARIABLES           0x9304\n#define GL_ACTIVE_VARIABLES               0x9305\n#define GL_REFERENCED_BY_VERTEX_SHADER    0x9306\n#define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307\n#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308\n#define GL_REFERENCED_BY_GEOMETRY_SHADER  0x9309\n#define GL_REFERENCED_BY_FRAGMENT_SHADER  0x930A\n#define GL_REFERENCED_BY_COMPUTE_SHADER   0x930B\n#define GL_TOP_LEVEL_ARRAY_SIZE           0x930C\n#define GL_TOP_LEVEL_ARRAY_STRIDE         0x930D\n#define GL_LOCATION                       0x930E\n#define GL_LOCATION_INDEX                 0x930F\n#define GL_IS_PER_PATCH                   0x92E7\n#define GL_SHADER_STORAGE_BUFFER          0x90D2\n#define GL_SHADER_STORAGE_BUFFER_BINDING  0x90D3\n#define GL_SHADER_STORAGE_BUFFER_START    0x90D4\n#define GL_SHADER_STORAGE_BUFFER_SIZE     0x90D5\n#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS 0x90D6\n#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS 0x90D7\n#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS 0x90D8\n#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS 0x90D9\n#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS 0x90DA\n#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS 0x90DB\n#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS 0x90DC\n#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS 0x90DD\n#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE  0x90DE\n#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT 0x90DF\n#define GL_SHADER_STORAGE_BARRIER_BIT     0x00002000\n#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES 0x8F39\n#define GL_DEPTH_STENCIL_TEXTURE_MODE     0x90EA\n#define GL_TEXTURE_BUFFER_OFFSET          0x919D\n#define GL_TEXTURE_BUFFER_SIZE            0x919E\n#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT 0x919F\n#define GL_TEXTURE_VIEW_MIN_LEVEL         0x82DB\n#define GL_TEXTURE_VIEW_NUM_LEVELS        0x82DC\n#define GL_TEXTURE_VIEW_MIN_LAYER         0x82DD\n#define GL_TEXTURE_VIEW_NUM_LAYERS        0x82DE\n#define GL_TEXTURE_IMMUTABLE_LEVELS       0x82DF\n#define GL_VERTEX_ATTRIB_BINDING          0x82D4\n#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET  0x82D5\n#define GL_VERTEX_BINDING_DIVISOR         0x82D6\n#define GL_VERTEX_BINDING_OFFSET          0x82D7\n#define GL_VERTEX_BINDING_STRIDE          0x82D8\n#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9\n#define GL_MAX_VERTEX_ATTRIB_BINDINGS     0x82DA\n#define GL_VERTEX_BINDING_BUFFER          0x8F4F\ntypedef void (APIENTRYP PFNGLCLEARBUFFERDATAPROC) (GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);\ntypedef void (APIENTRYP PFNGLCLEARBUFFERSUBDATAPROC) (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);\ntypedef void (APIENTRYP PFNGLDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);\ntypedef void (APIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);\ntypedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAPROC) (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);\ntypedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);\ntypedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);\ntypedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);\ntypedef void (APIENTRYP PFNGLINVALIDATETEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);\ntypedef void (APIENTRYP PFNGLINVALIDATETEXIMAGEPROC) (GLuint texture, GLint level);\ntypedef void (APIENTRYP PFNGLINVALIDATEBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);\ntypedef void (APIENTRYP PFNGLINVALIDATEBUFFERDATAPROC) (GLuint buffer);\ntypedef void (APIENTRYP PFNGLINVALIDATEFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, const GLenum *attachments);\ntypedef void (APIENTRYP PFNGLINVALIDATESUBFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);\ntypedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);\ntypedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);\ntypedef void (APIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);\ntypedef GLuint (APIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);\ntypedef void (APIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);\ntypedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);\ntypedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);\ntypedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);\ntypedef void (APIENTRYP PFNGLSHADERSTORAGEBLOCKBINDINGPROC) (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);\ntypedef void (APIENTRYP PFNGLTEXBUFFERRANGEPROC) (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);\ntypedef void (APIENTRYP PFNGLTEXSTORAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);\ntypedef void (APIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);\ntypedef void (APIENTRYP PFNGLTEXTUREVIEWPROC) (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);\ntypedef void (APIENTRYP PFNGLBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);\ntypedef void (APIENTRYP PFNGLVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);\ntypedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);\ntypedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);\ntypedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC) (GLDEBUGPROC callback, const void *userParam);\ntypedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGPROC) (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);\ntypedef void (APIENTRYP PFNGLPUSHDEBUGGROUPPROC) (GLenum source, GLuint id, GLsizei length, const GLchar *message);\ntypedef void (APIENTRYP PFNGLPOPDEBUGGROUPPROC) (void);\ntypedef void (APIENTRYP PFNGLOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei length, const GLchar *label);\ntypedef void (APIENTRYP PFNGLGETOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);\ntypedef void (APIENTRYP PFNGLOBJECTPTRLABELPROC) (const void *ptr, GLsizei length, const GLchar *label);\ntypedef void (APIENTRYP PFNGLGETOBJECTPTRLABELPROC) (const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);\n#ifdef GL_GLEXT_PROTOTYPES\nGLAPI void APIENTRY glClearBufferData (GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);\nGLAPI void APIENTRY glClearBufferSubData (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);\nGLAPI void APIENTRY glDispatchCompute (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);\nGLAPI void APIENTRY glDispatchComputeIndirect (GLintptr indirect);\nGLAPI void APIENTRY glCopyImageSubData (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);\nGLAPI void APIENTRY glFramebufferParameteri (GLenum target, GLenum pname, GLint param);\nGLAPI void APIENTRY glGetFramebufferParameteriv (GLenum target, GLenum pname, GLint *params);\nGLAPI void APIENTRY glGetInternalformati64v (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);\nGLAPI void APIENTRY glInvalidateTexSubImage (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);\nGLAPI void APIENTRY glInvalidateTexImage (GLuint texture, GLint level);\nGLAPI void APIENTRY glInvalidateBufferSubData (GLuint buffer, GLintptr offset, GLsizeiptr length);\nGLAPI void APIENTRY glInvalidateBufferData (GLuint buffer);\nGLAPI void APIENTRY glInvalidateFramebuffer (GLenum target, GLsizei numAttachments, const GLenum *attachments);\nGLAPI void APIENTRY glInvalidateSubFramebuffer (GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);\nGLAPI void APIENTRY glMultiDrawArraysIndirect (GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);\nGLAPI void APIENTRY glMultiDrawElementsIndirect (GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);\nGLAPI void APIENTRY glGetProgramInterfaceiv (GLuint program, GLenum programInterface, GLenum pname, GLint *params);\nGLAPI GLuint APIENTRY glGetProgramResourceIndex (GLuint program, GLenum programInterface, const GLchar *name);\nGLAPI void APIENTRY glGetProgramResourceName (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);\nGLAPI void APIENTRY glGetProgramResourceiv (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);\nGLAPI GLint APIENTRY glGetProgramResourceLocation (GLuint program, GLenum programInterface, const GLchar *name);\nGLAPI GLint APIENTRY glGetProgramResourceLocationIndex (GLuint program, GLenum programInterface, const GLchar *name);\nGLAPI void APIENTRY glShaderStorageBlockBinding (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);\nGLAPI void APIENTRY glTexBufferRange (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);\nGLAPI void APIENTRY glTexStorage2DMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);\nGLAPI void APIENTRY glTexStorage3DMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);\nGLAPI void APIENTRY glTextureView (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);\nGLAPI void APIENTRY glBindVertexBuffer (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);\nGLAPI void APIENTRY glVertexAttribFormat (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);\nGLAPI void APIENTRY glVertexAttribIFormat (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);\nGLAPI void APIENTRY glVertexAttribLFormat (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);\nGLAPI void APIENTRY glVertexAttribBinding (GLuint attribindex, GLuint bindingindex);\nGLAPI void APIENTRY glVertexBindingDivisor (GLuint bindingindex, GLuint divisor);\nGLAPI void APIENTRY glDebugMessageControl (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);\nGLAPI void APIENTRY glDebugMessageInsert (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);\nGLAPI void APIENTRY glDebugMessageCallback (GLDEBUGPROC callback, const void *userParam);\nGLAPI GLuint APIENTRY glGetDebugMessageLog (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);\nGLAPI void APIENTRY glPushDebugGroup (GLenum source, GLuint id, GLsizei length, const GLchar *message);\nGLAPI void APIENTRY glPopDebugGroup (void);\nGLAPI void APIENTRY glObjectLabel (GLenum identifier, GLuint name, GLsizei length, const GLchar *label);\nGLAPI void APIENTRY glGetObjectLabel (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);\nGLAPI void APIENTRY glObjectPtrLabel (const void *ptr, GLsizei length, const GLchar *label);\nGLAPI void APIENTRY glGetObjectPtrLabel (const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);\n#endif\n#endif /* GL_VERSION_4_3 */\n\n#ifndef GL_VERSION_4_4\n#define GL_VERSION_4_4 1\n#define GL_MAX_VERTEX_ATTRIB_STRIDE       0x82E5\n#define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED 0x8221\n#define GL_TEXTURE_BUFFER_BINDING         0x8C2A\n#define GL_MAP_PERSISTENT_BIT             0x0040\n#define GL_MAP_COHERENT_BIT               0x0080\n#define GL_DYNAMIC_STORAGE_BIT            0x0100\n#define GL_CLIENT_STORAGE_BIT             0x0200\n#define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT 0x00004000\n#define GL_BUFFER_IMMUTABLE_STORAGE       0x821F\n#define GL_BUFFER_STORAGE_FLAGS           0x8220\n#define GL_CLEAR_TEXTURE                  0x9365\n#define GL_LOCATION_COMPONENT             0x934A\n#define GL_TRANSFORM_FEEDBACK_BUFFER_INDEX 0x934B\n#define GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE 0x934C\n#define GL_QUERY_BUFFER                   0x9192\n#define GL_QUERY_BUFFER_BARRIER_BIT       0x00008000\n#define GL_QUERY_BUFFER_BINDING           0x9193\n#define GL_QUERY_RESULT_NO_WAIT           0x9194\n#define GL_MIRROR_CLAMP_TO_EDGE           0x8743\ntypedef void (APIENTRYP PFNGLBUFFERSTORAGEPROC) (GLenum target, GLsizeiptr size, const void *data, GLbitfield flags);\ntypedef void (APIENTRYP PFNGLCLEARTEXIMAGEPROC) (GLuint texture, GLint level, GLenum format, GLenum type, const void *data);\ntypedef void (APIENTRYP PFNGLCLEARTEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data);\ntypedef void (APIENTRYP PFNGLBINDBUFFERSBASEPROC) (GLenum target, GLuint first, GLsizei count, const GLuint *buffers);\ntypedef void (APIENTRYP PFNGLBINDBUFFERSRANGEPROC) (GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes);\ntypedef void (APIENTRYP PFNGLBINDTEXTURESPROC) (GLuint first, GLsizei count, const GLuint *textures);\ntypedef void (APIENTRYP PFNGLBINDSAMPLERSPROC) (GLuint first, GLsizei count, const GLuint *samplers);\ntypedef void (APIENTRYP PFNGLBINDIMAGETEXTURESPROC) (GLuint first, GLsizei count, const GLuint *textures);\ntypedef void (APIENTRYP PFNGLBINDVERTEXBUFFERSPROC) (GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);\n#ifdef GL_GLEXT_PROTOTYPES\nGLAPI void APIENTRY glBufferStorage (GLenum target, GLsizeiptr size, const void *data, GLbitfield flags);\nGLAPI void APIENTRY glClearTexImage (GLuint texture, GLint level, GLenum format, GLenum type, const void *data);\nGLAPI void APIENTRY glClearTexSubImage (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data);\nGLAPI void APIENTRY glBindBuffersBase (GLenum target, GLuint first, GLsizei count, const GLuint *buffers);\nGLAPI void APIENTRY glBindBuffersRange (GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes);\nGLAPI void APIENTRY glBindTextures (GLuint first, GLsizei count, const GLuint *textures);\nGLAPI void APIENTRY glBindSamplers (GLuint first, GLsizei count, const GLuint *samplers);\nGLAPI void APIENTRY glBindImageTextures (GLuint first, GLsizei count, const GLuint *textures);\nGLAPI void APIENTRY glBindVertexBuffers (GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);\n#endif\n#endif /* GL_VERSION_4_4 */\n\n#ifndef GL_VERSION_4_5\n#define GL_VERSION_4_5 1\n#define GL_CONTEXT_LOST                   0x0507\n#define GL_NEGATIVE_ONE_TO_ONE            0x935E\n#define GL_ZERO_TO_ONE                    0x935F\n#define GL_CLIP_ORIGIN                    0x935C\n#define GL_CLIP_DEPTH_MODE                0x935D\n#define GL_QUERY_WAIT_INVERTED            0x8E17\n#define GL_QUERY_NO_WAIT_INVERTED         0x8E18\n#define GL_QUERY_BY_REGION_WAIT_INVERTED  0x8E19\n#define GL_QUERY_BY_REGION_NO_WAIT_INVERTED 0x8E1A\n#define GL_MAX_CULL_DISTANCES             0x82F9\n#define GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES 0x82FA\n#define GL_TEXTURE_TARGET                 0x1006\n#define GL_QUERY_TARGET                   0x82EA\n#define GL_GUILTY_CONTEXT_RESET           0x8253\n#define GL_INNOCENT_CONTEXT_RESET         0x8254\n#define GL_UNKNOWN_CONTEXT_RESET          0x8255\n#define GL_RESET_NOTIFICATION_STRATEGY    0x8256\n#define GL_LOSE_CONTEXT_ON_RESET          0x8252\n#define GL_NO_RESET_NOTIFICATION          0x8261\n#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT 0x00000004\n#define GL_CONTEXT_RELEASE_BEHAVIOR       0x82FB\n#define GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH 0x82FC\ntypedef void (APIENTRYP PFNGLCLIPCONTROLPROC) (GLenum origin, GLenum depth);\ntypedef void (APIENTRYP PFNGLCREATETRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);\ntypedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC) (GLuint xfb, GLuint index, GLuint buffer);\ntypedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC) (GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);\ntypedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKIVPROC) (GLuint xfb, GLenum pname, GLint *param);\ntypedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI_VPROC) (GLuint xfb, GLenum pname, GLuint index, GLint *param);\ntypedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI64_VPROC) (GLuint xfb, GLenum pname, GLuint index, GLint64 *param);\ntypedef void (APIENTRYP PFNGLCREATEBUFFERSPROC) (GLsizei n, GLuint *buffers);\ntypedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEPROC) (GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);\ntypedef void (APIENTRYP PFNGLNAMEDBUFFERDATAPROC) (GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);\ntypedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);\ntypedef void (APIENTRYP PFNGLCOPYNAMEDBUFFERSUBDATAPROC) (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);\ntypedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAPROC) (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);\ntypedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);\ntypedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERPROC) (GLuint buffer, GLenum access);\ntypedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERRANGEPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);\ntypedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFERPROC) (GLuint buffer);\ntypedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);\ntypedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVPROC) (GLuint buffer, GLenum pname, GLint *params);\ntypedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERI64VPROC) (GLuint buffer, GLenum pname, GLint64 *params);\ntypedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVPROC) (GLuint buffer, GLenum pname, void **params);\ntypedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);\ntypedef void (APIENTRYP PFNGLCREATEFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);\ntypedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC) (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);\ntypedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC) (GLuint framebuffer, GLenum pname, GLint param);\ntypedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);\ntypedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);\ntypedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC) (GLuint framebuffer, GLenum buf);\ntypedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC) (GLuint framebuffer, GLsizei n, const GLenum *bufs);\ntypedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC) (GLuint framebuffer, GLenum src);\ntypedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC) (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments);\ntypedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC) (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);\ntypedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERIVPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value);\ntypedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value);\ntypedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFVPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value);\ntypedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFIPROC) (GLuint framebuffer, GLenum buffer, const GLfloat depth, GLint stencil);\ntypedef void (APIENTRYP PFNGLBLITNAMEDFRAMEBUFFERPROC) (GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);\ntypedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC) (GLuint framebuffer, GLenum target);\ntypedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC) (GLuint framebuffer, GLenum pname, GLint *param);\ntypedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);\ntypedef void (APIENTRYP PFNGLCREATERENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);\ntypedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEPROC) (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);\ntypedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);\ntypedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC) (GLuint renderbuffer, GLenum pname, GLint *params);\ntypedef void (APIENTRYP PFNGLCREATETEXTURESPROC) (GLenum target, GLsizei n, GLuint *textures);\ntypedef void (APIENTRYP PFNGLTEXTUREBUFFERPROC) (GLuint texture, GLenum internalformat, GLuint buffer);\ntypedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEPROC) (GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);\ntypedef void (APIENTRYP PFNGLTEXTURESTORAGE1DPROC) (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);\ntypedef void (APIENTRYP PFNGLTEXTURESTORAGE2DPROC) (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);\ntypedef void (APIENTRYP PFNGLTEXTURESTORAGE3DPROC) (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);\ntypedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC) (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);\ntypedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC) (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);\ntypedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);\ntypedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);\ntypedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);\ntypedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);\ntypedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);\ntypedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);\ntypedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);\ntypedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);\ntypedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);\ntypedef void (APIENTRYP PFNGLTEXTUREPARAMETERFPROC) (GLuint texture, GLenum pname, GLfloat param);\ntypedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVPROC) (GLuint texture, GLenum pname, const GLfloat *param);\ntypedef void (APIENTRYP PFNGLTEXTUREPARAMETERIPROC) (GLuint texture, GLenum pname, GLint param);\ntypedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVPROC) (GLuint texture, GLenum pname, const GLint *params);\ntypedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVPROC) (GLuint texture, GLenum pname, const GLuint *params);\ntypedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVPROC) (GLuint texture, GLenum pname, const GLint *param);\ntypedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPPROC) (GLuint texture);\ntypedef void (APIENTRYP PFNGLBINDTEXTUREUNITPROC) (GLuint unit, GLuint texture);\ntypedef void (APIENTRYP PFNGLGETTEXTUREIMAGEPROC) (GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);\ntypedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC) (GLuint texture, GLint level, GLsizei bufSize, void *pixels);\ntypedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVPROC) (GLuint texture, GLint level, GLenum pname, GLfloat *params);\ntypedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVPROC) (GLuint texture, GLint level, GLenum pname, GLint *params);\ntypedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVPROC) (GLuint texture, GLenum pname, GLfloat *params);\ntypedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVPROC) (GLuint texture, GLenum pname, GLint *params);\ntypedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVPROC) (GLuint texture, GLenum pname, GLuint *params);\ntypedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVPROC) (GLuint texture, GLenum pname, GLint *params);\ntypedef void (APIENTRYP PFNGLCREATEVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);\ntypedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBPROC) (GLuint vaobj, GLuint index);\ntypedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBPROC) (GLuint vaobj, GLuint index);\ntypedef void (APIENTRYP PFNGLVERTEXARRAYELEMENTBUFFERPROC) (GLuint vaobj, GLuint buffer);\ntypedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);\ntypedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERSPROC) (GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);\ntypedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBBINDINGPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);\ntypedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBFORMATPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);\ntypedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBIFORMATPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);\ntypedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBLFORMATPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);\ntypedef void (APIENTRYP PFNGLVERTEXARRAYBINDINGDIVISORPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);\ntypedef void (APIENTRYP PFNGLGETVERTEXARRAYIVPROC) (GLuint vaobj, GLenum pname, GLint *param);\ntypedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXEDIVPROC) (GLuint vaobj, GLuint index, GLenum pname, GLint *param);\ntypedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXED64IVPROC) (GLuint vaobj, GLuint index, GLenum pname, GLint64 *param);\ntypedef void (APIENTRYP PFNGLCREATESAMPLERSPROC) (GLsizei n, GLuint *samplers);\ntypedef void (APIENTRYP PFNGLCREATEPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);\ntypedef void (APIENTRYP PFNGLCREATEQUERIESPROC) (GLenum target, GLsizei n, GLuint *ids);\ntypedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTI64VPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);\ntypedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTIVPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);\ntypedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUI64VPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);\ntypedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUIVPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);\ntypedef void (APIENTRYP PFNGLMEMORYBARRIERBYREGIONPROC) (GLbitfield barriers);\ntypedef void (APIENTRYP PFNGLGETTEXTURESUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels);\ntypedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels);\ntypedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSPROC) (void);\ntypedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint lod, GLsizei bufSize, void *pixels);\ntypedef void (APIENTRYP PFNGLGETNTEXIMAGEPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);\ntypedef void (APIENTRYP PFNGLGETNUNIFORMDVPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);\ntypedef void (APIENTRYP PFNGLGETNUNIFORMFVPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);\ntypedef void (APIENTRYP PFNGLGETNUNIFORMIVPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);\ntypedef void (APIENTRYP PFNGLGETNUNIFORMUIVPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);\ntypedef void (APIENTRYP PFNGLREADNPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);\ntypedef void (APIENTRYP PFNGLTEXTUREBARRIERPROC) (void);\n#ifdef GL_GLEXT_PROTOTYPES\nGLAPI void APIENTRY glClipControl (GLenum origin, GLenum depth);\nGLAPI void APIENTRY glCreateTransformFeedbacks (GLsizei n, GLuint *ids);\nGLAPI void APIENTRY glTransformFeedbackBufferBase (GLuint xfb, GLuint index, GLuint buffer);\nGLAPI void APIENTRY glTransformFeedbackBufferRange (GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);\nGLAPI void APIENTRY glGetTransformFeedbackiv (GLuint xfb, GLenum pname, GLint *param);\nGLAPI void APIENTRY glGetTransformFeedbacki_v (GLuint xfb, GLenum pname, GLuint index, GLint *param);\nGLAPI void APIENTRY glGetTransformFeedbacki64_v (GLuint xfb, GLenum pname, GLuint index, GLint64 *param);\nGLAPI void APIENTRY glCreateBuffers (GLsizei n, GLuint *buffers);\nGLAPI void APIENTRY glNamedBufferStorage (GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);\nGLAPI void APIENTRY glNamedBufferData (GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);\nGLAPI void APIENTRY glNamedBufferSubData (GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);\nGLAPI void APIENTRY glCopyNamedBufferSubData (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);\nGLAPI void APIENTRY glClearNamedBufferData (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);\nGLAPI void APIENTRY glClearNamedBufferSubData (GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);\nGLAPI void *APIENTRY glMapNamedBuffer (GLuint buffer, GLenum access);\nGLAPI void *APIENTRY glMapNamedBufferRange (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);\nGLAPI GLboolean APIENTRY glUnmapNamedBuffer (GLuint buffer);\nGLAPI void APIENTRY glFlushMappedNamedBufferRange (GLuint buffer, GLintptr offset, GLsizeiptr length);\nGLAPI void APIENTRY glGetNamedBufferParameteriv (GLuint buffer, GLenum pname, GLint *params);\nGLAPI void APIENTRY glGetNamedBufferParameteri64v (GLuint buffer, GLenum pname, GLint64 *params);\nGLAPI void APIENTRY glGetNamedBufferPointerv (GLuint buffer, GLenum pname, void **params);\nGLAPI void APIENTRY glGetNamedBufferSubData (GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);\nGLAPI void APIENTRY glCreateFramebuffers (GLsizei n, GLuint *framebuffers);\nGLAPI void APIENTRY glNamedFramebufferRenderbuffer (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);\nGLAPI void APIENTRY glNamedFramebufferParameteri (GLuint framebuffer, GLenum pname, GLint param);\nGLAPI void APIENTRY glNamedFramebufferTexture (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);\nGLAPI void APIENTRY glNamedFramebufferTextureLayer (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);\nGLAPI void APIENTRY glNamedFramebufferDrawBuffer (GLuint framebuffer, GLenum buf);\nGLAPI void APIENTRY glNamedFramebufferDrawBuffers (GLuint framebuffer, GLsizei n, const GLenum *bufs);\nGLAPI void APIENTRY glNamedFramebufferReadBuffer (GLuint framebuffer, GLenum src);\nGLAPI void APIENTRY glInvalidateNamedFramebufferData (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments);\nGLAPI void APIENTRY glInvalidateNamedFramebufferSubData (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);\nGLAPI void APIENTRY glClearNamedFramebufferiv (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value);\nGLAPI void APIENTRY glClearNamedFramebufferuiv (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value);\nGLAPI void APIENTRY glClearNamedFramebufferfv (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value);\nGLAPI void APIENTRY glClearNamedFramebufferfi (GLuint framebuffer, GLenum buffer, const GLfloat depth, GLint stencil);\nGLAPI void APIENTRY glBlitNamedFramebuffer (GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);\nGLAPI GLenum APIENTRY glCheckNamedFramebufferStatus (GLuint framebuffer, GLenum target);\nGLAPI void APIENTRY glGetNamedFramebufferParameteriv (GLuint framebuffer, GLenum pname, GLint *param);\nGLAPI void APIENTRY glGetNamedFramebufferAttachmentParameteriv (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);\nGLAPI void APIENTRY glCreateRenderbuffers (GLsizei n, GLuint *renderbuffers);\nGLAPI void APIENTRY glNamedRenderbufferStorage (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);\nGLAPI void APIENTRY glNamedRenderbufferStorageMultisample (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);\nGLAPI void APIENTRY glGetNamedRenderbufferParameteriv (GLuint renderbuffer, GLenum pname, GLint *params);\nGLAPI void APIENTRY glCreateTextures (GLenum target, GLsizei n, GLuint *textures);\nGLAPI void APIENTRY glTextureBuffer (GLuint texture, GLenum internalformat, GLuint buffer);\nGLAPI void APIENTRY glTextureBufferRange (GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);\nGLAPI void APIENTRY glTextureStorage1D (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);\nGLAPI void APIENTRY glTextureStorage2D (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);\nGLAPI void APIENTRY glTextureStorage3D (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);\nGLAPI void APIENTRY glTextureStorage2DMultisample (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);\nGLAPI void APIENTRY glTextureStorage3DMultisample (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);\nGLAPI void APIENTRY glTextureSubImage1D (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);\nGLAPI void APIENTRY glTextureSubImage2D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);\nGLAPI void APIENTRY glTextureSubImage3D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);\nGLAPI void APIENTRY glCompressedTextureSubImage1D (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);\nGLAPI void APIENTRY glCompressedTextureSubImage2D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);\nGLAPI void APIENTRY glCompressedTextureSubImage3D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);\nGLAPI void APIENTRY glCopyTextureSubImage1D (GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);\nGLAPI void APIENTRY glCopyTextureSubImage2D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);\nGLAPI void APIENTRY glCopyTextureSubImage3D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);\nGLAPI void APIENTRY glTextureParameterf (GLuint texture, GLenum pname, GLfloat param);\nGLAPI void APIENTRY glTextureParameterfv (GLuint texture, GLenum pname, const GLfloat *param);\nGLAPI void APIENTRY glTextureParameteri (GLuint texture, GLenum pname, GLint param);\nGLAPI void APIENTRY glTextureParameterIiv (GLuint texture, GLenum pname, const GLint *params);\nGLAPI void APIENTRY glTextureParameterIuiv (GLuint texture, GLenum pname, const GLuint *params);\nGLAPI void APIENTRY glTextureParameteriv (GLuint texture, GLenum pname, const GLint *param);\nGLAPI void APIENTRY glGenerateTextureMipmap (GLuint texture);\nGLAPI void APIENTRY glBindTextureUnit (GLuint unit, GLuint texture);\nGLAPI void APIENTRY glGetTextureImage (GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);\nGLAPI void APIENTRY glGetCompressedTextureImage (GLuint texture, GLint level, GLsizei bufSize, void *pixels);\nGLAPI void APIENTRY glGetTextureLevelParameterfv (GLuint texture, GLint level, GLenum pname, GLfloat *params);\nGLAPI void APIENTRY glGetTextureLevelParameteriv (GLuint texture, GLint level, GLenum pname, GLint *params);\nGLAPI void APIENTRY glGetTextureParameterfv (GLuint texture, GLenum pname, GLfloat *params);\nGLAPI void APIENTRY glGetTextureParameterIiv (GLuint texture, GLenum pname, GLint *params);\nGLAPI void APIENTRY glGetTextureParameterIuiv (GLuint texture, GLenum pname, GLuint *params);\nGLAPI void APIENTRY glGetTextureParameteriv (GLuint texture, GLenum pname, GLint *params);\nGLAPI void APIENTRY glCreateVertexArrays (GLsizei n, GLuint *arrays);\nGLAPI void APIENTRY glDisableVertexArrayAttrib (GLuint vaobj, GLuint index);\nGLAPI void APIENTRY glEnableVertexArrayAttrib (GLuint vaobj, GLuint index);\nGLAPI void APIENTRY glVertexArrayElementBuffer (GLuint vaobj, GLuint buffer);\nGLAPI void APIENTRY glVertexArrayVertexBuffer (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);\nGLAPI void APIENTRY glVertexArrayVertexBuffers (GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);\nGLAPI void APIENTRY glVertexArrayAttribBinding (GLuint vaobj, GLuint attribindex, GLuint bindingindex);\nGLAPI void APIENTRY glVertexArrayAttribFormat (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);\nGLAPI void APIENTRY glVertexArrayAttribIFormat (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);\nGLAPI void APIENTRY glVertexArrayAttribLFormat (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);\nGLAPI void APIENTRY glVertexArrayBindingDivisor (GLuint vaobj, GLuint bindingindex, GLuint divisor);\nGLAPI void APIENTRY glGetVertexArrayiv (GLuint vaobj, GLenum pname, GLint *param);\nGLAPI void APIENTRY glGetVertexArrayIndexediv (GLuint vaobj, GLuint index, GLenum pname, GLint *param);\nGLAPI void APIENTRY glGetVertexArrayIndexed64iv (GLuint vaobj, GLuint index, GLenum pname, GLint64 *param);\nGLAPI void APIENTRY glCreateSamplers (GLsizei n, GLuint *samplers);\nGLAPI void APIENTRY glCreateProgramPipelines (GLsizei n, GLuint *pipelines);\nGLAPI void APIENTRY glCreateQueries (GLenum target, GLsizei n, GLuint *ids);\nGLAPI void APIENTRY glGetQueryBufferObjecti64v (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);\nGLAPI void APIENTRY glGetQueryBufferObjectiv (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);\nGLAPI void APIENTRY glGetQueryBufferObjectui64v (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);\nGLAPI void APIENTRY glGetQueryBufferObjectuiv (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);\nGLAPI void APIENTRY glMemoryBarrierByRegion (GLbitfield barriers);\nGLAPI void APIENTRY glGetTextureSubImage (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels);\nGLAPI void APIENTRY glGetCompressedTextureSubImage (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels);\nGLAPI GLenum APIENTRY glGetGraphicsResetStatus (void);\nGLAPI void APIENTRY glGetnCompressedTexImage (GLenum target, GLint lod, GLsizei bufSize, void *pixels);\nGLAPI void APIENTRY glGetnTexImage (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);\nGLAPI void APIENTRY glGetnUniformdv (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);\nGLAPI void APIENTRY glGetnUniformfv (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);\nGLAPI void APIENTRY glGetnUniformiv (GLuint program, GLint location, GLsizei bufSize, GLint *params);\nGLAPI void APIENTRY glGetnUniformuiv (GLuint program, GLint location, GLsizei bufSize, GLuint *params);\nGLAPI void APIENTRY glReadnPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);\nGLAPI void APIENTRY glTextureBarrier (void);\n#endif\n#endif /* GL_VERSION_4_5 */\n\n#ifndef GL_ARB_ES2_compatibility\n#define GL_ARB_ES2_compatibility 1\n#endif /* GL_ARB_ES2_compatibility */\n\n#ifndef GL_ARB_ES3_1_compatibility\n#define GL_ARB_ES3_1_compatibility 1\n#endif /* GL_ARB_ES3_1_compatibility */\n\n#ifndef GL_ARB_ES3_compatibility\n#define GL_ARB_ES3_compatibility 1\n#endif /* GL_ARB_ES3_compatibility */\n\n#ifndef GL_ARB_arrays_of_arrays\n#define GL_ARB_arrays_of_arrays 1\n#endif /* GL_ARB_arrays_of_arrays */\n\n#ifndef GL_ARB_base_instance\n#define GL_ARB_base_instance 1\n#endif /* GL_ARB_base_instance */\n\n#ifndef GL_ARB_bindless_texture\n#define GL_ARB_bindless_texture 1\ntypedef uint64_t GLuint64EXT;\n#define GL_UNSIGNED_INT64_ARB             0x140F\ntypedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLEARBPROC) (GLuint texture);\ntypedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLEARBPROC) (GLuint texture, GLuint sampler);\ntypedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);\ntypedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC) (GLuint64 handle);\ntypedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLEARBPROC) (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);\ntypedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle, GLenum access);\ntypedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC) (GLuint64 handle);\ntypedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64ARBPROC) (GLint location, GLuint64 value);\ntypedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC) (GLuint program, GLint location, GLuint64 value);\ntypedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *values);\ntypedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);\ntypedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64ARBPROC) (GLuint index, GLuint64EXT x);\ntypedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VARBPROC) (GLuint index, const GLuint64EXT *v);\ntypedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VARBPROC) (GLuint index, GLenum pname, GLuint64EXT *params);\n#ifdef GL_GLEXT_PROTOTYPES\nGLAPI GLuint64 APIENTRY glGetTextureHandleARB (GLuint texture);\nGLAPI GLuint64 APIENTRY glGetTextureSamplerHandleARB (GLuint texture, GLuint sampler);\nGLAPI void APIENTRY glMakeTextureHandleResidentARB (GLuint64 handle);\nGLAPI void APIENTRY glMakeTextureHandleNonResidentARB (GLuint64 handle);\nGLAPI GLuint64 APIENTRY glGetImageHandleARB (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);\nGLAPI void APIENTRY glMakeImageHandleResidentARB (GLuint64 handle, GLenum access);\nGLAPI void APIENTRY glMakeImageHandleNonResidentARB (GLuint64 handle);\nGLAPI void APIENTRY glUniformHandleui64ARB (GLint location, GLuint64 value);\nGLAPI void APIENTRY glUniformHandleui64vARB (GLint location, GLsizei count, const GLuint64 *value);\nGLAPI void APIENTRY glProgramUniformHandleui64ARB (GLuint program, GLint location, GLuint64 value);\nGLAPI void APIENTRY glProgramUniformHandleui64vARB (GLuint program, GLint location, GLsizei count, const GLuint64 *values);\nGLAPI GLboolean APIENTRY glIsTextureHandleResidentARB (GLuint64 handle);\nGLAPI GLboolean APIENTRY glIsImageHandleResidentARB (GLuint64 handle);\nGLAPI void APIENTRY glVertexAttribL1ui64ARB (GLuint index, GLuint64EXT x);\nGLAPI void APIENTRY glVertexAttribL1ui64vARB (GLuint index, const GLuint64EXT *v);\nGLAPI void APIENTRY glGetVertexAttribLui64vARB (GLuint index, GLenum pname, GLuint64EXT *params);\n#endif\n#endif /* GL_ARB_bindless_texture */\n\n#ifndef GL_ARB_blend_func_extended\n#define GL_ARB_blend_func_extended 1\n#endif /* GL_ARB_blend_func_extended */\n\n#ifndef GL_ARB_buffer_storage\n#define GL_ARB_buffer_storage 1\n#endif /* GL_ARB_buffer_storage */\n\n#ifndef GL_ARB_cl_event\n#define GL_ARB_cl_event 1\nstruct _cl_context;\nstruct _cl_event;\n#define GL_SYNC_CL_EVENT_ARB              0x8240\n#define GL_SYNC_CL_EVENT_COMPLETE_ARB     0x8241\ntypedef GLsync (APIENTRYP PFNGLCREATESYNCFROMCLEVENTARBPROC) (struct _cl_context *context, struct _cl_event *event, GLbitfield flags);\n#ifdef GL_GLEXT_PROTOTYPES\nGLAPI GLsync APIENTRY glCreateSyncFromCLeventARB (struct _cl_context *context, struct _cl_event *event, GLbitfield flags);\n#endif\n#endif /* GL_ARB_cl_event */\n\n#ifndef GL_ARB_clear_buffer_object\n#define GL_ARB_clear_buffer_object 1\n#endif /* GL_ARB_clear_buffer_object */\n\n#ifndef GL_ARB_clear_texture\n#define GL_ARB_clear_texture 1\n#endif /* GL_ARB_clear_texture */\n\n#ifndef GL_ARB_clip_control\n#define GL_ARB_clip_control 1\n#endif /* GL_ARB_clip_control */\n\n#ifndef GL_ARB_compressed_texture_pixel_storage\n#define GL_ARB_compressed_texture_pixel_storage 1\n#endif /* GL_ARB_compressed_texture_pixel_storage */\n\n#ifndef GL_ARB_compute_shader\n#define GL_ARB_compute_shader 1\n#endif /* GL_ARB_compute_shader */\n\n#ifndef GL_ARB_compute_variable_group_size\n#define GL_ARB_compute_variable_group_size 1\n#define GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB 0x9344\n#define GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB 0x90EB\n#define GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB 0x9345\n#define GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB 0x91BF\ntypedef void (APIENTRYP PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);\n#ifdef GL_GLEXT_PROTOTYPES\nGLAPI void APIENTRY glDispatchComputeGroupSizeARB (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);\n#endif\n#endif /* GL_ARB_compute_variable_group_size */\n\n#ifndef GL_ARB_conditional_render_inverted\n#define GL_ARB_conditional_render_inverted 1\n#endif /* GL_ARB_conditional_render_inverted */\n\n#ifndef GL_ARB_conservative_depth\n#define GL_ARB_conservative_depth 1\n#endif /* GL_ARB_conservative_depth */\n\n#ifndef GL_ARB_copy_buffer\n#define GL_ARB_copy_buffer 1\n#endif /* GL_ARB_copy_buffer */\n\n#ifndef GL_ARB_copy_image\n#define GL_ARB_copy_image 1\n#endif /* GL_ARB_copy_image */\n\n#ifndef GL_ARB_cull_distance\n#define GL_ARB_cull_distance 1\n#endif /* GL_ARB_cull_distance */\n\n#ifndef GL_ARB_debug_output\n#define GL_ARB_debug_output 1\ntypedef void (APIENTRY  *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);\n#define GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB   0x8242\n#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB 0x8243\n#define GL_DEBUG_CALLBACK_FUNCTION_ARB    0x8244\n#define GL_DEBUG_CALLBACK_USER_PARAM_ARB  0x8245\n#define GL_DEBUG_SOURCE_API_ARB           0x8246\n#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB 0x8247\n#define GL_DEBUG_SOURCE_SHADER_COMPILER_ARB 0x8248\n#define GL_DEBUG_SOURCE_THIRD_PARTY_ARB   0x8249\n#define GL_DEBUG_SOURCE_APPLICATION_ARB   0x824A\n#define GL_DEBUG_SOURCE_OTHER_ARB         0x824B\n#define GL_DEBUG_TYPE_ERROR_ARB           0x824C\n#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB 0x824D\n#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB 0x824E\n#define GL_DEBUG_TYPE_PORTABILITY_ARB     0x824F\n#define GL_DEBUG_TYPE_PERFORMANCE_ARB     0x8250\n#define GL_DEBUG_TYPE_OTHER_ARB           0x8251\n#define GL_MAX_DEBUG_MESSAGE_LENGTH_ARB   0x9143\n#define GL_MAX_DEBUG_LOGGED_MESSAGES_ARB  0x9144\n#define GL_DEBUG_LOGGED_MESSAGES_ARB      0x9145\n#define GL_DEBUG_SEVERITY_HIGH_ARB        0x9146\n#define GL_DEBUG_SEVERITY_MEDIUM_ARB      0x9147\n#define GL_DEBUG_SEVERITY_LOW_ARB         0x9148\ntypedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLARBPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);\ntypedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTARBPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);\ntypedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKARBPROC) (GLDEBUGPROCARB callback, const void *userParam);\ntypedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGARBPROC) (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);\n#ifdef GL_GLEXT_PROTOTYPES\nGLAPI void APIENTRY glDebugMessageControlARB (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);\nGLAPI void APIENTRY glDebugMessageInsertARB (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);\nGLAPI void APIENTRY glDebugMessageCallbackARB (GLDEBUGPROCARB callback, const void *userParam);\nGLAPI GLuint APIENTRY glGetDebugMessageLogARB (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);\n#endif\n#endif /* GL_ARB_debug_output */\n\n#ifndef GL_ARB_depth_buffer_float\n#define GL_ARB_depth_buffer_float 1\n#endif /* GL_ARB_depth_buffer_float */\n\n#ifndef GL_ARB_depth_clamp\n#define GL_ARB_depth_clamp 1\n#endif /* GL_ARB_depth_clamp */\n\n#ifndef GL_ARB_derivative_control\n#define GL_ARB_derivative_control 1\n#endif /* GL_ARB_derivative_control */\n\n#ifndef GL_ARB_direct_state_access\n#define GL_ARB_direct_state_access 1\n#endif /* GL_ARB_direct_state_access */\n\n#ifndef GL_ARB_draw_buffers_blend\n#define GL_ARB_draw_buffers_blend 1\ntypedef void (APIENTRYP PFNGLBLENDEQUATIONIARBPROC) (GLuint buf, GLenum mode);\ntypedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIARBPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);\ntypedef void (APIENTRYP PFNGLBLENDFUNCIARBPROC) (GLuint buf, GLenum src, GLenum dst);\ntypedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIARBPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);\n#ifdef GL_GLEXT_PROTOTYPES\nGLAPI void APIENTRY glBlendEquationiARB (GLuint buf, GLenum mode);\nGLAPI void APIENTRY glBlendEquationSeparateiARB (GLuint buf, GLenum modeRGB, GLenum modeAlpha);\nGLAPI void APIENTRY glBlendFunciARB (GLuint buf, GLenum src, GLenum dst);\nGLAPI void APIENTRY glBlendFuncSeparateiARB (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);\n#endif\n#endif /* GL_ARB_draw_buffers_blend */\n\n#ifndef GL_ARB_draw_elements_base_vertex\n#define GL_ARB_draw_elements_base_vertex 1\n#endif /* GL_ARB_draw_elements_base_vertex */\n\n#ifndef GL_ARB_draw_indirect\n#define GL_ARB_draw_indirect 1\n#endif /* GL_ARB_draw_indirect */\n\n#ifndef GL_ARB_enhanced_layouts\n#define GL_ARB_enhanced_layouts 1\n#endif /* GL_ARB_enhanced_layouts */\n\n#ifndef GL_ARB_explicit_attrib_location\n#define GL_ARB_explicit_attrib_location 1\n#endif /* GL_ARB_explicit_attrib_location */\n\n#ifndef GL_ARB_explicit_uniform_location\n#define GL_ARB_explicit_uniform_location 1\n#endif /* GL_ARB_explicit_uniform_location */\n\n#ifndef GL_ARB_fragment_coord_conventions\n#define GL_ARB_fragment_coord_conventions 1\n#endif /* GL_ARB_fragment_coord_conventions */\n\n#ifndef GL_ARB_fragment_layer_viewport\n#define GL_ARB_fragment_layer_viewport 1\n#endif /* GL_ARB_fragment_layer_viewport */\n\n#ifndef GL_ARB_framebuffer_no_attachments\n#define GL_ARB_framebuffer_no_attachments 1\n#endif /* GL_ARB_framebuffer_no_attachments */\n\n#ifndef GL_ARB_framebuffer_object\n#define GL_ARB_framebuffer_object 1\n#endif /* GL_ARB_framebuffer_object */\n\n#ifndef GL_ARB_framebuffer_sRGB\n#define GL_ARB_framebuffer_sRGB 1\n#endif /* GL_ARB_framebuffer_sRGB */\n\n#ifndef GL_ARB_get_program_binary\n#define GL_ARB_get_program_binary 1\n#endif /* GL_ARB_get_program_binary */\n\n#ifndef GL_ARB_get_texture_sub_image\n#define GL_ARB_get_texture_sub_image 1\n#endif /* GL_ARB_get_texture_sub_image */\n\n#ifndef GL_ARB_gpu_shader5\n#define GL_ARB_gpu_shader5 1\n#endif /* GL_ARB_gpu_shader5 */\n\n#ifndef GL_ARB_gpu_shader_fp64\n#define GL_ARB_gpu_shader_fp64 1\n#endif /* GL_ARB_gpu_shader_fp64 */\n\n#ifndef GL_ARB_half_float_vertex\n#define GL_ARB_half_float_vertex 1\n#endif /* GL_ARB_half_float_vertex */\n\n#ifndef GL_ARB_imaging\n#define GL_ARB_imaging 1\n#define GL_BLEND_COLOR                    0x8005\n#define GL_BLEND_EQUATION                 0x8009\n#endif /* GL_ARB_imaging */\n\n#ifndef GL_ARB_indirect_parameters\n#define GL_ARB_indirect_parameters 1\n#define GL_PARAMETER_BUFFER_ARB           0x80EE\n#define GL_PARAMETER_BUFFER_BINDING_ARB   0x80EF\ntypedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC) (GLenum mode, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);\ntypedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC) (GLenum mode, GLenum type, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);\n#ifdef GL_GLEXT_PROTOTYPES\nGLAPI void APIENTRY glMultiDrawArraysIndirectCountARB (GLenum mode, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);\nGLAPI void APIENTRY glMultiDrawElementsIndirectCountARB (GLenum mode, GLenum type, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);\n#endif\n#endif /* GL_ARB_indirect_parameters */\n\n#ifndef GL_ARB_internalformat_query\n#define GL_ARB_internalformat_query 1\n#endif /* GL_ARB_internalformat_query */\n\n#ifndef GL_ARB_internalformat_query2\n#define GL_ARB_internalformat_query2 1\n#define GL_SRGB_DECODE_ARB                0x8299\n#endif /* GL_ARB_internalformat_query2 */\n\n#ifndef GL_ARB_invalidate_subdata\n#define GL_ARB_invalidate_subdata 1\n#endif /* GL_ARB_invalidate_subdata */\n\n#ifndef GL_ARB_map_buffer_alignment\n#define GL_ARB_map_buffer_alignment 1\n#endif /* GL_ARB_map_buffer_alignment */\n\n#ifndef GL_ARB_map_buffer_range\n#define GL_ARB_map_buffer_range 1\n#endif /* GL_ARB_map_buffer_range */\n\n#ifndef GL_ARB_multi_bind\n#define GL_ARB_multi_bind 1\n#endif /* GL_ARB_multi_bind */\n\n#ifndef GL_ARB_multi_draw_indirect\n#define GL_ARB_multi_draw_indirect 1\n#endif /* GL_ARB_multi_draw_indirect */\n\n#ifndef GL_ARB_occlusion_query2\n#define GL_ARB_occlusion_query2 1\n#endif /* GL_ARB_occlusion_query2 */\n\n#ifndef GL_ARB_pipeline_statistics_query\n#define GL_ARB_pipeline_statistics_query 1\n#define GL_VERTICES_SUBMITTED_ARB         0x82EE\n#define GL_PRIMITIVES_SUBMITTED_ARB       0x82EF\n#define GL_VERTEX_SHADER_INVOCATIONS_ARB  0x82F0\n#define GL_TESS_CONTROL_SHADER_PATCHES_ARB 0x82F1\n#define GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB 0x82F2\n#define GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB 0x82F3\n#define GL_FRAGMENT_SHADER_INVOCATIONS_ARB 0x82F4\n#define GL_COMPUTE_SHADER_INVOCATIONS_ARB 0x82F5\n#define GL_CLIPPING_INPUT_PRIMITIVES_ARB  0x82F6\n#define GL_CLIPPING_OUTPUT_PRIMITIVES_ARB 0x82F7\n#endif /* GL_ARB_pipeline_statistics_query */\n\n#ifndef GL_ARB_program_interface_query\n#define GL_ARB_program_interface_query 1\n#endif /* GL_ARB_program_interface_query */\n\n#ifndef GL_ARB_provoking_vertex\n#define GL_ARB_provoking_vertex 1\n#endif /* GL_ARB_provoking_vertex */\n\n#ifndef GL_ARB_query_buffer_object\n#define GL_ARB_query_buffer_object 1\n#endif /* GL_ARB_query_buffer_object */\n\n#ifndef GL_ARB_robust_buffer_access_behavior\n#define GL_ARB_robust_buffer_access_behavior 1\n#endif /* GL_ARB_robust_buffer_access_behavior */\n\n#ifndef GL_ARB_robustness\n#define GL_ARB_robustness 1\n#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004\n#define GL_LOSE_CONTEXT_ON_RESET_ARB      0x8252\n#define GL_GUILTY_CONTEXT_RESET_ARB       0x8253\n#define GL_INNOCENT_CONTEXT_RESET_ARB     0x8254\n#define GL_UNKNOWN_CONTEXT_RESET_ARB      0x8255\n#define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256\n#define GL_NO_RESET_NOTIFICATION_ARB      0x8261\ntypedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSARBPROC) (void);\ntypedef void (APIENTRYP PFNGLGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *img);\ntypedef void (APIENTRYP PFNGLREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);\ntypedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, void *img);\ntypedef void (APIENTRYP PFNGLGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);\ntypedef void (APIENTRYP PFNGLGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);\ntypedef void (APIENTRYP PFNGLGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);\ntypedef void (APIENTRYP PFNGLGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);\n#ifdef GL_GLEXT_PROTOTYPES\nGLAPI GLenum APIENTRY glGetGraphicsResetStatusARB (void);\nGLAPI void APIENTRY glGetnTexImageARB (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *img);\nGLAPI void APIENTRY glReadnPixelsARB (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);\nGLAPI void APIENTRY glGetnCompressedTexImageARB (GLenum target, GLint lod, GLsizei bufSize, void *img);\nGLAPI void APIENTRY glGetnUniformfvARB (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);\nGLAPI void APIENTRY glGetnUniformivARB (GLuint program, GLint location, GLsizei bufSize, GLint *params);\nGLAPI void APIENTRY glGetnUniformuivARB (GLuint program, GLint location, GLsizei bufSize, GLuint *params);\nGLAPI void APIENTRY glGetnUniformdvARB (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);\n#endif\n#endif /* GL_ARB_robustness */\n\n#ifndef GL_ARB_robustness_isolation\n#define GL_ARB_robustness_isolation 1\n#endif /* GL_ARB_robustness_isolation */\n\n#ifndef GL_ARB_sample_shading\n#define GL_ARB_sample_shading 1\n#define GL_SAMPLE_SHADING_ARB             0x8C36\n#define GL_MIN_SAMPLE_SHADING_VALUE_ARB   0x8C37\ntypedef void (APIENTRYP PFNGLMINSAMPLESHADINGARBPROC) (GLfloat value);\n#ifdef GL_GLEXT_PROTOTYPES\nGLAPI void APIENTRY glMinSampleShadingARB (GLfloat value);\n#endif\n#endif /* GL_ARB_sample_shading */\n\n#ifndef GL_ARB_sampler_objects\n#define GL_ARB_sampler_objects 1\n#endif /* GL_ARB_sampler_objects */\n\n#ifndef GL_ARB_seamless_cube_map\n#define GL_ARB_seamless_cube_map 1\n#endif /* GL_ARB_seamless_cube_map */\n\n#ifndef GL_ARB_seamless_cubemap_per_texture\n#define GL_ARB_seamless_cubemap_per_texture 1\n#endif /* GL_ARB_seamless_cubemap_per_texture */\n\n#ifndef GL_ARB_separate_shader_objects\n#define GL_ARB_separate_shader_objects 1\n#endif /* GL_ARB_separate_shader_objects */\n\n#ifndef GL_ARB_shader_atomic_counters\n#define GL_ARB_shader_atomic_counters 1\n#endif /* GL_ARB_shader_atomic_counters */\n\n#ifndef GL_ARB_shader_bit_encoding\n#define GL_ARB_shader_bit_encoding 1\n#endif /* GL_ARB_shader_bit_encoding */\n\n#ifndef GL_ARB_shader_draw_parameters\n#define GL_ARB_shader_draw_parameters 1\n#endif /* GL_ARB_shader_draw_parameters */\n\n#ifndef GL_ARB_shader_group_vote\n#define GL_ARB_shader_group_vote 1\n#endif /* GL_ARB_shader_group_vote */\n\n#ifndef GL_ARB_shader_image_load_store\n#define GL_ARB_shader_image_load_store 1\n#endif /* GL_ARB_shader_image_load_store */\n\n#ifndef GL_ARB_shader_image_size\n#define GL_ARB_shader_image_size 1\n#endif /* GL_ARB_shader_image_size */\n\n#ifndef GL_ARB_shader_precision\n#define GL_ARB_shader_precision 1\n#endif /* GL_ARB_shader_precision */\n\n#ifndef GL_ARB_shader_stencil_export\n#define GL_ARB_shader_stencil_export 1\n#endif /* GL_ARB_shader_stencil_export */\n\n#ifndef GL_ARB_shader_storage_buffer_object\n#define GL_ARB_shader_storage_buffer_object 1\n#endif /* GL_ARB_shader_storage_buffer_object */\n\n#ifndef GL_ARB_shader_subroutine\n#define GL_ARB_shader_subroutine 1\n#endif /* GL_ARB_shader_subroutine */\n\n#ifndef GL_ARB_shader_texture_image_samples\n#define GL_ARB_shader_texture_image_samples 1\n#endif /* GL_ARB_shader_texture_image_samples */\n\n#ifndef GL_ARB_shading_language_420pack\n#define GL_ARB_shading_language_420pack 1\n#endif /* GL_ARB_shading_language_420pack */\n\n#ifndef GL_ARB_shading_language_include\n#define GL_ARB_shading_language_include 1\n#define GL_SHADER_INCLUDE_ARB             0x8DAE\n#define GL_NAMED_STRING_LENGTH_ARB        0x8DE9\n#define GL_NAMED_STRING_TYPE_ARB          0x8DEA\ntypedef void (APIENTRYP PFNGLNAMEDSTRINGARBPROC) (GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string);\ntypedef void (APIENTRYP PFNGLDELETENAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);\ntypedef void (APIENTRYP PFNGLCOMPILESHADERINCLUDEARBPROC) (GLuint shader, GLsizei count, const GLchar *const*path, const GLint *length);\ntypedef GLboolean (APIENTRYP PFNGLISNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);\ntypedef void (APIENTRYP PFNGLGETNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string);\ntypedef void (APIENTRYP PFNGLGETNAMEDSTRINGIVARBPROC) (GLint namelen, const GLchar *name, GLenum pname, GLint *params);\n#ifdef GL_GLEXT_PROTOTYPES\nGLAPI void APIENTRY glNamedStringARB (GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string);\nGLAPI void APIENTRY glDeleteNamedStringARB (GLint namelen, const GLchar *name);\nGLAPI void APIENTRY glCompileShaderIncludeARB (GLuint shader, GLsizei count, const GLchar *const*path, const GLint *length);\nGLAPI GLboolean APIENTRY glIsNamedStringARB (GLint namelen, const GLchar *name);\nGLAPI void APIENTRY glGetNamedStringARB (GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string);\nGLAPI void APIENTRY glGetNamedStringivARB (GLint namelen, const GLchar *name, GLenum pname, GLint *params);\n#endif\n#endif /* GL_ARB_shading_language_include */\n\n#ifndef GL_ARB_shading_language_packing\n#define GL_ARB_shading_language_packing 1\n#endif /* GL_ARB_shading_language_packing */\n\n#ifndef GL_ARB_sparse_buffer\n#define GL_ARB_sparse_buffer 1\n#define GL_SPARSE_STORAGE_BIT_ARB         0x0400\n#define GL_SPARSE_BUFFER_PAGE_SIZE_ARB    0x82F8\ntypedef void (APIENTRYP PFNGLBUFFERPAGECOMMITMENTARBPROC) (GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit);\ntypedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);\ntypedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);\n#ifdef GL_GLEXT_PROTOTYPES\nGLAPI void APIENTRY glBufferPageCommitmentARB (GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit);\nGLAPI void APIENTRY glNamedBufferPageCommitmentEXT (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);\nGLAPI void APIENTRY glNamedBufferPageCommitmentARB (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);\n#endif\n#endif /* GL_ARB_sparse_buffer */\n\n#ifndef GL_ARB_sparse_texture\n#define GL_ARB_sparse_texture 1\n#define GL_TEXTURE_SPARSE_ARB             0x91A6\n#define GL_VIRTUAL_PAGE_SIZE_INDEX_ARB    0x91A7\n#define GL_NUM_SPARSE_LEVELS_ARB          0x91AA\n#define GL_NUM_VIRTUAL_PAGE_SIZES_ARB     0x91A8\n#define GL_VIRTUAL_PAGE_SIZE_X_ARB        0x9195\n#define GL_VIRTUAL_PAGE_SIZE_Y_ARB        0x9196\n#define GL_VIRTUAL_PAGE_SIZE_Z_ARB        0x9197\n#define GL_MAX_SPARSE_TEXTURE_SIZE_ARB    0x9198\n#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB 0x9199\n#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB 0x919A\n#define GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB 0x91A9\ntypedef void (APIENTRYP PFNGLTEXPAGECOMMITMENTARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);\n#ifdef GL_GLEXT_PROTOTYPES\nGLAPI void APIENTRY glTexPageCommitmentARB (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);\n#endif\n#endif /* GL_ARB_sparse_texture */\n\n#ifndef GL_ARB_stencil_texturing\n#define GL_ARB_stencil_texturing 1\n#endif /* GL_ARB_stencil_texturing */\n\n#ifndef GL_ARB_sync\n#define GL_ARB_sync 1\n#endif /* GL_ARB_sync */\n\n#ifndef GL_ARB_tessellation_shader\n#define GL_ARB_tessellation_shader 1\n#endif /* GL_ARB_tessellation_shader */\n\n#ifndef GL_ARB_texture_barrier\n#define GL_ARB_texture_barrier 1\n#endif /* GL_ARB_texture_barrier */\n\n#ifndef GL_ARB_texture_buffer_object_rgb32\n#define GL_ARB_texture_buffer_object_rgb32 1\n#endif /* GL_ARB_texture_buffer_object_rgb32 */\n\n#ifndef GL_ARB_texture_buffer_range\n#define GL_ARB_texture_buffer_range 1\n#endif /* GL_ARB_texture_buffer_range */\n\n#ifndef GL_ARB_texture_compression_bptc\n#define GL_ARB_texture_compression_bptc 1\n#define GL_COMPRESSED_RGBA_BPTC_UNORM_ARB 0x8E8C\n#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB 0x8E8D\n#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB 0x8E8E\n#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB 0x8E8F\n#endif /* GL_ARB_texture_compression_bptc */\n\n#ifndef GL_ARB_texture_compression_rgtc\n#define GL_ARB_texture_compression_rgtc 1\n#endif /* GL_ARB_texture_compression_rgtc */\n\n#ifndef GL_ARB_texture_cube_map_array\n#define GL_ARB_texture_cube_map_array 1\n#define GL_TEXTURE_CUBE_MAP_ARRAY_ARB     0x9009\n#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB 0x900A\n#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB 0x900B\n#define GL_SAMPLER_CUBE_MAP_ARRAY_ARB     0x900C\n#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB 0x900D\n#define GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB 0x900E\n#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB 0x900F\n#endif /* GL_ARB_texture_cube_map_array */\n\n#ifndef GL_ARB_texture_gather\n#define GL_ARB_texture_gather 1\n#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB 0x8E5E\n#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB 0x8E5F\n#define GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB 0x8F9F\n#endif /* GL_ARB_texture_gather */\n\n#ifndef GL_ARB_texture_mirror_clamp_to_edge\n#define GL_ARB_texture_mirror_clamp_to_edge 1\n#endif /* GL_ARB_texture_mirror_clamp_to_edge */\n\n#ifndef GL_ARB_texture_multisample\n#define GL_ARB_texture_multisample 1\n#endif /* GL_ARB_texture_multisample */\n\n#ifndef GL_ARB_texture_query_levels\n#define GL_ARB_texture_query_levels 1\n#endif /* GL_ARB_texture_query_levels */\n\n#ifndef GL_ARB_texture_query_lod\n#define GL_ARB_texture_query_lod 1\n#endif /* GL_ARB_texture_query_lod */\n\n#ifndef GL_ARB_texture_rg\n#define GL_ARB_texture_rg 1\n#endif /* GL_ARB_texture_rg */\n\n#ifndef GL_ARB_texture_rgb10_a2ui\n#define GL_ARB_texture_rgb10_a2ui 1\n#endif /* GL_ARB_texture_rgb10_a2ui */\n\n#ifndef GL_ARB_texture_stencil8\n#define GL_ARB_texture_stencil8 1\n#endif /* GL_ARB_texture_stencil8 */\n\n#ifndef GL_ARB_texture_storage\n#define GL_ARB_texture_storage 1\n#endif /* GL_ARB_texture_storage */\n\n#ifndef GL_ARB_texture_storage_multisample\n#define GL_ARB_texture_storage_multisample 1\n#endif /* GL_ARB_texture_storage_multisample */\n\n#ifndef GL_ARB_texture_swizzle\n#define GL_ARB_texture_swizzle 1\n#endif /* GL_ARB_texture_swizzle */\n\n#ifndef GL_ARB_texture_view\n#define GL_ARB_texture_view 1\n#endif /* GL_ARB_texture_view */\n\n#ifndef GL_ARB_timer_query\n#define GL_ARB_timer_query 1\n#endif /* GL_ARB_timer_query */\n\n#ifndef GL_ARB_transform_feedback2\n#define GL_ARB_transform_feedback2 1\n#endif /* GL_ARB_transform_feedback2 */\n\n#ifndef GL_ARB_transform_feedback3\n#define GL_ARB_transform_feedback3 1\n#endif /* GL_ARB_transform_feedback3 */\n\n#ifndef GL_ARB_transform_feedback_instanced\n#define GL_ARB_transform_feedback_instanced 1\n#endif /* GL_ARB_transform_feedback_instanced */\n\n#ifndef GL_ARB_transform_feedback_overflow_query\n#define GL_ARB_transform_feedback_overflow_query 1\n#define GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB 0x82EC\n#define GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB 0x82ED\n#endif /* GL_ARB_transform_feedback_overflow_query */\n\n#ifndef GL_ARB_uniform_buffer_object\n#define GL_ARB_uniform_buffer_object 1\n#endif /* GL_ARB_uniform_buffer_object */\n\n#ifndef GL_ARB_vertex_array_bgra\n#define GL_ARB_vertex_array_bgra 1\n#endif /* GL_ARB_vertex_array_bgra */\n\n#ifndef GL_ARB_vertex_array_object\n#define GL_ARB_vertex_array_object 1\n#endif /* GL_ARB_vertex_array_object */\n\n#ifndef GL_ARB_vertex_attrib_64bit\n#define GL_ARB_vertex_attrib_64bit 1\n#endif /* GL_ARB_vertex_attrib_64bit */\n\n#ifndef GL_ARB_vertex_attrib_binding\n#define GL_ARB_vertex_attrib_binding 1\n#endif /* GL_ARB_vertex_attrib_binding */\n\n#ifndef GL_ARB_vertex_type_10f_11f_11f_rev\n#define GL_ARB_vertex_type_10f_11f_11f_rev 1\n#endif /* GL_ARB_vertex_type_10f_11f_11f_rev */\n\n#ifndef GL_ARB_vertex_type_2_10_10_10_rev\n#define GL_ARB_vertex_type_2_10_10_10_rev 1\n#endif /* GL_ARB_vertex_type_2_10_10_10_rev */\n\n#ifndef GL_ARB_viewport_array\n#define GL_ARB_viewport_array 1\n#endif /* GL_ARB_viewport_array */\n\n#ifndef GL_KHR_context_flush_control\n#define GL_KHR_context_flush_control 1\n#endif /* GL_KHR_context_flush_control */\n\n#ifndef GL_KHR_debug\n#define GL_KHR_debug 1\n#endif /* GL_KHR_debug */\n\n#ifndef GL_KHR_robust_buffer_access_behavior\n#define GL_KHR_robust_buffer_access_behavior 1\n#endif /* GL_KHR_robust_buffer_access_behavior */\n\n#ifndef GL_KHR_robustness\n#define GL_KHR_robustness 1\n#define GL_CONTEXT_ROBUST_ACCESS          0x90F3\n#endif /* GL_KHR_robustness */\n\n#ifndef GL_KHR_texture_compression_astc_hdr\n#define GL_KHR_texture_compression_astc_hdr 1\n#define GL_COMPRESSED_RGBA_ASTC_4x4_KHR   0x93B0\n#define GL_COMPRESSED_RGBA_ASTC_5x4_KHR   0x93B1\n#define GL_COMPRESSED_RGBA_ASTC_5x5_KHR   0x93B2\n#define GL_COMPRESSED_RGBA_ASTC_6x5_KHR   0x93B3\n#define GL_COMPRESSED_RGBA_ASTC_6x6_KHR   0x93B4\n#define GL_COMPRESSED_RGBA_ASTC_8x5_KHR   0x93B5\n#define GL_COMPRESSED_RGBA_ASTC_8x6_KHR   0x93B6\n#define GL_COMPRESSED_RGBA_ASTC_8x8_KHR   0x93B7\n#define GL_COMPRESSED_RGBA_ASTC_10x5_KHR  0x93B8\n#define GL_COMPRESSED_RGBA_ASTC_10x6_KHR  0x93B9\n#define GL_COMPRESSED_RGBA_ASTC_10x8_KHR  0x93BA\n#define GL_COMPRESSED_RGBA_ASTC_10x10_KHR 0x93BB\n#define GL_COMPRESSED_RGBA_ASTC_12x10_KHR 0x93BC\n#define GL_COMPRESSED_RGBA_ASTC_12x12_KHR 0x93BD\n#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR 0x93D0\n#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR 0x93D1\n#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR 0x93D2\n#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR 0x93D3\n#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR 0x93D4\n#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR 0x93D5\n#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR 0x93D6\n#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR 0x93D7\n#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR 0x93D8\n#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR 0x93D9\n#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR 0x93DA\n#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR 0x93DB\n#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR 0x93DC\n#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR 0x93DD\n#endif /* GL_KHR_texture_compression_astc_hdr */\n\n#ifndef GL_KHR_texture_compression_astc_ldr\n#define GL_KHR_texture_compression_astc_ldr 1\n#endif /* GL_KHR_texture_compression_astc_ldr */\n\n#ifdef __cplusplus\n}\n#endif\n\n#endif\n",
			"file": "lib/jrcore/inc/GL/glcorearb.h",
			"file_size": 239636,
			"file_write_time": 130742164016679594,
			"settings":
			{
				"buffer_size": 239636,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#ifndef __JR_GL_H_\n#define __JR_GL_H_\n\n#include \"GL\\glcorearb.h\"\n\n/* Initialize OpenGL\nInitializes the OpenGL library. Must be called before any GL functions\nare called. */\nbool jrInitOpenGL();\n\nnamespace jrgl\n{\n	// GL Version 1.0\n	extern PFNGLCULLFACEPROC				jrglCullFace;\n	extern PFNGLFRONTFACEPROC				jrglFrontFace;\n	extern PFNGLHINTPROC					jrglHint;\n	extern PFNGLLINEWIDTHPROC				jrglLineWidth;\n	extern PFNGLPOINTSIZEPROC				jrglPointSize;\n	extern PFNGLPOLYGONMODEPROC				jrglPolygonMode;\n	extern PFNGLSCISSORPROC					jrglScissor;\n	extern PFNGLTEXPARAMETERFPROC			jrglTexParameterf;\n	extern PFNGLTEXPARAMETERFVPROC			jrglTexParameterfv;\n	extern PFNGLTEXPARAMETERIPROC			jrglTexParameteri;\n	extern PFNGLTEXPARAMETERIVPROC			jrglTexParameteriv;\n	extern PFNGLTEXIMAGE1DPROC				jrglTexImage1D;\n	extern PFNGLTEXIMAGE2DPROC				jrglTexImage2D;\n	extern PFNGLDRAWBUFFERPROC				jrglDrawBuffer;\n	extern PFNGLCLEARPROC					jrglClear;\n	extern PFNGLCLEARCOLORPROC				jrglClearColor;\n	extern PFNGLCLEARSTENCILPROC			jrglClearStencil;\n	extern PFNGLCLEARDEPTHPROC				jrglClearDepth;\n	extern PFNGLSTENCILMASKPROC				jrglStencilMask;\n	extern PFNGLCOLORMASKPROC				jrglColorMask;\n	extern PFNGLDEPTHMASKPROC				jrglDepthMask;\n	extern PFNGLDISABLEPROC					jrglDisable;\n	extern PFNGLENABLEPROC					jrglEnable;\n	extern PFNGLFINISHPROC					jrglFinish;\n	extern PFNGLFLUSHPROC					jrglFlush;\n	extern PFNGLBLENDFUNCPROC				jrglBlendFunc;\n	extern PFNGLLOGICOPPROC					jrglLogicOp;\n	extern PFNGLSTENCILFUNCPROC				jrglStencilFunc;\n	extern PFNGLSTENCILOPPROC				jrglStencilOp;\n	extern PFNGLDEPTHFUNCPROC				jrglDepthFunc;\n	extern PFNGLPIXELSTOREFPROC				jrglPixelStoref;\n	extern PFNGLPIXELSTOREIPROC				jrglPixelStorei;\n	extern PFNGLREADBUFFERPROC				jrglReadBuffer;\n	extern PFNGLREADPIXELSPROC				jrglReadPixels;\n	extern PFNGLGETBOOLEANVPROC				jrglGetBooleanv;\n	extern PFNGLGETDOUBLEVPROC				jrglGetDoublev;\n	extern PFNGLGETERRORPROC				jrglGetError;\n	extern PFNGLGETFLOATVPROC				jrglGetFloatv;\n	extern PFNGLGETINTEGERVPROC				jrglGetIntegerv;\n	extern PFNGLGETSTRINGPROC				jrglGetString;\n	extern PFNGLGETTEXIMAGEPROC				jrglGetTexImage;\n	extern PFNGLGETTEXPARAMETERFVPROC		jrglGetTexParameterfv;\n	extern PFNGLGETTEXPARAMETERIVPROC		jrglGetTexParameteriv;\n	extern PFNGLGETTEXLEVELPARAMETERFVPROC	jrglGetTexLevelParameterfv;\n	extern PFNGLGETTEXLEVELPARAMETERIVPROC	jrglGetTexLevelParameteriv;\n	extern PFNGLISENABLEDPROC				jrglIsEnabled;\n	extern PFNGLDEPTHRANGEPROC				jrglDepthRange;\n	extern PFNGLVIEWPORTPROC				jrglViewport;\n\n	// GL Version 1.1\n	extern PFNGLDRAWARRAYSPROC			jrglDrawArrays;\n	extern PFNGLDRAWELEMENTSPROC		jrglDrawElements;\n	extern PFNGLGETPOINTERVPROC			jrglGetPointerv;\n	extern PFNGLPOLYGONOFFSETPROC		jrglPolygonOffset;\n	extern PFNGLCOPYTEXIMAGE1DPROC		jrglCopyTexImage1D;\n	extern PFNGLCOPYTEXIMAGE2DPROC		jrglCopyTexImage2D;\n	extern PFNGLCOPYTEXSUBIMAGE1DPROC	jrglCopyTexSubImage1D;\n	extern PFNGLCOPYTEXSUBIMAGE2DPROC	jrglCopyTexSubImage2D;\n	extern PFNGLTEXSUBIMAGE1DPROC		jrglTexSubImage1D;\n	extern PFNGLTEXSUBIMAGE2DPROC		jrglTexSubImage2D;\n	extern PFNGLBINDTEXTUREPROC			jrglBindTexture;\n	extern PFNGLDELETETEXTURESPROC		jrglDeleteTextures;\n	extern PFNGLGENTEXTURESPROC			jrglGenTextures;\n	extern PFNGLISTEXTUREPROC			jrglIsTexture;\n\n	// GL Version 1.2	\n	extern PFNGLDRAWRANGEELEMENTSPROC jrglDrawRangeElements;\n	extern PFNGLTEXIMAGE3DPROC		  jrglTexImage3D;\n	extern PFNGLTEXSUBIMAGE3DPROC	  jrglTexSubImage3D;\n	extern PFNGLCOPYTEXSUBIMAGE3DPROC jrglCopyTexSubImage3D;\n\n	// GL Version 1.3\n	extern PFNGLACTIVETEXTUREPROC			jrglActiveTexture;\n	extern PFNGLSAMPLECOVERAGEPROC			jrglSampleCoverage;\n	extern PFNGLCOMPRESSEDTEXIMAGE3DPROC	jrglCompressedTexImage3D;\n	extern PFNGLCOMPRESSEDTEXIMAGE2DPROC	jrglCompressedTexImage2D;\n	extern PFNGLCOMPRESSEDTEXIMAGE1DPROC	jrglCompressedTexImage1D;\n	extern PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	jrglCompressedTexSubImage3D;\n	extern PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	jrglCompressedTexSubImage2D;\n	extern PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	jrglCompressedTexSubImage1D;\n	extern PFNGLGETCOMPRESSEDTEXIMAGEPROC	jrglGetCompressedTexImage;\n\n	// GL Version 1.4\n	extern PFNGLBLENDFUNCSEPARATEPROC jrglBlendFuncSeparate;\n	extern PFNGLMULTIDRAWARRAYSPROC	  jrglMultiDrawArrays;\n	extern PFNGLMULTIDRAWELEMENTSPROC jrglMultiDrawElements;\n	extern PFNGLPOINTPARAMETERFPROC	  jrglPointParameterf;\n	extern PFNGLPOINTPARAMETERFVPROC  jrglPointParameterfv;\n	extern PFNGLPOINTPARAMETERIPROC	  jrglPointParameteri;\n	extern PFNGLPOINTPARAMETERIVPROC  jrglPointParameteriv;\n	extern PFNGLBLENDCOLORPROC		  jrglBlendColor;\n	extern PFNGLBLENDEQUATIONPROC	  jrglBlendEquation;\n\n	// GL Version 1.5\n	extern PFNGLGENQUERIESPROC			 jrglGenQueries;\n	extern PFNGLDELETEQUERIESPROC		 jrglDeleteQueries;\n	extern PFNGLISQUERYPROC				 jrglIsQuery;\n	extern PFNGLBEGINQUERYPROC			 jrglBeginQuery;\n	extern PFNGLENDQUERYPROC			 jrglEndQuery;\n	extern PFNGLGETQUERYIVPROC			 jrglGetQueryiv;\n	extern PFNGLGETQUERYOBJECTIVPROC	 jrglGetQueryObjectiv;\n	extern PFNGLGETQUERYOBJECTUIVPROC	 jrglGetQueryObjectuiv;\n	extern PFNGLBINDBUFFERPROC			 jrglBindBuffer;\n	extern PFNGLDELETEBUFFERSPROC		 jrglDeleteBuffers;\n	extern PFNGLGENBUFFERSPROC			 jrglGenBuffers;\n	extern PFNGLISBUFFERPROC			 jrglIsBuffer;\n	extern PFNGLBUFFERDATAPROC			 jrglBufferData;\n	extern PFNGLBUFFERSUBDATAPROC		 jrglBufferSubData;\n	extern PFNGLGETBUFFERSUBDATAPROC	 jrglGetBufferSubData;\n	extern PFNGLMAPBUFFERPROC			 jrglMapBuffer;\n	extern PFNGLUNMAPBUFFERPROC			 jrglUnmapBuffer;\n	extern PFNGLGETBUFFERPARAMETERIVPROC jrglGetBufferParameteriv;\n	extern PFNGLGETBUFFERPOINTERVPROC	 jrglGetBufferPointerv;\n\n	// GL Version 2.0\n	extern PFNGLBLENDEQUATIONSEPARATEPROC	 jrglBlendEquationSeparate;\n	extern PFNGLDRAWBUFFERSPROC				 jrglDrawBuffers;\n	extern PFNGLSTENCILOPSEPARATEPROC		 jrglStencilOpSeparate;\n	extern PFNGLSTENCILFUNCSEPARATEPROC		 jrglStencilFuncSeparate;\n	extern PFNGLSTENCILMASKSEPARATEPROC		 jrglStencilMaskSeparate;\n	extern PFNGLATTACHSHADERPROC			 jrglAttachShader;\n	extern PFNGLBINDATTRIBLOCATIONPROC		 jrglBindAttribLocation;\n	extern PFNGLCOMPILESHADERPROC			 jrglCompileShader;\n	extern PFNGLCREATEPROGRAMPROC			 jrglCreateProgram;\n	extern PFNGLCREATESHADERPROC			 jrglCreateShader;\n	extern PFNGLDELETEPROGRAMPROC			 jrglDeleteProgram;\n	extern PFNGLDELETESHADERPROC			 jrglDeleteShader;\n	extern PFNGLDETACHSHADERPROC			 jrglDetachShader;\n	extern PFNGLDISABLEVERTEXATTRIBARRAYPROC jrglDisableVertexAttribArray;\n	extern PFNGLENABLEVERTEXATTRIBARRAYPROC	 jrglEnableVertexAttribArray;\n	extern PFNGLGETACTIVEATTRIBPROC			 jrglGetActiveAttrib;\n	extern PFNGLGETACTIVEUNIFORMPROC		 jrglGetActiveUniform;\n	extern PFNGLGETATTACHEDSHADERSPROC		 jrglGetAttachedShaders;\n	extern PFNGLGETATTRIBLOCATIONPROC		 jrglGetAttribLocation;\n	extern PFNGLGETPROGRAMIVPROC			 jrglGetProgramiv;\n	extern PFNGLGETPROGRAMINFOLOGPROC		 jrglGetProgramInfoLog;\n	extern PFNGLGETSHADERIVPROC				 jrglGetShaderiv;\n	extern PFNGLGETSHADERINFOLOGPROC		 jrglGetShaderInfoLog;\n	extern PFNGLGETSHADERSOURCEPROC			 jrglGetShaderSource;\n	extern PFNGLGETUNIFORMLOCATIONPROC		 jrglGetUniformLocation;\n	extern PFNGLGETUNIFORMFVPROC			 jrglGetUniformfv;\n	extern PFNGLGETUNIFORMIVPROC			 jrglGetUniformiv;\n	extern PFNGLGETVERTEXATTRIBDVPROC		 jrglGetVertexAttribdv;\n	extern PFNGLGETVERTEXATTRIBFVPROC		 jrglGetVertexAttribfv;\n	extern PFNGLGETVERTEXATTRIBIVPROC		 jrglGetVertexAttribiv;\n	extern PFNGLGETVERTEXATTRIBPOINTERVPROC	 jrglGetVertexAttribPointerv;\n	extern PFNGLISPROGRAMPROC				 jrglIsProgram;\n	extern PFNGLISSHADERPROC				 jrglIsShader;\n	extern PFNGLLINKPROGRAMPROC				 jrglLinkProgram;\n	extern PFNGLSHADERSOURCEPROC			 jrglShaderSource;\n	extern PFNGLUSEPROGRAMPROC				 jrglUseProgram;\n	extern PFNGLUNIFORM1FPROC				 jrglUniform1f;\n	extern PFNGLUNIFORM2FPROC				 jrglUniform2f;\n	extern PFNGLUNIFORM3FPROC				 jrglUniform3f;\n	extern PFNGLUNIFORM4FPROC				 jrglUniform4f;\n	extern PFNGLUNIFORM1IPROC				 jrglUniform1i;\n	extern PFNGLUNIFORM2IPROC				 jrglUniform2i;\n	extern PFNGLUNIFORM3IPROC				 jrglUniform3i;\n	extern PFNGLUNIFORM4IPROC				 jrglUniform4i;\n	extern PFNGLUNIFORM1FVPROC				 jrglUniform1fv;\n	extern PFNGLUNIFORM2FVPROC				 jrglUniform2fv;\n	extern PFNGLUNIFORM3FVPROC				 jrglUniform3fv;\n	extern PFNGLUNIFORM4FVPROC				 jrglUniform4fv;\n	extern PFNGLUNIFORM1IVPROC				 jrglUniform1iv;\n	extern PFNGLUNIFORM2IVPROC				 jrglUniform2iv;\n	extern PFNGLUNIFORM3IVPROC				 jrglUniform3iv;\n	extern PFNGLUNIFORM4IVPROC				 jrglUniform4iv;\n	extern PFNGLUNIFORMMATRIX2FVPROC		 jrglUniformMatrix2fv;\n	extern PFNGLUNIFORMMATRIX3FVPROC		 jrglUniformMatrix3fv;\n	extern PFNGLUNIFORMMATRIX4FVPROC		 jrglUniformMatrix4fv;\n	extern PFNGLVALIDATEPROGRAMPROC			 jrglValidateProgram;\n	extern PFNGLVERTEXATTRIB1DPROC			 jrglVertexAttrib1d;\n	extern PFNGLVERTEXATTRIB1DVPROC			 jrglVertexAttrib1dv;\n	extern PFNGLVERTEXATTRIB1FPROC			 jrglVertexAttrib1f;\n	extern PFNGLVERTEXATTRIB1FVPROC			 jrglVertexAttrib1fv;\n	extern PFNGLVERTEXATTRIB1SPROC			 jrglVertexAttrib1s;\n	extern PFNGLVERTEXATTRIB1SVPROC			 jrglVertexAttrib1sv;\n	extern PFNGLVERTEXATTRIB2DPROC			 jrglVertexAttrib2d;\n	extern PFNGLVERTEXATTRIB2DVPROC			 jrglVertexAttrib2dv;\n	extern PFNGLVERTEXATTRIB2FPROC			 jrglVertexAttrib2f;\n	extern PFNGLVERTEXATTRIB2FVPROC			 jrglVertexAttrib2fv;\n	extern PFNGLVERTEXATTRIB2SPROC			 jrglVertexAttrib2s;\n	extern PFNGLVERTEXATTRIB2SVPROC			 jrglVertexAttrib2sv;\n	extern PFNGLVERTEXATTRIB3DPROC			 jrglVertexAttrib3d;\n	extern PFNGLVERTEXATTRIB3DVPROC			 jrglVertexAttrib3dv;\n	extern PFNGLVERTEXATTRIB3FPROC			 jrglVertexAttrib3f;\n	extern PFNGLVERTEXATTRIB3FVPROC			 jrglVertexAttrib3fv;\n	extern PFNGLVERTEXATTRIB3SPROC			 jrglVertexAttrib3s;\n	extern PFNGLVERTEXATTRIB3SVPROC			 jrglVertexAttrib3sv;\n	extern PFNGLVERTEXATTRIB4NBVPROC		 jrglVertexAttrib4Nbv;\n	extern PFNGLVERTEXATTRIB4NIVPROC		 jrglVertexAttrib4Niv;\n	extern PFNGLVERTEXATTRIB4NSVPROC		 jrglVertexAttrib4Nsv;\n	extern PFNGLVERTEXATTRIB4NUBPROC		 jrglVertexAttrib4Nub;\n	extern PFNGLVERTEXATTRIB4NUBVPROC		 jrglVertexAttrib4Nubv;\n	extern PFNGLVERTEXATTRIB4NUIVPROC		 jrglVertexAttrib4Nuiv;\n	extern PFNGLVERTEXATTRIB4NUSVPROC		 jrglVertexAttrib4Nusv;\n	extern PFNGLVERTEXATTRIB4BVPROC			 jrglVertexAttrib4bv;\n	extern PFNGLVERTEXATTRIB4DPROC			 jrglVertexAttrib4d;\n	extern PFNGLVERTEXATTRIB4DVPROC			 jrglVertexAttrib4dv;\n	extern PFNGLVERTEXATTRIB4FPROC			 jrglVertexAttrib4f;\n	extern PFNGLVERTEXATTRIB4FVPROC			 jrglVertexAttrib4fv;\n	extern PFNGLVERTEXATTRIB4IVPROC			 jrglVertexAttrib4iv;\n	extern PFNGLVERTEXATTRIB4SPROC			 jrglVertexAttrib4s;\n	extern PFNGLVERTEXATTRIB4SVPROC			 jrglVertexAttrib4sv;\n	extern PFNGLVERTEXATTRIB4UBVPROC		 jrglVertexAttrib4ubv;\n	extern PFNGLVERTEXATTRIB4UIVPROC		 jrglVertexAttrib4uiv;\n	extern PFNGLVERTEXATTRIB4USVPROC		 jrglVertexAttrib4usv;\n	extern PFNGLVERTEXATTRIBPOINTERPROC		 jrglVertexAttribPointer;\n\n	// GL Version 2.1\n	extern PFNGLUNIFORMMATRIX2X3FVPROC jrglUniformMatrix2x3fv;\n	extern PFNGLUNIFORMMATRIX3X2FVPROC jrglUniformMatrix3x2fv;\n	extern PFNGLUNIFORMMATRIX2X4FVPROC jrglUniformMatrix2x4fv;\n	extern PFNGLUNIFORMMATRIX4X2FVPROC jrglUniformMatrix4x2fv;\n	extern PFNGLUNIFORMMATRIX3X4FVPROC jrglUniformMatrix3x4fv;\n	extern PFNGLUNIFORMMATRIX4X3FVPROC jrglUniformMatrix4x3fv;\n\n	// GL Version 3.0\n	extern PFNGLCOLORMASKIPROC							jrglColorMaski;\n	extern PFNGLGETBOOLEANI_VPROC						jrglGetBooleani_v;\n	extern PFNGLGETINTEGERI_VPROC						jrglGetIntegeri_v;\n	extern PFNGLENABLEIPROC								jrglEnablei;\n	extern PFNGLDISABLEIPROC							jrglDisablei;\n	extern PFNGLISENABLEDIPROC							jrglIsEnabledi;\n	extern PFNGLBEGINTRANSFORMFEEDBACKPROC				jrglBeginTransformFeedback;\n	extern PFNGLENDTRANSFORMFEEDBACKPROC				jrglEndTransformFeedback;\n	extern PFNGLBINDBUFFERRANGEPROC						jrglBindBufferRange;\n	extern PFNGLBINDBUFFERBASEPROC						jrglBindBufferBase;\n	extern PFNGLTRANSFORMFEEDBACKVARYINGSPROC			jrglTransformFeedbackVaryings;\n	extern PFNGLGETTRANSFORMFEEDBACKVARYINGPROC			jrglGetTransformFeedbackVarying;\n	extern PFNGLCLAMPCOLORPROC							jrglClampColor;\n	extern PFNGLBEGINCONDITIONALRENDERPROC				jrglBeginConditionalRender;\n	extern PFNGLENDCONDITIONALRENDERPROC				jrglEndConditionalRender;\n	extern PFNGLVERTEXATTRIBIPOINTERPROC				jrglVertexAttribIPointer;\n	extern PFNGLGETVERTEXATTRIBIIVPROC					jrglGetVertexAttribIiv;\n	extern PFNGLGETVERTEXATTRIBIUIVPROC					jrglGetVertexAttribIuiv;\n	extern PFNGLVERTEXATTRIBI1IPROC						jrglVertexAttribI1i;\n	extern PFNGLVERTEXATTRIBI2IPROC						jrglVertexAttribI2i;\n	extern PFNGLVERTEXATTRIBI3IPROC						jrglVertexAttribI3i;\n	extern PFNGLVERTEXATTRIBI4IPROC						jrglVertexAttribI4i;\n	extern PFNGLVERTEXATTRIBI1UIPROC					jrglVertexAttribI1ui;\n	extern PFNGLVERTEXATTRIBI2UIPROC					jrglVertexAttribI2ui;\n	extern PFNGLVERTEXATTRIBI3UIPROC					jrglVertexAttribI3ui;\n	extern PFNGLVERTEXATTRIBI4UIPROC					jrglVertexAttribI4ui;\n	extern PFNGLVERTEXATTRIBI1IVPROC					jrglVertexAttribI1iv;\n	extern PFNGLVERTEXATTRIBI2IVPROC					jrglVertexAttribI2iv;\n	extern PFNGLVERTEXATTRIBI3IVPROC					jrglVertexAttribI3iv;\n	extern PFNGLVERTEXATTRIBI4IVPROC					jrglVertexAttribI4iv;\n	extern PFNGLVERTEXATTRIBI1UIVPROC					jrglVertexAttribI1uiv;\n	extern PFNGLVERTEXATTRIBI2UIVPROC					jrglVertexAttribI2uiv;\n	extern PFNGLVERTEXATTRIBI3UIVPROC					jrglVertexAttribI3uiv;\n	extern PFNGLVERTEXATTRIBI4UIVPROC					jrglVertexAttribI4uiv;\n	extern PFNGLVERTEXATTRIBI4BVPROC					jrglVertexAttribI4bv;\n	extern PFNGLVERTEXATTRIBI4SVPROC					jrglVertexAttribI4sv;\n	extern PFNGLVERTEXATTRIBI4UBVPROC					jrglVertexAttribI4ubv;\n	extern PFNGLVERTEXATTRIBI4USVPROC					jrglVertexAttribI4usv;\n	extern PFNGLGETUNIFORMUIVPROC						jrglGetUniformuiv;\n	extern PFNGLBINDFRAGDATALOCATIONPROC				jrglBindFragDataLocation;\n	extern PFNGLGETFRAGDATALOCATIONPROC					jrglGetFragDataLocation;\n	extern PFNGLUNIFORM1UIPROC							jrglUniform1ui;\n	extern PFNGLUNIFORM2UIPROC							jrglUniform2ui;\n	extern PFNGLUNIFORM3UIPROC							jrglUniform3ui;\n	extern PFNGLUNIFORM4UIPROC							jrglUniform4ui;\n	extern PFNGLUNIFORM1UIVPROC							jrglUniform1uiv;\n	extern PFNGLUNIFORM2UIVPROC							jrglUniform2uiv;\n	extern PFNGLUNIFORM3UIVPROC							jrglUniform3uiv;\n	extern PFNGLUNIFORM4UIVPROC							jrglUniform4uiv;\n	extern PFNGLTEXPARAMETERIIVPROC						jrglTexParameterIiv;\n	extern PFNGLTEXPARAMETERIUIVPROC					jrglTexParameterIuiv;\n	extern PFNGLGETTEXPARAMETERIIVPROC					jrglGetTexParameterIiv;\n	extern PFNGLGETTEXPARAMETERIUIVPROC					jrglGetTexParameterIuiv;\n	extern PFNGLCLEARBUFFERIVPROC						jrglClearBufferiv;\n	extern PFNGLCLEARBUFFERUIVPROC						jrglClearBufferuiv;\n	extern PFNGLCLEARBUFFERFVPROC						jrglClearBufferfv;\n	extern PFNGLCLEARBUFFERFIPROC						jrglClearBufferfi;\n	extern PFNGLGETSTRINGIPROC							jrglGetStringi;\n	extern PFNGLISRENDERBUFFERPROC						jrglIsRenderbuffer;\n	extern PFNGLBINDRENDERBUFFERPROC					jrglBindRenderbuffer;\n	extern PFNGLDELETERENDERBUFFERSPROC					jrglDeleteRenderbuffers;\n	extern PFNGLGENRENDERBUFFERSPROC					jrglGenRenderbuffers;\n	extern PFNGLRENDERBUFFERSTORAGEPROC					jrglRenderbufferStorage;\n	extern PFNGLGETRENDERBUFFERPARAMETERIVPROC			jrglGetRenderbufferParameteriv;\n	extern PFNGLISFRAMEBUFFERPROC						jrglIsFramebuffer;\n	extern PFNGLBINDFRAMEBUFFERPROC						jrglBindFramebuffer;\n	extern PFNGLDELETEFRAMEBUFFERSPROC					jrglDeleteFramebuffers;\n	extern PFNGLGENFRAMEBUFFERSPROC						jrglGenFramebuffers;\n	extern PFNGLCHECKFRAMEBUFFERSTATUSPROC				jrglCheckFramebufferStatus;\n	extern PFNGLFRAMEBUFFERTEXTURE1DPROC				jrglFramebufferTexture1D;\n	extern PFNGLFRAMEBUFFERTEXTURE2DPROC				jrglFramebufferTexture2D;\n	extern PFNGLFRAMEBUFFERTEXTURE3DPROC				jrglFramebufferTexture3D;\n	extern PFNGLFRAMEBUFFERRENDERBUFFERPROC				jrglFramebufferRenderbuffer;\n	extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC	jrglGetFramebufferAttachmentParameteriv;\n	extern PFNGLGENERATEMIPMAPPROC						jrglGenerateMipmap;\n	extern PFNGLBLITFRAMEBUFFERPROC						jrglBlitFramebuffer;\n	extern PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC		jrglRenderbufferStorageMultisample;\n	extern PFNGLFRAMEBUFFERTEXTURELAYERPROC				jrglFramebufferTextureLayer;\n	extern PFNGLMAPBUFFERRANGEPROC						jrglMapBufferRange;\n	extern PFNGLFLUSHMAPPEDBUFFERRANGEPROC				jrglFlushMappedBufferRange;\n	extern PFNGLBINDVERTEXARRAYPROC						jrglBindVertexArray;\n	extern PFNGLDELETEVERTEXARRAYSPROC					jrglDeleteVertexArrays;\n	extern PFNGLGENVERTEXARRAYSPROC						jrglGenVertexArrays;\n	extern PFNGLISVERTEXARRAYPROC						jrglIsVertexArray;\n\n	// GL Version 3.1\n	extern PFNGLDRAWARRAYSINSTANCEDPROC		  jrglDrawArraysInstanced;\n	extern PFNGLDRAWELEMENTSINSTANCEDPROC	  jrglDrawElementsInstanced;\n	extern PFNGLTEXBUFFERPROC				  jrglTexBuffer;\n	extern PFNGLPRIMITIVERESTARTINDEXPROC	  jrglPrimitiveRestartIndex;\n	extern PFNGLCOPYBUFFERSUBDATAPROC		  jrglCopyBufferSubData;\n	extern PFNGLGETUNIFORMINDICESPROC		  jrglGetUniformIndices;\n	extern PFNGLGETACTIVEUNIFORMSIVPROC		  jrglGetActiveUniformsiv;\n	extern PFNGLGETACTIVEUNIFORMNAMEPROC	  jrglGetActiveUniformName;\n	extern PFNGLGETUNIFORMBLOCKINDEXPROC	  jrglGetUniformBlockIndex;\n	extern PFNGLGETACTIVEUNIFORMBLOCKIVPROC	  jrglGetActiveUniformBlockiv;\n	extern PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC jrglGetActiveUniformBlockName;\n	extern PFNGLUNIFORMBLOCKBINDINGPROC		  jrglUniformBlockBinding;\n\n	// GL Version 3.2\n	extern PFNGLDRAWELEMENTSBASEVERTEXPROC			jrglDrawElementsBaseVertex;\n	extern PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC		jrglDrawRangeElementsBaseVertex;\n	extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC jrglDrawElementsInstancedBaseVertex;\n	extern PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC		jrglMultiDrawElementsBaseVertex;\n	extern PFNGLPROVOKINGVERTEXPROC					jrglProvokingVertex;\n	extern PFNGLFENCESYNCPROC						jrglFenceSync;\n	extern PFNGLISSYNCPROC							jrglIsSync;\n	extern PFNGLDELETESYNCPROC						jrglDeleteSync;\n	extern PFNGLCLIENTWAITSYNCPROC					jrglClientWaitSync;\n	extern PFNGLWAITSYNCPROC						jrglWaitSync;\n	extern PFNGLGETINTEGER64VPROC					jrglGetInteger64v;\n	extern PFNGLGETSYNCIVPROC						jrglGetSynciv;\n	extern PFNGLGETINTEGER64I_VPROC					jrglGetInteger64i_v;\n	extern PFNGLGETBUFFERPARAMETERI64VPROC			jrglGetBufferParameteri64v;\n	extern PFNGLFRAMEBUFFERTEXTUREPROC				jrglFramebufferTexture;\n	extern PFNGLTEXIMAGE2DMULTISAMPLEPROC			jrglTexImage2DMultisample;\n	extern PFNGLTEXIMAGE3DMULTISAMPLEPROC			jrglTexImage3DMultisample;\n	extern PFNGLGETMULTISAMPLEFVPROC				jrglGetMultisamplefv;\n	extern PFNGLSAMPLEMASKIPROC						jrglSampleMaski;\n\n	// GL Version 3.3\n	extern PFNGLBINDFRAGDATALOCATIONINDEXEDPROC	jrglBindFragDataLocationIndexed;\n	extern PFNGLGETFRAGDATAINDEXPROC			jrglGetFragDataIndex;\n	extern PFNGLGENSAMPLERSPROC					jrglGenSamplers;\n	extern PFNGLDELETESAMPLERSPROC				jrglDeleteSamplers;\n	extern PFNGLISSAMPLERPROC					jrglIsSampler;\n	extern PFNGLBINDSAMPLERPROC					jrglBindSampler;\n	extern PFNGLSAMPLERPARAMETERIPROC			jrglSamplerParameteri;\n	extern PFNGLSAMPLERPARAMETERIVPROC			jrglSamplerParameteriv;\n	extern PFNGLSAMPLERPARAMETERFPROC			jrglSamplerParameterf;\n	extern PFNGLSAMPLERPARAMETERFVPROC			jrglSamplerParameterfv;\n	extern PFNGLSAMPLERPARAMETERIIVPROC			jrglSamplerParameterIiv;\n	extern PFNGLSAMPLERPARAMETERIUIVPROC		jrglSamplerParameterIuiv;\n	extern PFNGLGETSAMPLERPARAMETERIVPROC		jrglGetSamplerParameteriv;\n	extern PFNGLGETSAMPLERPARAMETERIIVPROC		jrglGetSamplerParameterIiv;\n	extern PFNGLGETSAMPLERPARAMETERFVPROC		jrglGetSamplerParameterfv;\n	extern PFNGLGETSAMPLERPARAMETERIUIVPROC		jrglGetSamplerParameterIuiv;\n	extern PFNGLQUERYCOUNTERPROC				jrglQueryCounter;\n	extern PFNGLGETQUERYOBJECTI64VPROC			jrglGetQueryObjecti64v;\n	extern PFNGLGETQUERYOBJECTUI64VPROC			jrglGetQueryObjectui64v;\n	extern PFNGLVERTEXATTRIBDIVISORPROC			jrglVertexAttribDivisor;\n	extern PFNGLVERTEXATTRIBP1UIPROC			jrglVertexAttribP1ui;\n	extern PFNGLVERTEXATTRIBP1UIVPROC			jrglVertexAttribP1uiv;\n	extern PFNGLVERTEXATTRIBP2UIPROC			jrglVertexAttribP2ui;\n	extern PFNGLVERTEXATTRIBP2UIVPROC			jrglVertexAttribP2uiv;\n	extern PFNGLVERTEXATTRIBP3UIPROC			jrglVertexAttribP3ui;\n	extern PFNGLVERTEXATTRIBP3UIVPROC			jrglVertexAttribP3uiv;\n	extern PFNGLVERTEXATTRIBP4UIPROC			jrglVertexAttribP4ui;\n	extern PFNGLVERTEXATTRIBP4UIVPROC			jrglVertexAttribP4uiv;\n\n	// GL Version 4.0\n	extern PFNGLMINSAMPLESHADINGPROC	   		   jrglMinSampleShading;\n	extern PFNGLBLENDEQUATIONIPROC		   		   jrglBlendEquationi;\n	extern PFNGLBLENDEQUATIONSEPARATEIPROC 		   jrglBlendEquationSeparatei;\n	extern PFNGLBLENDFUNCIPROC					   jrglBlendFunci;\n	extern PFNGLBLENDFUNCSEPARATEIPROC			   jrglBlendFuncSeparatei;\n	extern PFNGLDRAWARRAYSINDIRECTPROC			   jrglDrawArraysIndirect;\n	extern PFNGLDRAWELEMENTSINDIRECTPROC		   jrglDrawElementsIndirect;\n	extern PFNGLUNIFORM1DPROC					   jrglUniform1d;\n	extern PFNGLUNIFORM2DPROC					   jrglUniform2d;\n	extern PFNGLUNIFORM3DPROC					   jrglUniform3d;\n	extern PFNGLUNIFORM4DPROC					   jrglUniform4d;\n	extern PFNGLUNIFORM1DVPROC					   jrglUniform1dv;\n	extern PFNGLUNIFORM2DVPROC					   jrglUniform2dv;\n	extern PFNGLUNIFORM3DVPROC					   jrglUniform3dv;\n	extern PFNGLUNIFORM4DVPROC					   jrglUniform4dv;\n	extern PFNGLUNIFORMMATRIX2DVPROC			   jrglUniformMatrix2dv;\n	extern PFNGLUNIFORMMATRIX3DVPROC			   jrglUniformMatrix3dv;\n	extern PFNGLUNIFORMMATRIX4DVPROC			   jrglUniformMatrix4dv;\n	extern PFNGLUNIFORMMATRIX2X3DVPROC			   jrglUniformMatrix2x3dv;\n	extern PFNGLUNIFORMMATRIX2X4DVPROC			   jrglUniformMatrix2x4dv;\n	extern PFNGLUNIFORMMATRIX3X2DVPROC			   jrglUniformMatrix3x2dv;\n	extern PFNGLUNIFORMMATRIX3X4DVPROC			   jrglUniformMatrix3x4dv;\n	extern PFNGLUNIFORMMATRIX4X2DVPROC			   jrglUniformMatrix4x2dv;\n	extern PFNGLUNIFORMMATRIX4X3DVPROC			   jrglUniformMatrix4x3dv;\n	extern PFNGLGETUNIFORMDVPROC				   jrglGetUniformdv;\n	extern PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC   jrglGetSubroutineUniformLocation;\n	extern PFNGLGETSUBROUTINEINDEXPROC			   jrglGetSubroutineIndex;\n	extern PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC   jrglGetActiveSubroutineUniformiv;\n	extern PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC jrglGetActiveSubroutineUniformName;\n	extern PFNGLGETACTIVESUBROUTINENAMEPROC		   jrglGetActiveSubroutineName;\n	extern PFNGLUNIFORMSUBROUTINESUIVPROC		   jrglUniformSubroutinesuiv;\n	extern PFNGLGETUNIFORMSUBROUTINEUIVPROC		   jrglGetUniformSubroutineuiv;\n	extern PFNGLGETPROGRAMSTAGEIVPROC			   jrglGetProgramStageiv;\n	extern PFNGLPATCHPARAMETERIPROC				   jrglPatchParameteri;\n	extern PFNGLPATCHPARAMETERFVPROC			   jrglPatchParameterfv;\n	extern PFNGLBINDTRANSFORMFEEDBACKPROC		   jrglBindTransformFeedback;\n	extern PFNGLDELETETRANSFORMFEEDBACKSPROC	   jrglDeleteTransformFeedbacks;\n	extern PFNGLGENTRANSFORMFEEDBACKSPROC		   jrglGenTransformFeedbacks;\n	extern PFNGLISTRANSFORMFEEDBACKPROC			   jrglIsTransformFeedback;\n	extern PFNGLPAUSETRANSFORMFEEDBACKPROC		   jrglPauseTransformFeedback;\n	extern PFNGLRESUMETRANSFORMFEEDBACKPROC		   jrglResumeTransformFeedback;\n	extern PFNGLDRAWTRANSFORMFEEDBACKPROC		   jrglDrawTransformFeedback;\n	extern PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC	   jrglDrawTransformFeedbackStream;\n	extern PFNGLBEGINQUERYINDEXEDPROC			   jrglBeginQueryIndexed;\n	extern PFNGLENDQUERYINDEXEDPROC				   jrglEndQueryIndexed;\n	extern PFNGLGETQUERYINDEXEDIVPROC			   jrglGetQueryIndexediv;\n\n	// GL Version 4.1\n	extern PFNGLRELEASESHADERCOMPILERPROC	  jrglReleaseShaderCompiler;\n	extern PFNGLSHADERBINARYPROC			  jrglShaderBinary;\n	extern PFNGLGETSHADERPRECISIONFORMATPROC  jrglGetShaderPrecisionFormat;\n	extern PFNGLDEPTHRANGEFPROC				  jrglDepthRangef;\n	extern PFNGLCLEARDEPTHFPROC				  jrglClearDepthf;\n	extern PFNGLGETPROGRAMBINARYPROC		  jrglGetProgramBinary;\n	extern PFNGLPROGRAMBINARYPROC			  jrglProgramBinary;\n	extern PFNGLPROGRAMPARAMETERIPROC		  jrglProgramParameteri;\n	extern PFNGLUSEPROGRAMSTAGESPROC		  jrglUseProgramStages;\n	extern PFNGLACTIVESHADERPROGRAMPROC		  jrglActiveShaderProgram;\n	extern PFNGLCREATESHADERPROGRAMVPROC	  jrglCreateShaderProgramv;\n	extern PFNGLBINDPROGRAMPIPELINEPROC		  jrglBindProgramPipeline;\n	extern PFNGLDELETEPROGRAMPIPELINESPROC	  jrglDeleteProgramPipelines;\n	extern PFNGLGENPROGRAMPIPELINESPROC		  jrglGenProgramPipelines;\n	extern PFNGLISPROGRAMPIPELINEPROC		  jrglIsProgramPipeline;\n	extern PFNGLGETPROGRAMPIPELINEIVPROC	  jrglGetProgramPipelineiv;\n	extern PFNGLPROGRAMUNIFORM1IPROC		  jrglProgramUniform1i;\n	extern PFNGLPROGRAMUNIFORM1IVPROC		  jrglProgramUniform1iv;\n	extern PFNGLPROGRAMUNIFORM1FPROC		  jrglProgramUniform1f;\n	extern PFNGLPROGRAMUNIFORM1FVPROC		  jrglProgramUniform1fv;\n	extern PFNGLPROGRAMUNIFORM1DPROC		  jrglProgramUniform1d;\n	extern PFNGLPROGRAMUNIFORM1DVPROC		  jrglProgramUniform1dv;\n	extern PFNGLPROGRAMUNIFORM1UIPROC		  jrglProgramUniform1ui;\n	extern PFNGLPROGRAMUNIFORM1UIVPROC		  jrglProgramUniform1uiv;\n	extern PFNGLPROGRAMUNIFORM2IPROC		  jrglProgramUniform2i;\n	extern PFNGLPROGRAMUNIFORM2IVPROC		  jrglProgramUniform2iv;\n	extern PFNGLPROGRAMUNIFORM2FPROC		  jrglProgramUniform2f;\n	extern PFNGLPROGRAMUNIFORM2FVPROC		  jrglProgramUniform2fv;\n	extern PFNGLPROGRAMUNIFORM2DPROC		  jrglProgramUniform2d;\n	extern PFNGLPROGRAMUNIFORM2DVPROC		  jrglProgramUniform2dv;\n	extern PFNGLPROGRAMUNIFORM2UIPROC		  jrglProgramUniform2ui;\n	extern PFNGLPROGRAMUNIFORM2UIVPROC		  jrglProgramUniform2uiv;\n	extern PFNGLPROGRAMUNIFORM3IPROC		  jrglProgramUniform3i;\n	extern PFNGLPROGRAMUNIFORM3IVPROC		  jrglProgramUniform3iv;\n	extern PFNGLPROGRAMUNIFORM3FPROC		  jrglProgramUniform3f;\n	extern PFNGLPROGRAMUNIFORM3FVPROC		  jrglProgramUniform3fv;\n	extern PFNGLPROGRAMUNIFORM3DPROC		  jrglProgramUniform3d;\n	extern PFNGLPROGRAMUNIFORM3DVPROC		  jrglProgramUniform3dv;\n	extern PFNGLPROGRAMUNIFORM3UIPROC		  jrglProgramUniform3ui;\n	extern PFNGLPROGRAMUNIFORM3UIVPROC		  jrglProgramUniform3uiv;\n	extern PFNGLPROGRAMUNIFORM4IPROC		  jrglProgramUniform4i;\n	extern PFNGLPROGRAMUNIFORM4IVPROC		  jrglProgramUniform4iv;\n	extern PFNGLPROGRAMUNIFORM4FPROC		  jrglProgramUniform4f;\n	extern PFNGLPROGRAMUNIFORM4FVPROC		  jrglProgramUniform4fv;\n	extern PFNGLPROGRAMUNIFORM4DPROC		  jrglProgramUniform4d;\n	extern PFNGLPROGRAMUNIFORM4DVPROC		  jrglProgramUniform4dv;\n	extern PFNGLPROGRAMUNIFORM4UIPROC		  jrglProgramUniform4ui;\n	extern PFNGLPROGRAMUNIFORM4UIVPROC		  jrglProgramUniform4uiv;\n	extern PFNGLPROGRAMUNIFORMMATRIX2FVPROC	  jrglProgramUniformMatrix2fv;\n	extern PFNGLPROGRAMUNIFORMMATRIX3FVPROC	  jrglProgramUniformMatrix3fv;\n	extern PFNGLPROGRAMUNIFORMMATRIX4FVPROC	  jrglProgramUniformMatrix4fv;\n	extern PFNGLPROGRAMUNIFORMMATRIX2DVPROC	  jrglProgramUniformMatrix2dv;\n	extern PFNGLPROGRAMUNIFORMMATRIX3DVPROC	  jrglProgramUniformMatrix3dv;\n	extern PFNGLPROGRAMUNIFORMMATRIX4DVPROC	  jrglProgramUniformMatrix4dv;\n	extern PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC jrglProgramUniformMatrix2x3fv;\n	extern PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC jrglProgramUniformMatrix3x2fv;\n	extern PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC jrglProgramUniformMatrix2x4fv;\n	extern PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC jrglProgramUniformMatrix4x2fv;\n	extern PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC jrglProgramUniformMatrix3x4fv;\n	extern PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC jrglProgramUniformMatrix4x3fv;\n	extern PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC jrglProgramUniformMatrix2x3dv;\n	extern PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC jrglProgramUniformMatrix3x2dv;\n	extern PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC jrglProgramUniformMatrix2x4dv;\n	extern PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC jrglProgramUniformMatrix4x2dv;\n	extern PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC jrglProgramUniformMatrix3x4dv;\n	extern PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC jrglProgramUniformMatrix4x3dv;\n	extern PFNGLVALIDATEPROGRAMPIPELINEPROC	  jrglValidateProgramPipeline;\n	extern PFNGLGETPROGRAMPIPELINEINFOLOGPROC jrglGetProgramPipelineInfoLog;\n	extern PFNGLVERTEXATTRIBL1DPROC			  jrglVertexAttribL1d;\n	extern PFNGLVERTEXATTRIBL2DPROC			  jrglVertexAttribL2d;\n	extern PFNGLVERTEXATTRIBL3DPROC			  jrglVertexAttribL3d;\n	extern PFNGLVERTEXATTRIBL4DPROC			  jrglVertexAttribL4d;\n	extern PFNGLVERTEXATTRIBL1DVPROC		  jrglVertexAttribL1dv;\n	extern PFNGLVERTEXATTRIBL2DVPROC		  jrglVertexAttribL2dv;\n	extern PFNGLVERTEXATTRIBL3DVPROC		  jrglVertexAttribL3dv;\n	extern PFNGLVERTEXATTRIBL4DVPROC		  jrglVertexAttribL4dv;\n	extern PFNGLVERTEXATTRIBLPOINTERPROC	  jrglVertexAttribLPointer;\n	extern PFNGLGETVERTEXATTRIBLDVPROC		  jrglGetVertexAttribLdv;\n	extern PFNGLVIEWPORTARRAYVPROC			  jrglViewportArrayv;\n	extern PFNGLVIEWPORTINDEXEDFPROC		  jrglViewportIndexedf;\n	extern PFNGLVIEWPORTINDEXEDFVPROC		  jrglViewportIndexedfv;\n	extern PFNGLSCISSORARRAYVPROC			  jrglScissorArrayv;\n	extern PFNGLSCISSORINDEXEDPROC			  jrglScissorIndexed;\n	extern PFNGLSCISSORINDEXEDVPROC			  jrglScissorIndexedv;\n	extern PFNGLDEPTHRANGEARRAYVPROC		  jrglDepthRangeArrayv;\n	extern PFNGLDEPTHRANGEINDEXEDPROC		  jrglDepthRangeIndexed;\n	extern PFNGLGETFLOATI_VPROC				  jrglGetFloati_v;\n	extern PFNGLGETDOUBLEI_VPROC			  jrglGetDoublei_v;\n\n	// GL Version 4.2\n	extern PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC				jrglDrawArraysInstancedBaseInstance;\n	extern PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC			jrglDrawElementsInstancedBaseInstance;\n	extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC	jrglDrawElementsInstancedBaseVertexBaseInstance;\n	extern PFNGLGETINTERNALFORMATIVPROC							jrglGetInternalformativ;\n	extern PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC				jrglGetActiveAtomicCounterBufferiv;\n	extern PFNGLBINDIMAGETEXTUREPROC							jrglBindImageTexture;\n	extern PFNGLMEMORYBARRIERPROC								jrglMemoryBarrier;\n	extern PFNGLTEXSTORAGE1DPROC								jrglTexStorage1D;\n	extern PFNGLTEXSTORAGE2DPROC								jrglTexStorage2D;\n	extern PFNGLTEXSTORAGE3DPROC								jrglTexStorage3D;\n	extern PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC				jrglDrawTransformFeedbackInstanced;\n	extern PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC		jrglDrawTransformFeedbackStreamInstanced;\n\n	// GL Version 4.3\n	extern PFNGLCLEARBUFFERDATAPROC					jrglClearBufferData;\n	extern PFNGLCLEARBUFFERSUBDATAPROC				jrglClearBufferSubData;\n	extern PFNGLDISPATCHCOMPUTEPROC					jrglDispatchCompute;\n	extern PFNGLDISPATCHCOMPUTEINDIRECTPROC			jrglDispatchComputeIndirect;\n	extern PFNGLCOPYIMAGESUBDATAPROC				jrglCopyImageSubData;\n	extern PFNGLFRAMEBUFFERPARAMETERIPROC			jrglFramebufferParameteri;\n	extern PFNGLGETFRAMEBUFFERPARAMETERIVPROC		jrglGetFramebufferParameteriv;\n	extern PFNGLGETINTERNALFORMATI64VPROC			jrglGetInternalformati64v;\n	extern PFNGLINVALIDATETEXSUBIMAGEPROC			jrglInvalidateTexSubImage;\n	extern PFNGLINVALIDATETEXIMAGEPROC				jrglInvalidateTexImage;\n	extern PFNGLINVALIDATEBUFFERSUBDATAPROC			jrglInvalidateBufferSubData;\n	extern PFNGLINVALIDATEBUFFERDATAPROC			jrglInvalidateBufferData;\n	extern PFNGLINVALIDATEFRAMEBUFFERPROC			jrglInvalidateFramebuffer;\n	extern PFNGLINVALIDATESUBFRAMEBUFFERPROC		jrglInvalidateSubFramebuffer;\n	extern PFNGLMULTIDRAWARRAYSINDIRECTPROC			jrglMultiDrawArraysIndirect;\n	extern PFNGLMULTIDRAWELEMENTSINDIRECTPROC		jrglMultiDrawElementsIndirect;\n	extern PFNGLGETPROGRAMINTERFACEIVPROC			jrglGetProgramInterfaceiv;\n	extern PFNGLGETPROGRAMRESOURCEINDEXPROC			jrglGetProgramResourceIndex;\n	extern PFNGLGETPROGRAMRESOURCENAMEPROC			jrglGetProgramResourceName;\n	extern PFNGLGETPROGRAMRESOURCEIVPROC			jrglGetProgramResourceiv;\n	extern PFNGLGETPROGRAMRESOURCELOCATIONPROC		jrglGetProgramResourceLocation;\n	extern PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC	jrglGetProgramResourceLocationIndex;\n	extern PFNGLSHADERSTORAGEBLOCKBINDINGPROC		jrglShaderStorageBlockBinding;\n	extern PFNGLTEXBUFFERRANGEPROC					jrglTexBufferRange;\n	extern PFNGLTEXSTORAGE2DMULTISAMPLEPROC			jrglTexStorage2DMultisample;\n	extern PFNGLTEXSTORAGE3DMULTISAMPLEPROC			jrglTexStorage3DMultisample;\n	extern PFNGLTEXTUREVIEWPROC						jrglTextureView;\n	extern PFNGLBINDVERTEXBUFFERPROC				jrglBindVertexBuffer;\n	extern PFNGLVERTEXATTRIBFORMATPROC				jrglVertexAttribFormat;\n	extern PFNGLVERTEXATTRIBIFORMATPROC				jrglVertexAttribIFormat;\n	extern PFNGLVERTEXATTRIBLFORMATPROC				jrglVertexAttribLFormat;\n	extern PFNGLVERTEXATTRIBBINDINGPROC				jrglVertexAttribBinding;\n	extern PFNGLVERTEXBINDINGDIVISORPROC			jrglVertexBindingDivisor;\n	extern PFNGLDEBUGMESSAGECONTROLPROC				jrglDebugMessageControl;\n	extern PFNGLDEBUGMESSAGEINSERTPROC				jrglDebugMessageInsert;\n	extern PFNGLDEBUGMESSAGECALLBACKPROC			jrglDebugMessageCallback;\n	extern PFNGLGETDEBUGMESSAGELOGPROC				jrglGetDebugMessageLog;\n	extern PFNGLPUSHDEBUGGROUPPROC					jrglPushDebugGroup;\n	extern PFNGLPOPDEBUGGROUPPROC					jrglPopDebugGroup;\n	extern PFNGLOBJECTLABELPROC						jrglObjectLabel;\n	extern PFNGLGETOBJECTLABELPROC					jrglGetObjectLabel;\n	extern PFNGLOBJECTPTRLABELPROC					jrglObjectPtrLabel;\n	extern PFNGLGETOBJECTPTRLABELPROC				jrglGetObjectPtrLabel;\n\n	// GL Version 4.4\n	extern PFNGLBUFFERSTORAGEPROC	  jrglBufferStorage;\n	extern PFNGLCLEARTEXIMAGEPROC	  jrglClearTexImage;\n	extern PFNGLCLEARTEXSUBIMAGEPROC  jrglClearTexSubImage;\n	extern PFNGLBINDBUFFERSBASEPROC	  jrglBindBuffersBase;\n	extern PFNGLBINDBUFFERSRANGEPROC  jrglBindBuffersRange;\n	extern PFNGLBINDTEXTURESPROC	  jrglBindTextures;\n	extern PFNGLBINDSAMPLERSPROC	  jrglBindSamplers;\n	extern PFNGLBINDIMAGETEXTURESPROC jrglBindImageTextures;\n	extern PFNGLBINDVERTEXBUFFERSPROC jrglBindVertexBuffers;\n\n	// GL Version 4.5\n	extern PFNGLCLIPCONTROLPROC					      		 jrglClipControl;\n	extern PFNGLCREATETRANSFORMFEEDBACKSPROC	      		 jrglCreateTransformFeedbacks;\n	extern PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC	      		 jrglTransformFeedbackBufferBase;\n	extern PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC      		 jrglTransformFeedbackBufferRange;\n	extern PFNGLGETTRANSFORMFEEDBACKIVPROC		      		 jrglGetTransformFeedbackiv;\n	extern PFNGLGETTRANSFORMFEEDBACKI_VPROC		      		 jrglGetTransformFeedbacki_v;\n	extern PFNGLGETTRANSFORMFEEDBACKI64_VPROC	      		 jrglGetTransformFeedbacki64_v;\n	extern PFNGLCREATEBUFFERSPROC				      		 jrglCreateBuffers;\n	extern PFNGLNAMEDBUFFERSTORAGEPROC			      		 jrglNamedBufferStorage;\n	extern PFNGLNAMEDBUFFERDATAPROC				      		 jrglNamedBufferData;\n	extern PFNGLNAMEDBUFFERSUBDATAPROC			      		 jrglNamedBufferSubData;\n	extern PFNGLCOPYNAMEDBUFFERSUBDATAPROC		      		 jrglCopyNamedBufferSubData;\n	extern PFNGLCLEARNAMEDBUFFERDATAPROC		      		 jrglClearNamedBufferData;\n	extern PFNGLCLEARNAMEDBUFFERSUBDATAPROC		      		 jrglClearNamedBufferSubData;\n	extern PFNGLMAPNAMEDBUFFERPROC				      		 jrglMapNamedBuffer;\n	extern PFNGLMAPNAMEDBUFFERRANGEPROC			      		 jrglMapNamedBufferRange;\n	extern PFNGLUNMAPNAMEDBUFFERPROC			      		 jrglUnmapNamedBuffer;\n	extern PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC	      		 jrglFlushMappedNamedBufferRange;\n	extern PFNGLGETNAMEDBUFFERPARAMETERIVPROC	      		 jrglGetNamedBufferParameteriv;\n	extern PFNGLGETNAMEDBUFFERPARAMETERI64VPROC	      		 jrglGetNamedBufferParameteri64v;\n	extern PFNGLGETNAMEDBUFFERPOINTERVPROC		      		 jrglGetNamedBufferPointerv;\n	extern PFNGLGETNAMEDBUFFERSUBDATAPROC		      		 jrglGetNamedBufferSubData;\n	extern PFNGLCREATEFRAMEBUFFERSPROC			      		 jrglCreateFramebuffers;\n	extern PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC      		 jrglNamedFramebufferRenderbuffer;\n	extern PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC	      		 jrglNamedFramebufferParameteri;\n	extern PFNGLNAMEDFRAMEBUFFERTEXTUREPROC		      		 jrglNamedFramebufferTexture;\n	extern PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC      		 jrglNamedFramebufferTextureLayer;\n	extern PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC	      		 jrglNamedFramebufferDrawBuffer;\n	extern PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC	      		 jrglNamedFramebufferDrawBuffers;\n	extern PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC	      		 jrglNamedFramebufferReadBuffer;\n	extern PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC	  		 jrglInvalidateNamedFramebufferData;\n	extern PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC 		 jrglInvalidateNamedFramebufferSubData;\n	extern PFNGLCLEARNAMEDFRAMEBUFFERIVPROC					 jrglClearNamedFramebufferiv;\n	extern PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC				 jrglClearNamedFramebufferuiv;\n	extern PFNGLCLEARNAMEDFRAMEBUFFERFVPROC					 jrglClearNamedFramebufferfv;\n	extern PFNGLCLEARNAMEDFRAMEBUFFERFIPROC					 jrglClearNamedFramebufferfi;\n	extern PFNGLBLITNAMEDFRAMEBUFFERPROC					 jrglBlitNamedFramebuffer;\n	extern PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC				 jrglCheckNamedFramebufferStatus;\n	extern PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC			 jrglGetNamedFramebufferParameteriv;\n	extern PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC jrglGetNamedFramebufferAttachmentParameteriv;\n	extern PFNGLCREATERENDERBUFFERSPROC						 jrglCreateRenderbuffers;\n	extern PFNGLNAMEDRENDERBUFFERSTORAGEPROC				 jrglNamedRenderbufferStorage;\n	extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC		 jrglNamedRenderbufferStorageMultisample;\n	extern PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC			 jrglGetNamedRenderbufferParameteriv;\n	extern PFNGLCREATETEXTURESPROC							 jrglCreateTextures;\n	extern PFNGLTEXTUREBUFFERPROC							 jrglTextureBuffer;\n	extern PFNGLTEXTUREBUFFERRANGEPROC						 jrglTextureBufferRange;\n	extern PFNGLTEXTURESTORAGE1DPROC						 jrglTextureStorage1D;\n	extern PFNGLTEXTURESTORAGE2DPROC						 jrglTextureStorage2D;\n	extern PFNGLTEXTURESTORAGE3DPROC						 jrglTextureStorage3D;\n	extern PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC				 jrglTextureStorage2DMultisample;\n	extern PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC				 jrglTextureStorage3DMultisample;\n	extern PFNGLTEXTURESUBIMAGE1DPROC						 jrglTextureSubImage1D;\n	extern PFNGLTEXTURESUBIMAGE2DPROC						 jrglTextureSubImage2D;\n	extern PFNGLTEXTURESUBIMAGE3DPROC						 jrglTextureSubImage3D;\n	extern PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC				 jrglCompressedTextureSubImage1D;\n	extern PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC				 jrglCompressedTextureSubImage2D;\n	extern PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC				 jrglCompressedTextureSubImage3D;\n	extern PFNGLCOPYTEXTURESUBIMAGE1DPROC					 jrglCopyTextureSubImage1D;\n	extern PFNGLCOPYTEXTURESUBIMAGE2DPROC					 jrglCopyTextureSubImage2D;\n	extern PFNGLCOPYTEXTURESUBIMAGE3DPROC					 jrglCopyTextureSubImage3D;\n	extern PFNGLTEXTUREPARAMETERFPROC						 jrglTextureParameterf;\n	extern PFNGLTEXTUREPARAMETERFVPROC						 jrglTextureParameterfv;\n	extern PFNGLTEXTUREPARAMETERIPROC						 jrglTextureParameteri;\n	extern PFNGLTEXTUREPARAMETERIIVPROC						 jrglTextureParameterIiv;\n	extern PFNGLTEXTUREPARAMETERIUIVPROC					 jrglTextureParameterIuiv;\n	extern PFNGLTEXTUREPARAMETERIVPROC						 jrglTextureParameteriv;\n	extern PFNGLGENERATETEXTUREMIPMAPPROC					 jrglGenerateTextureMipmap;\n	extern PFNGLBINDTEXTUREUNITPROC							 jrglBindTextureUnit;\n	extern PFNGLGETTEXTUREIMAGEPROC							 jrglGetTextureImage;\n	extern PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC				 jrglGetCompressedTextureImage;\n	extern PFNGLGETTEXTURELEVELPARAMETERFVPROC				 jrglGetTextureLevelParameterfv;\n	extern PFNGLGETTEXTURELEVELPARAMETERIVPROC				 jrglGetTextureLevelParameteriv;\n	extern PFNGLGETTEXTUREPARAMETERFVPROC					 jrglGetTextureParameterfv;\n	extern PFNGLGETTEXTUREPARAMETERIIVPROC					 jrglGetTextureParameterIiv;\n	extern PFNGLGETTEXTUREPARAMETERIUIVPROC					 jrglGetTextureParameterIuiv;\n	extern PFNGLGETTEXTUREPARAMETERIVPROC					 jrglGetTextureParameteriv;\n	extern PFNGLCREATEVERTEXARRAYSPROC						 jrglCreateVertexArrays;\n	extern PFNGLDISABLEVERTEXARRAYATTRIBPROC				 jrglDisableVertexArrayAttrib;\n	extern PFNGLENABLEVERTEXARRAYATTRIBPROC					 jrglEnableVertexArrayAttrib;\n	extern PFNGLVERTEXARRAYELEMENTBUFFERPROC				 jrglVertexArrayElementBuffer;\n	extern PFNGLVERTEXARRAYVERTEXBUFFERPROC					 jrglVertexArrayVertexBuffer;\n	extern PFNGLVERTEXARRAYVERTEXBUFFERSPROC				 jrglVertexArrayVertexBuffers;\n	extern PFNGLVERTEXARRAYATTRIBBINDINGPROC				 jrglVertexArrayAttribBinding;\n	extern PFNGLVERTEXARRAYATTRIBFORMATPROC					 jrglVertexArrayAttribFormat;\n	extern PFNGLVERTEXARRAYATTRIBIFORMATPROC				 jrglVertexArrayAttribIFormat;\n	extern PFNGLVERTEXARRAYATTRIBLFORMATPROC				 jrglVertexArrayAttribLFormat;\n	extern PFNGLVERTEXARRAYBINDINGDIVISORPROC				 jrglVertexArrayBindingDivisor;\n	extern PFNGLGETVERTEXARRAYIVPROC						 jrglGetVertexArrayiv;\n	extern PFNGLGETVERTEXARRAYINDEXEDIVPROC					 jrglGetVertexArrayIndexediv;\n	extern PFNGLGETVERTEXARRAYINDEXED64IVPROC				 jrglGetVertexArrayIndexed64iv;\n	extern PFNGLCREATESAMPLERSPROC							 jrglCreateSamplers;\n	extern PFNGLCREATEPROGRAMPIPELINESPROC					 jrglCreateProgramPipelines;\n	extern PFNGLCREATEQUERIESPROC							 jrglCreateQueries;\n	extern PFNGLGETQUERYBUFFEROBJECTI64VPROC				 jrglGetQueryBufferObjecti64v;\n	extern PFNGLGETQUERYBUFFEROBJECTIVPROC					 jrglGetQueryBufferObjectiv;\n	extern PFNGLGETQUERYBUFFEROBJECTUI64VPROC				 jrglGetQueryBufferObjectui64v;\n	extern PFNGLGETQUERYBUFFEROBJECTUIVPROC					 jrglGetQueryBufferObjectuiv;\n	extern PFNGLMEMORYBARRIERBYREGIONPROC					 jrglMemoryBarrierByRegion;\n	extern PFNGLGETTEXTURESUBIMAGEPROC						 jrglGetTextureSubImage;\n	extern PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC			 jrglGetCompressedTextureSubImage;\n	extern PFNGLGETGRAPHICSRESETSTATUSPROC					 jrglGetGraphicsResetStatus;\n	extern PFNGLGETNCOMPRESSEDTEXIMAGEPROC					 jrglGetnCompressedTexImage;\n	extern PFNGLGETNTEXIMAGEPROC							 jrglGetnTexImage;\n	extern PFNGLGETNUNIFORMDVPROC							 jrglGetnUniformdv;\n	extern PFNGLGETNUNIFORMFVPROC							 jrglGetnUniformfv;\n	extern PFNGLGETNUNIFORMIVPROC							 jrglGetnUniformiv;\n	extern PFNGLGETNUNIFORMUIVPROC							 jrglGetnUniformuiv;\n	extern PFNGLREADNPIXELSPROC								 jrglReadnPixels;\n	extern PFNGLTEXTUREBARRIERPROC							 jrglTextureBarrier;\n\n	// GL ARB Bindless Textures\n	extern PFNGLGETTEXTUREHANDLEARBPROC				jrglGetTextureHandleARB;\n	extern PFNGLGETTEXTURESAMPLERHANDLEARBPROC		jrglGetTextureSamplerHandleARB;\n	extern PFNGLMAKETEXTUREHANDLERESIDENTARBPROC	jrglMakeTextureHandleResidentARB;\n	extern PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC	jrglMakeTextureHandleNonResidentARB;\n	extern PFNGLGETIMAGEHANDLEARBPROC				jrglGetImageHandleARB;\n	extern PFNGLMAKEIMAGEHANDLERESIDENTARBPROC		jrglMakeImageHandleResidentARB;\n	extern PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC	jrglMakeImageHandleNonResidentARB;\n	extern PFNGLUNIFORMHANDLEUI64ARBPROC			jrglUniformHandleui64ARB;\n	extern PFNGLUNIFORMHANDLEUI64VARBPROC			jrglUniformHandleui64vARB;\n	extern PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC		jrglProgramUniformHandleui64ARB;\n	extern PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC	jrglProgramUniformHandleui64vARB;\n	extern PFNGLISTEXTUREHANDLERESIDENTARBPROC		jrglIsTextureHandleResidentARB;\n	extern PFNGLISIMAGEHANDLERESIDENTARBPROC		jrglIsImageHandleResidentARB;\n	extern PFNGLVERTEXATTRIBL1UI64ARBPROC			jrglVertexAttribL1ui64ARB;\n	extern PFNGLVERTEXATTRIBL1UI64VARBPROC			jrglVertexAttribL1ui64vARB;\n	extern PFNGLGETVERTEXATTRIBLUI64VARBPROC		jrglGetVertexAttribLui64vARB;\n\n	// GL ARB Cl Event\n	extern PFNGLCREATESYNCFROMCLEVENTARBPROC jrglCreateSyncFromCLeventARB;\n\n	// GL ARB Compute Variable Group Size\n	extern PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC	jrglDispatchComputeGroupSizeARB;\n\n	// GL ARB Debug Output\n	extern PFNGLDEBUGMESSAGECONTROLARBPROC	jrglDebugMessageControlARB;\n	extern PFNGLDEBUGMESSAGEINSERTARBPROC	jrglDebugMessageInsertARB;\n	extern PFNGLDEBUGMESSAGECALLBACKARBPROC	jrglDebugMessageCallbackARB;\n	extern PFNGLGETDEBUGMESSAGELOGARBPROC	jrglGetDebugMessageLogARB;\n\n	// GL ARB Draw Buffers Blend\n	extern PFNGLBLENDEQUATIONIARBPROC		  jrglBlendEquationiARB;\n	extern PFNGLBLENDEQUATIONSEPARATEIARBPROC jrglBlendEquationSeparateiARB;\n	extern PFNGLBLENDFUNCIARBPROC			  jrglBlendFunciARB;\n	extern PFNGLBLENDFUNCSEPARATEIARBPROC	  jrglBlendFuncSeparateiARB;\n\n	// GL ARB Indirect Parameters\n	extern PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC		jrglMultiDrawArraysIndirectCountARB;\n	extern PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC	jrglMultiDrawElementsIndirectCountARB;\n\n	// GL ARB Robustness\n	extern PFNGLGETGRAPHICSRESETSTATUSARBPROC	jrglGetGraphicsResetStatusARB;\n	extern PFNGLGETNTEXIMAGEARBPROC				jrglGetnTexImageARB;\n	extern PFNGLREADNPIXELSARBPROC				jrglReadnPixelsARB;\n	extern PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC	jrglGetnCompressedTexImageARB;\n	extern PFNGLGETNUNIFORMFVARBPROC			jrglGetnUniformfvARB;\n	extern PFNGLGETNUNIFORMIVARBPROC			jrglGetnUniformivARB;\n	extern PFNGLGETNUNIFORMUIVARBPROC			jrglGetnUniformuivARB;\n	extern PFNGLGETNUNIFORMDVARBPROC			jrglGetnUniformdvARB;\n\n	// GL ARB Sample Shading\n	extern PFNGLMINSAMPLESHADINGARBPROC jrglMinSampleShadingARB;\n\n	// GL ARB Shading Language Include\n	extern PFNGLNAMEDSTRINGARBPROC			jrglNamedStringARB;\n	extern PFNGLDELETENAMEDSTRINGARBPROC	jrglDeleteNamedStringARB;\n	extern PFNGLCOMPILESHADERINCLUDEARBPROC	jrglCompileShaderIncludeARB;\n	extern PFNGLISNAMEDSTRINGARBPROC		jrglIsNamedStringARB;\n	extern PFNGLGETNAMEDSTRINGARBPROC		jrglGetNamedStringARB;\n	extern PFNGLGETNAMEDSTRINGIVARBPROC		jrglGetNamedStringivARB;\n\n	// GL ARB Sparse Buffer\n	extern PFNGLBUFFERPAGECOMMITMENTARBPROC		 jrglBufferPageCommitmentARB;\n	extern PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC jrglNamedBufferPageCommitmentEXT;\n	extern PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC jrglNamedBufferPageCommitmentARB;\n\n	// GL ARB Sparse Texture\n	extern PFNGLTEXPAGECOMMITMENTARBPROC jrglTexPageCommitmentARB;\n}\n\n// GL Version 1.0\n#define glCullFace				 	jrgl::jrglCullFace\n#define glFrontFace				 	jrgl::jrglFrontFace\n#define glHint					 	jrgl::jrglHint\n#define glLineWidth				 	jrgl::jrglLineWidth\n#define glPointSize				 	jrgl::jrglPointSize\n#define glPolygonMode			 	jrgl::jrglPolygonMode\n#define glScissor				 	jrgl::jrglScissor\n#define glTexParameterf			 	jrgl::jrglTexParameterf\n#define glTexParameterfv		 	jrgl::jrglTexParameterfv\n#define glTexParameteri			 	jrgl::jrglTexParameteri\n#define glTexParameteriv		 	jrgl::jrglTexParameteriv\n#define glTexImage1D			 	jrgl::jrglTexImage1D\n#define glTexImage2D			 	jrgl::jrglTexImage2D\n#define glDrawBuffer			 	jrgl::jrglDrawBuffer\n#define glClear					 	jrgl::jrglClear\n#define glClearColor			 	jrgl::jrglClearColor\n#define glClearStencil			 	jrgl::jrglClearStencil\n#define glClearDepth			 	jrgl::jrglClearDepth\n#define glStencilMask			 	jrgl::jrglStencilMask\n#define glColorMask				 	jrgl::jrglColorMask\n#define glDepthMask				 	jrgl::jrglDepthMask\n#define glDisable				 	jrgl::jrglDisable\n#define glEnable				 	jrgl::jrglEnable\n#define glFinish				 	jrgl::jrglFinish\n#define glFlush					 	jrgl::jrglFlush\n#define glBlendFunc				 	jrgl::jrglBlendFunc\n#define glLogicOp				 	jrgl::jrglLogicOp\n#define glStencilFunc			 	jrgl::jrglStencilFunc\n#define glStencilOp				 	jrgl::jrglStencilOp\n#define glDepthFunc				 	jrgl::jrglDepthFunc\n#define glPixelStoref			 	jrgl::jrglPixelStoref\n#define glPixelStorei			 	jrgl::jrglPixelStorei\n#define glReadBuffer			 	jrgl::jrglReadBuffer\n#define glReadPixels			 	jrgl::jrglReadPixels\n#define glGetBooleanv			 	jrgl::jrglGetBooleanv\n#define glGetDoublev			 	jrgl::jrglGetDoublev\n#define glGetError				 	jrgl::jrglGetError\n#define glGetFloatv				 	jrgl::jrglGetFloatv\n#define glGetIntegerv			 	jrgl::jrglGetIntegerv\n#define glGetString				 	jrgl::jrglGetString\n#define glGetTexImage			 	jrgl::jrglGetTexImage\n#define glGetTexParameterfv		 	jrgl::jrglGetTexParameterfv\n#define glGetTexParameteriv		 	jrgl::jrglGetTexParameteriv\n#define glGetTexLevelParameterfv 	jrgl::jrglGetTexLevelParameterfv\n#define glGetTexLevelParameteriv 	jrgl::jrglGetTexLevelParameteriv\n#define glIsEnabled				 	jrgl::jrglIsEnabled\n#define glDepthRange			 	jrgl::jrglDepthRange\n#define glViewport				 	jrgl::jrglViewport\n\n// GL Version 1.1\n#define glDrawArrays 		jrgl::jrglDrawArrays\n#define glDrawElements 		jrgl::jrglDrawElements\n#define glGetPointerv 		jrgl::jrglGetPointerv\n#define glPolygonOffset 	jrgl::jrglPolygonOffset\n#define glCopyTexImage1D 	jrgl::jrglCopyTexImage1D\n#define glCopyTexImage2D 	jrgl::jrglCopyTexImage2D\n#define glCopyTexSubImage1D jrgl::jrglCopyTexSubImage1D\n#define glCopyTexSubImage2D jrgl::jrglCopyTexSubImage2D\n#define glTexSubImage1D 	jrgl::jrglTexSubImage1D\n#define glTexSubImage2D 	jrgl::jrglTexSubImage2D\n#define glBindTexture 		jrgl::jrglBindTexture\n#define glDeleteTextures 	jrgl::jrglDeleteTextures\n#define glGenTextures 		jrgl::jrglGenTextures\n#define glIsTexture 		jrgl::jrglIsTexture\n\n// GL Version 1.2\n#define glDrawRangeElements	jrgl::jrglDrawRangeElements	\n#define glTexImage3D		jrgl::jrglTexImage3D\n#define glTexSubImage3D		jrgl::jrglTexSubImage3D\n#define glCopyTexSubImage3D	jrgl::jrglCopyTexSubImage3D	\n\n// GL Version 1.3\n#define glActiveTexture 			jrgl::jrglActiveTexture\n#define glSampleCoverage 			jrgl::jrglSampleCoverage\n#define glCompressedTexImage3D 		jrgl::jrglCompressedTexImage3D\n#define glCompressedTexImage2D 		jrgl::jrglCompressedTexImage2D\n#define glCompressedTexImage1D 		jrgl::jrglCompressedTexImage1D\n#define glCompressedTexSubImage3D 	jrgl::jrglCompressedTexSubImage3D\n#define glCompressedTexSubImage2D 	jrgl::jrglCompressedTexSubImage2D\n#define glCompressedTexSubImage1D 	jrgl::jrglCompressedTexSubImage1D\n#define glGetCompressedTexImage 	jrgl::jrglGetCompressedTexImage\n\n// GL Version 1.4\n#define glBlendFuncSeparate	jrgl::jrglBlendFuncSeparate\n#define glMultiDrawArrays	jrgl::jrglMultiDrawArrays\n#define glMultiDrawElements	jrgl::jrglMultiDrawElements\n#define glPointParameterf	jrgl::jrglPointParameterf\n#define glPointParameterfv	jrgl::jrglPointParameterfv\n#define glPointParameteri	jrgl::jrglPointParameteri\n#define glPointParameteriv	jrgl::jrglPointParameteriv\n#define glBlendColor		jrgl::jrglBlendColor\n#define glBlendEquation		jrgl::jrglBlendEquation\n\n// GL Version 1.5\n#define glGenQueries			jrgl::jrglGenQueries\n#define glDeleteQueries			jrgl::jrglDeleteQueries\n#define glIsQuery				jrgl::jrglIsQuery\n#define glBeginQuery			jrgl::jrglBeginQuery\n#define glEndQuery				jrgl::jrglEndQuery\n#define glGetQueryiv			jrgl::jrglGetQueryiv\n#define glGetQueryObjectiv		jrgl::jrglGetQueryObjectiv\n#define glGetQueryObjectuiv		jrgl::jrglGetQueryObjectuiv\n#define glBindBuffer			jrgl::jrglBindBuffer\n#define glDeleteBuffers			jrgl::jrglDeleteBuffers\n#define glGenBuffers			jrgl::jrglGenBuffers\n#define glIsBuffer				jrgl::jrglIsBuffer\n#define glBufferData			jrgl::jrglBufferData\n#define glBufferSubData			jrgl::jrglBufferSubData\n#define glGetBufferSubData		jrgl::jrglGetBufferSubData\n#define glMapBuffer				jrgl::jrglMapBuffer\n#define glUnmapBuffer			jrgl::jrglUnmapBuffer\n#define glGetBufferParameteriv	jrgl::jrglGetBufferParameteriv\n#define glGetBufferPointerv		jrgl::jrglGetBufferPointerv\n\n// GL Version 2.0\n#define glBlendEquationSeparate		jrgl::jrglBlendEquationSeparate\n#define glDrawBuffers				jrgl::jrglDrawBuffers\n#define glStencilOpSeparate			jrgl::jrglStencilOpSeparate\n#define glStencilFuncSeparate		jrgl::jrglStencilFuncSeparate\n#define glStencilMaskSeparate		jrgl::jrglStencilMaskSeparate\n#define glAttachShader				jrgl::jrglAttachShader\n#define glBindAttribLocation		jrgl::jrglBindAttribLocation\n#define glCompileShader				jrgl::jrglCompileShader\n#define glCreateProgram				jrgl::jrglCreateProgram\n#define glCreateShader				jrgl::jrglCreateShader\n#define glDeleteProgram				jrgl::jrglDeleteProgram\n#define glDeleteShader				jrgl::jrglDeleteShader\n#define glDetachShader				jrgl::jrglDetachShader\n#define glDisableVertexAttribArray	jrgl::jrglDisableVertexAttribArray\n#define glEnableVertexAttribArray	jrgl::jrglEnableVertexAttribArray\n#define glGetActiveAttrib			jrgl::jrglGetActiveAttrib\n#define glGetActiveUniform			jrgl::jrglGetActiveUniform\n#define glGetAttachedShaders		jrgl::jrglGetAttachedShaders\n#define glGetAttribLocation			jrgl::jrglGetAttribLocation\n#define glGetProgramiv				jrgl::jrglGetProgramiv\n#define glGetProgramInfoLog			jrgl::jrglGetProgramInfoLog\n#define glGetShaderiv				jrgl::jrglGetShaderiv\n#define glGetShaderInfoLog			jrgl::jrglGetShaderInfoLog\n#define glGetShaderSource			jrgl::jrglGetShaderSource\n#define glGetUniformLocation		jrgl::jrglGetUniformLocation\n#define glGetUniformfv				jrgl::jrglGetUniformfv\n#define glGetUniformiv				jrgl::jrglGetUniformiv\n#define glGetVertexAttribdv			jrgl::jrglGetVertexAttribdv\n#define glGetVertexAttribfv			jrgl::jrglGetVertexAttribfv\n#define glGetVertexAttribiv			jrgl::jrglGetVertexAttribiv\n#define glGetVertexAttribPointerv	jrgl::jrglGetVertexAttribPointerv\n#define glIsProgram					jrgl::jrglIsProgram\n#define glIsShader					jrgl::jrglIsShader\n#define glLinkProgram				jrgl::jrglLinkProgram\n#define glShaderSource				jrgl::jrglShaderSource\n#define glUseProgram				jrgl::jrglUseProgram\n#define glUniform1f					jrgl::jrglUniform1f\n#define glUniform2f					jrgl::jrglUniform2f\n#define glUniform3f					jrgl::jrglUniform3f\n#define glUniform4f					jrgl::jrglUniform4f\n#define glUniform1i					jrgl::jrglUniform1i\n#define glUniform2i					jrgl::jrglUniform2i\n#define glUniform3i					jrgl::jrglUniform3i\n#define glUniform4i					jrgl::jrglUniform4i\n#define glUniform1fv				jrgl::jrglUniform1fv\n#define glUniform2fv				jrgl::jrglUniform2fv\n#define glUniform3fv				jrgl::jrglUniform3fv\n#define glUniform4fv				jrgl::jrglUniform4fv\n#define glUniform1iv				jrgl::jrglUniform1iv\n#define glUniform2iv				jrgl::jrglUniform2iv\n#define glUniform3iv				jrgl::jrglUniform3iv\n#define glUniform4iv				jrgl::jrglUniform4iv\n#define glUniformMatrix2fv			jrgl::jrglUniformMatrix2fv\n#define glUniformMatrix3fv			jrgl::jrglUniformMatrix3fv\n#define glUniformMatrix4fv			jrgl::jrglUniformMatrix4fv\n#define glValidateProgram			jrgl::jrglValidateProgram\n#define glVertexAttrib1d			jrgl::jrglVertexAttrib1d\n#define glVertexAttrib1dv			jrgl::jrglVertexAttrib1dv\n#define glVertexAttrib1f			jrgl::jrglVertexAttrib1f\n#define glVertexAttrib1fv			jrgl::jrglVertexAttrib1fv\n#define glVertexAttrib1s			jrgl::jrglVertexAttrib1s\n#define glVertexAttrib1sv			jrgl::jrglVertexAttrib1sv\n#define glVertexAttrib2d			jrgl::jrglVertexAttrib2d\n#define glVertexAttrib2dv			jrgl::jrglVertexAttrib2dv\n#define glVertexAttrib2f			jrgl::jrglVertexAttrib2f\n#define glVertexAttrib2fv			jrgl::jrglVertexAttrib2fv\n#define glVertexAttrib2s			jrgl::jrglVertexAttrib2s\n#define glVertexAttrib2sv			jrgl::jrglVertexAttrib2sv\n#define glVertexAttrib3d			jrgl::jrglVertexAttrib3d\n#define glVertexAttrib3dv			jrgl::jrglVertexAttrib3dv\n#define glVertexAttrib3f			jrgl::jrglVertexAttrib3f\n#define glVertexAttrib3fv			jrgl::jrglVertexAttrib3fv\n#define glVertexAttrib3s			jrgl::jrglVertexAttrib3s\n#define glVertexAttrib3sv			jrgl::jrglVertexAttrib3sv\n#define glVertexAttrib4Nbv			jrgl::jrglVertexAttrib4Nbv\n#define glVertexAttrib4Niv			jrgl::jrglVertexAttrib4Niv\n#define glVertexAttrib4Nsv			jrgl::jrglVertexAttrib4Nsv\n#define glVertexAttrib4Nub			jrgl::jrglVertexAttrib4Nub\n#define glVertexAttrib4Nubv			jrgl::jrglVertexAttrib4Nubv\n#define glVertexAttrib4Nuiv			jrgl::jrglVertexAttrib4Nuiv\n#define glVertexAttrib4Nusv			jrgl::jrglVertexAttrib4Nusv\n#define glVertexAttrib4bv			jrgl::jrglVertexAttrib4bv\n#define glVertexAttrib4d			jrgl::jrglVertexAttrib4d\n#define glVertexAttrib4dv			jrgl::jrglVertexAttrib4dv\n#define glVertexAttrib4f			jrgl::jrglVertexAttrib4f\n#define glVertexAttrib4fv			jrgl::jrglVertexAttrib4fv\n#define glVertexAttrib4iv			jrgl::jrglVertexAttrib4iv\n#define glVertexAttrib4s			jrgl::jrglVertexAttrib4s\n#define glVertexAttrib4sv			jrgl::jrglVertexAttrib4sv\n#define glVertexAttrib4ubv			jrgl::jrglVertexAttrib4ubv\n#define glVertexAttrib4uiv			jrgl::jrglVertexAttrib4uiv\n#define glVertexAttrib4usv			jrgl::jrglVertexAttrib4usv\n#define glVertexAttribPointer		jrgl::jrglVertexAttribPointer\n\n// GL Version 2.1\n#define glUniformMatrix2x3fv jrgl::jrglUniformMatrix2x3fv\n#define glUniformMatrix3x2fv jrgl::jrglUniformMatrix3x2fv\n#define glUniformMatrix2x4fv jrgl::jrglUniformMatrix2x4fv\n#define glUniformMatrix4x2fv jrgl::jrglUniformMatrix4x2fv\n#define glUniformMatrix3x4fv jrgl::jrglUniformMatrix3x4fv\n#define glUniformMatrix4x3fv jrgl::jrglUniformMatrix4x3fv\n\n// GL Version 3.0\n#define glColorMaski 							jrgl::jrglColorMaski\n#define glGetBooleani_v 						jrgl::jrglGetBooleani_v\n#define glGetIntegeri_v 						jrgl::jrglGetIntegeri_v\n#define glEnablei 								jrgl::jrglEnablei\n#define glDisablei 								jrgl::jrglDisablei\n#define glIsEnabledi 							jrgl::jrglIsEnabledi\n#define glBeginTransformFeedback 				jrgl::jrglBeginTransformFeedback\n#define glEndTransformFeedback 					jrgl::jrglEndTransformFeedback\n#define glBindBufferRange 						jrgl::jrglBindBufferRange\n#define glBindBufferBase 						jrgl::jrglBindBufferBase\n#define glTransformFeedbackVaryings 			jrgl::jrglTransformFeedbackVaryings\n#define glGetTransformFeedbackVarying 			jrgl::jrglGetTransformFeedbackVarying\n#define glClampColor 							jrgl::jrglClampColor\n#define glBeginConditionalRender 				jrgl::jrglBeginConditionalRender\n#define glEndConditionalRender 					jrgl::jrglEndConditionalRender\n#define glVertexAttribIPointer 					jrgl::jrglVertexAttribIPointer\n#define glGetVertexAttribIiv 					jrgl::jrglGetVertexAttribIiv\n#define glGetVertexAttribIuiv 					jrgl::jrglGetVertexAttribIuiv\n#define glVertexAttribI1i 						jrgl::jrglVertexAttribI1i\n#define glVertexAttribI2i 						jrgl::jrglVertexAttribI2i\n#define glVertexAttribI3i 						jrgl::jrglVertexAttribI3i\n#define glVertexAttribI4i 						jrgl::jrglVertexAttribI4i\n#define glVertexAttribI1ui 						jrgl::jrglVertexAttribI1ui\n#define glVertexAttribI2ui 						jrgl::jrglVertexAttribI2ui\n#define glVertexAttribI3ui 						jrgl::jrglVertexAttribI3ui\n#define glVertexAttribI4ui 						jrgl::jrglVertexAttribI4ui\n#define glVertexAttribI1iv 						jrgl::jrglVertexAttribI1iv\n#define glVertexAttribI2iv 						jrgl::jrglVertexAttribI2iv\n#define glVertexAttribI3iv 						jrgl::jrglVertexAttribI3iv\n#define glVertexAttribI4iv 						jrgl::jrglVertexAttribI4iv\n#define glVertexAttribI1uiv 					jrgl::jrglVertexAttribI1uiv\n#define glVertexAttribI2uiv 					jrgl::jrglVertexAttribI2uiv\n#define glVertexAttribI3uiv 					jrgl::jrglVertexAttribI3uiv\n#define glVertexAttribI4uiv 					jrgl::jrglVertexAttribI4uiv\n#define glVertexAttribI4bv 						jrgl::jrglVertexAttribI4bv\n#define glVertexAttribI4sv 						jrgl::jrglVertexAttribI4sv\n#define glVertexAttribI4ubv 					jrgl::jrglVertexAttribI4ubv\n#define glVertexAttribI4usv 					jrgl::jrglVertexAttribI4usv\n#define glGetUniformuiv 						jrgl::jrglGetUniformuiv\n#define glBindFragDataLocation 					jrgl::jrglBindFragDataLocation\n#define glGetFragDataLocation 					jrgl::jrglGetFragDataLocation\n#define glUniform1ui 							jrgl::jrglUniform1ui\n#define glUniform2ui 							jrgl::jrglUniform2ui\n#define glUniform3ui 							jrgl::jrglUniform3ui\n#define glUniform4ui 							jrgl::jrglUniform4ui\n#define glUniform1uiv 							jrgl::jrglUniform1uiv\n#define glUniform2uiv 							jrgl::jrglUniform2uiv\n#define glUniform3uiv 							jrgl::jrglUniform3uiv\n#define glUniform4uiv 							jrgl::jrglUniform4uiv\n#define glTexParameterIiv 						jrgl::jrglTexParameterIiv\n#define glTexParameterIuiv 						jrgl::jrglTexParameterIuiv\n#define glGetTexParameterIiv 					jrgl::jrglGetTexParameterIiv\n#define glGetTexParameterIuiv 					jrgl::jrglGetTexParameterIuiv\n#define glClearBufferiv 						jrgl::jrglClearBufferiv\n#define glClearBufferuiv 						jrgl::jrglClearBufferuiv\n#define glClearBufferfv 						jrgl::jrglClearBufferfv\n#define glClearBufferfi 						jrgl::jrglClearBufferfi\n#define glGetStringi 							jrgl::jrglGetStringi\n#define glIsRenderbuffer 						jrgl::jrglIsRenderbuffer\n#define glBindRenderbuffer 						jrgl::jrglBindRenderbuffer\n#define glDeleteRenderbuffers 					jrgl::jrglDeleteRenderbuffers\n#define glGenRenderbuffers 						jrgl::jrglGenRenderbuffers\n#define glRenderbufferStorage 					jrgl::jrglRenderbufferStorage\n#define glGetRenderbufferParameteriv 			jrgl::jrglGetRenderbufferParameteriv\n#define glIsFramebuffer 						jrgl::jrglIsFramebuffer\n#define glBindFramebuffer 						jrgl::jrglBindFramebuffer\n#define glDeleteFramebuffers 					jrgl::jrglDeleteFramebuffers\n#define glGenFramebuffers 						jrgl::jrglGenFramebuffers\n#define glCheckFramebufferStatus 				jrgl::jrglCheckFramebufferStatus\n#define glFramebufferTexture1D 					jrgl::jrglFramebufferTexture1D\n#define glFramebufferTexture2D 					jrgl::jrglFramebufferTexture2D\n#define glFramebufferTexture3D 					jrgl::jrglFramebufferTexture3D\n#define glFramebufferRenderbuffer 				jrgl::jrglFramebufferRenderbuffer\n#define glGetFramebufferAttachmentParameteriv 	jrgl::jrglGetFramebufferAttachmentParameteriv\n#define glGenerateMipmap 						jrgl::jrglGenerateMipmap\n#define glBlitFramebuffer 						jrgl::jrglBlitFramebuffer\n#define glRenderbufferStorageMultisample 		jrgl::jrglRenderbufferStorageMultisample\n#define glFramebufferTextureLayer 				jrgl::jrglFramebufferTextureLayer\n#define glMapBufferRange 						jrgl::jrglMapBufferRange\n#define glFlushMappedBufferRange 				jrgl::jrglFlushMappedBufferRange\n#define glBindVertexArray 						jrgl::jrglBindVertexArray\n#define glDeleteVertexArrays 					jrgl::jrglDeleteVertexArrays\n#define glGenVertexArrays 						jrgl::jrglGenVertexArrays\n#define glIsVertexArray 						jrgl::jrglIsVertexArray\n\n// GL Version 3.1\n#define glDrawArraysInstanced 		jrgl::jrglDrawArraysInstanced\n#define glDrawElementsInstanced 	jrgl::jrglDrawElementsInstanced\n#define glTexBuffer 				jrgl::jrglTexBuffer\n#define glPrimitiveRestartIndex 	jrgl::jrglPrimitiveRestartIndex\n#define glCopyBufferSubData 		jrgl::jrglCopyBufferSubData\n#define glGetUniformIndices 		jrgl::jrglGetUniformIndices\n#define glGetActiveUniformsiv 		jrgl::jrglGetActiveUniformsiv\n#define glGetActiveUniformName 		jrgl::jrglGetActiveUniformName\n#define glGetUniformBlockIndex 		jrgl::jrglGetUniformBlockIndex\n#define glGetActiveUniformBlockiv 	jrgl::jrglGetActiveUniformBlockiv\n#define glGetActiveUniformBlockName jrgl::jrglGetActiveUniformBlockName\n#define glUniformBlockBinding 		jrgl::jrglUniformBlockBinding\n\n// GL Version 3.2\n#define glDrawElementsBaseVertex 			jrgl::jrglDrawElementsBaseVertex\n#define glDrawRangeElementsBaseVertex 		jrgl::jrglDrawRangeElementsBaseVertex\n#define glDrawElementsInstancedBaseVertex 	jrgl::jrglDrawElementsInstancedBaseVertex\n#define glMultiDrawElementsBaseVertex 		jrgl::jrglMultiDrawElementsBaseVertex\n#define glProvokingVertex 					jrgl::jrglProvokingVertex\n#define glFenceSync 						jrgl::jrglFenceSync\n#define glIsSync 							jrgl::jrglIsSync\n#define glDeleteSync 						jrgl::jrglDeleteSync\n#define glClientWaitSync 					jrgl::jrglClientWaitSync\n#define glWaitSync 							jrgl::jrglWaitSync\n#define glGetInteger64v 					jrgl::jrglGetInteger64v\n#define glGetSynciv 						jrgl::jrglGetSynciv\n#define glGetInteger64i_v 					jrgl::jrglGetInteger64i_v\n#define glGetBufferParameteri64v 			jrgl::jrglGetBufferParameteri64v\n#define glFramebufferTexture 				jrgl::jrglFramebufferTexture\n#define glTexImage2DMultisample 			jrgl::jrglTexImage2DMultisample\n#define glTexImage3DMultisample 			jrgl::jrglTexImage3DMultisample\n#define glGetMultisamplefv 					jrgl::jrglGetMultisamplefv\n#define glSampleMaski 						jrgl::jrglSampleMaski\n\n// GL Version 3.3\n#define glBindFragDataLocationIndexed 	jrgl::jrglBindFragDataLocationIndexed\n#define glGetFragDataIndex 				jrgl::jrglGetFragDataIndex\n#define glGenSamplers 					jrgl::jrglGenSamplers\n#define glDeleteSamplers 				jrgl::jrglDeleteSamplers\n#define glIsSampler 					jrgl::jrglIsSampler\n#define glBindSampler 					jrgl::jrglBindSampler\n#define glSamplerParameteri 			jrgl::jrglSamplerParameteri\n#define glSamplerParameteriv 			jrgl::jrglSamplerParameteriv\n#define glSamplerParameterf 			jrgl::jrglSamplerParameterf\n#define glSamplerParameterfv 			jrgl::jrglSamplerParameterfv\n#define glSamplerParameterIiv 			jrgl::jrglSamplerParameterIiv\n#define glSamplerParameterIuiv 			jrgl::jrglSamplerParameterIuiv\n#define glGetSamplerParameteriv 		jrgl::jrglGetSamplerParameteriv\n#define glGetSamplerParameterIiv 		jrgl::jrglGetSamplerParameterIiv\n#define glGetSamplerParameterfv 		jrgl::jrglGetSamplerParameterfv\n#define glGetSamplerParameterIuiv 		jrgl::jrglGetSamplerParameterIuiv\n#define glQueryCounter 					jrgl::jrglQueryCounter\n#define glGetQueryObjecti64v 			jrgl::jrglGetQueryObjecti64v\n#define glGetQueryObjectui64v 			jrgl::jrglGetQueryObjectui64v\n#define glVertexAttribDivisor 			jrgl::jrglVertexAttribDivisor\n#define glVertexAttribP1ui 				jrgl::jrglVertexAttribP1ui\n#define glVertexAttribP1uiv 			jrgl::jrglVertexAttribP1uiv\n#define glVertexAttribP2ui 				jrgl::jrglVertexAttribP2ui\n#define glVertexAttribP2uiv 			jrgl::jrglVertexAttribP2uiv\n#define glVertexAttribP3ui 				jrgl::jrglVertexAttribP3ui\n#define glVertexAttribP3uiv 			jrgl::jrglVertexAttribP3uiv\n#define glVertexAttribP4ui 				jrgl::jrglVertexAttribP4ui\n#define glVertexAttribP4uiv 			jrgl::jrglVertexAttribP4uiv\n\n// GL Version 4.0\n#define glMinSampleShading 					jrgl::jrglMinSampleShading\n#define glBlendEquationi 					jrgl::jrglBlendEquationi\n#define glBlendEquationSeparatei 			jrgl::jrglBlendEquationSeparatei\n#define glBlendFunci 						jrgl::jrglBlendFunci\n#define glBlendFuncSeparatei 				jrgl::jrglBlendFuncSeparatei\n#define glDrawArraysIndirect 				jrgl::jrglDrawArraysIndirect\n#define glDrawElementsIndirect 				jrgl::jrglDrawElementsIndirect\n#define glUniform1d 						jrgl::jrglUniform1d\n#define glUniform2d 						jrgl::jrglUniform2d\n#define glUniform3d 						jrgl::jrglUniform3d\n#define glUniform4d 						jrgl::jrglUniform4d\n#define glUniform1dv 						jrgl::jrglUniform1dv\n#define glUniform2dv 						jrgl::jrglUniform2dv\n#define glUniform3dv 						jrgl::jrglUniform3dv\n#define glUniform4dv 						jrgl::jrglUniform4dv\n#define glUniformMatrix2dv 					jrgl::jrglUniformMatrix2dv\n#define glUniformMatrix3dv 					jrgl::jrglUniformMatrix3dv\n#define glUniformMatrix4dv 					jrgl::jrglUniformMatrix4dv\n#define glUniformMatrix2x3dv 				jrgl::jrglUniformMatrix2x3dv\n#define glUniformMatrix2x4dv 				jrgl::jrglUniformMatrix2x4dv\n#define glUniformMatrix3x2dv 				jrgl::jrglUniformMatrix3x2dv\n#define glUniformMatrix3x4dv 				jrgl::jrglUniformMatrix3x4dv\n#define glUniformMatrix4x2dv 				jrgl::jrglUniformMatrix4x2dv\n#define glUniformMatrix4x3dv 				jrgl::jrglUniformMatrix4x3dv\n#define glGetUniformdv 						jrgl::jrglGetUniformdv\n#define glGetSubroutineUniformLocation 		jrgl::jrglGetSubroutineUniformLocation\n#define glGetSubroutineIndex 				jrgl::jrglGetSubroutineIndex\n#define glGetActiveSubroutineUniformiv 		jrgl::jrglGetActiveSubroutineUniformiv\n#define glGetActiveSubroutineUniformName 	jrgl::jrglGetActiveSubroutineUniformName\n#define glGetActiveSubroutineName 			jrgl::jrglGetActiveSubroutineName\n#define glUniformSubroutinesuiv 			jrgl::jrglUniformSubroutinesuiv\n#define glGetUniformSubroutineuiv 			jrgl::jrglGetUniformSubroutineuiv\n#define glGetProgramStageiv 				jrgl::jrglGetProgramStageiv\n#define glPatchParameteri 					jrgl::jrglPatchParameteri\n#define glPatchParameterfv 					jrgl::jrglPatchParameterfv\n#define glBindTransformFeedback 			jrgl::jrglBindTransformFeedback\n#define glDeleteTransformFeedbacks 			jrgl::jrglDeleteTransformFeedbacks\n#define glGenTransformFeedbacks 			jrgl::jrglGenTransformFeedbacks\n#define glIsTransformFeedback 				jrgl::jrglIsTransformFeedback\n#define glPauseTransformFeedback 			jrgl::jrglPauseTransformFeedback\n#define glResumeTransformFeedback 			jrgl::jrglResumeTransformFeedback\n#define glDrawTransformFeedback 			jrgl::jrglDrawTransformFeedback\n#define glDrawTransformFeedbackStream 		jrgl::jrglDrawTransformFeedbackStream\n#define glBeginQueryIndexed 				jrgl::jrglBeginQueryIndexed\n#define glEndQueryIndexed 					jrgl::jrglEndQueryIndexed\n#define glGetQueryIndexediv 				jrgl::jrglGetQueryIndexediv\n\n// GL Version 4.1\n#define glReleaseShaderCompiler 	jrgl::jrglReleaseShaderCompiler\n#define glShaderBinary 				jrgl::jrglShaderBinary\n#define glGetShaderPrecisionFormat 	jrgl::jrglGetShaderPrecisionFormat\n#define glDepthRangef 				jrgl::jrglDepthRangef\n#define glClearDepthf 				jrgl::jrglClearDepthf\n#define glGetProgramBinary 			jrgl::jrglGetProgramBinary\n#define glProgramBinary 			jrgl::jrglProgramBinary\n#define glProgramParameteri 		jrgl::jrglProgramParameteri\n#define glUseProgramStages 			jrgl::jrglUseProgramStages\n#define glActiveShaderProgram 		jrgl::jrglActiveShaderProgram\n#define glCreateShaderProgramv 		jrgl::jrglCreateShaderProgramv\n#define glBindProgramPipeline 		jrgl::jrglBindProgramPipeline\n#define glDeleteProgramPipelines 	jrgl::jrglDeleteProgramPipelines\n#define glGenProgramPipelines 		jrgl::jrglGenProgramPipelines\n#define glIsProgramPipeline 		jrgl::jrglIsProgramPipeline\n#define glGetProgramPipelineiv 		jrgl::jrglGetProgramPipelineiv\n#define glProgramUniform1i 			jrgl::jrglProgramUniform1i\n#define glProgramUniform1iv 		jrgl::jrglProgramUniform1iv\n#define glProgramUniform1f 			jrgl::jrglProgramUniform1f\n#define glProgramUniform1fv 		jrgl::jrglProgramUniform1fv\n#define glProgramUniform1d 			jrgl::jrglProgramUniform1d\n#define glProgramUniform1dv 		jrgl::jrglProgramUniform1dv\n#define glProgramUniform1ui 		jrgl::jrglProgramUniform1ui\n#define glProgramUniform1uiv 		jrgl::jrglProgramUniform1uiv\n#define glProgramUniform2i 			jrgl::jrglProgramUniform2i\n#define glProgramUniform2iv 		jrgl::jrglProgramUniform2iv\n#define glProgramUniform2f 			jrgl::jrglProgramUniform2f\n#define glProgramUniform2fv 		jrgl::jrglProgramUniform2fv\n#define glProgramUniform2d 			jrgl::jrglProgramUniform2d\n#define glProgramUniform2dv 		jrgl::jrglProgramUniform2dv\n#define glProgramUniform2ui 		jrgl::jrglProgramUniform2ui\n#define glProgramUniform2uiv 		jrgl::jrglProgramUniform2uiv\n#define glProgramUniform3i 			jrgl::jrglProgramUniform3i\n#define glProgramUniform3iv 		jrgl::jrglProgramUniform3iv\n#define glProgramUniform3f 			jrgl::jrglProgramUniform3f\n#define glProgramUniform3fv 		jrgl::jrglProgramUniform3fv\n#define glProgramUniform3d 			jrgl::jrglProgramUniform3d\n#define glProgramUniform3dv 		jrgl::jrglProgramUniform3dv\n#define glProgramUniform3ui 		jrgl::jrglProgramUniform3ui\n#define glProgramUniform3uiv 		jrgl::jrglProgramUniform3uiv\n#define glProgramUniform4i 			jrgl::jrglProgramUniform4i\n#define glProgramUniform4iv 		jrgl::jrglProgramUniform4iv\n#define glProgramUniform4f 			jrgl::jrglProgramUniform4f\n#define glProgramUniform4fv 		jrgl::jrglProgramUniform4fv\n#define glProgramUniform4d 			jrgl::jrglProgramUniform4d\n#define glProgramUniform4dv 		jrgl::jrglProgramUniform4dv\n#define glProgramUniform4ui 		jrgl::jrglProgramUniform4ui\n#define glProgramUniform4uiv 		jrgl::jrglProgramUniform4uiv\n#define glProgramUniformMatrix2fv 	jrgl::jrglProgramUniformMatrix2fv\n#define glProgramUniformMatrix3fv 	jrgl::jrglProgramUniformMatrix3fv\n#define glProgramUniformMatrix4fv 	jrgl::jrglProgramUniformMatrix4fv\n#define glProgramUniformMatrix2dv 	jrgl::jrglProgramUniformMatrix2dv\n#define glProgramUniformMatrix3dv 	jrgl::jrglProgramUniformMatrix3dv\n#define glProgramUniformMatrix4dv 	jrgl::jrglProgramUniformMatrix4dv\n#define glProgramUniformMatrix2x3fv jrgl::jrglProgramUniformMatrix2x3fv\n#define glProgramUniformMatrix3x2fv jrgl::jrglProgramUniformMatrix3x2fv\n#define glProgramUniformMatrix2x4fv jrgl::jrglProgramUniformMatrix2x4fv\n#define glProgramUniformMatrix4x2fv jrgl::jrglProgramUniformMatrix4x2fv\n#define glProgramUniformMatrix3x4fv jrgl::jrglProgramUniformMatrix3x4fv\n#define glProgramUniformMatrix4x3fv jrgl::jrglProgramUniformMatrix4x3fv\n#define glProgramUniformMatrix2x3dv jrgl::jrglProgramUniformMatrix2x3dv\n#define glProgramUniformMatrix3x2dv jrgl::jrglProgramUniformMatrix3x2dv\n#define glProgramUniformMatrix2x4dv jrgl::jrglProgramUniformMatrix2x4dv\n#define glProgramUniformMatrix4x2dv jrgl::jrglProgramUniformMatrix4x2dv\n#define glProgramUniformMatrix3x4dv jrgl::jrglProgramUniformMatrix3x4dv\n#define glProgramUniformMatrix4x3dv jrgl::jrglProgramUniformMatrix4x3dv\n#define glValidateProgramPipeline 	jrgl::jrglValidateProgramPipeline\n#define glGetProgramPipelineInfoLog jrgl::jrglGetProgramPipelineInfoLog\n#define glVertexAttribL1d 			jrgl::jrglVertexAttribL1d\n#define glVertexAttribL2d 			jrgl::jrglVertexAttribL2d\n#define glVertexAttribL3d 			jrgl::jrglVertexAttribL3d\n#define glVertexAttribL4d 			jrgl::jrglVertexAttribL4d\n#define glVertexAttribL1dv 			jrgl::jrglVertexAttribL1dv\n#define glVertexAttribL2dv 			jrgl::jrglVertexAttribL2dv\n#define glVertexAttribL3dv 			jrgl::jrglVertexAttribL3dv\n#define glVertexAttribL4dv 			jrgl::jrglVertexAttribL4dv\n#define glVertexAttribLPointer 		jrgl::jrglVertexAttribLPointer\n#define glGetVertexAttribLdv 		jrgl::jrglGetVertexAttribLdv\n#define glViewportArrayv 			jrgl::jrglViewportArrayv\n#define glViewportIndexedf 			jrgl::jrglViewportIndexedf\n#define glViewportIndexedfv 		jrgl::jrglViewportIndexedfv\n#define glScissorArrayv 			jrgl::jrglScissorArrayv\n#define glScissorIndexed 			jrgl::jrglScissorIndexed\n#define glScissorIndexedv 			jrgl::jrglScissorIndexedv\n#define glDepthRangeArrayv 			jrgl::jrglDepthRangeArrayv\n#define glDepthRangeIndexed 		jrgl::jrglDepthRangeIndexed\n#define glGetFloati_v 				jrgl::jrglGetFloati_v\n#define glGetDoublei_v 				jrgl::jrglGetDoublei_v\n\n// GL Version 4.2\n#define glDrawArraysInstancedBaseInstance 				jrgl::jrglDrawArraysInstancedBaseInstance\n#define glDrawElementsInstancedBaseInstance 			jrgl::jrglDrawElementsInstancedBaseInstance\n#define glDrawElementsInstancedBaseVertexBaseInstance 	jrgl::jrglDrawElementsInstancedBaseVertexBaseInstance\n#define glGetInternalformativ 							jrgl::jrglGetInternalformativ\n#define glGetActiveAtomicCounterBufferiv 				jrgl::jrglGetActiveAtomicCounterBufferiv\n#define glBindImageTexture 								jrgl::jrglBindImageTexture\n#define glMemoryBarrier 								jrgl::jrglMemoryBarrier\n#define glTexStorage1D 									jrgl::jrglTexStorage1D\n#define glTexStorage2D 									jrgl::jrglTexStorage2D\n#define glTexStorage3D 									jrgl::jrglTexStorage3D\n#define glDrawTransformFeedbackInstanced 				jrgl::jrglDrawTransformFeedbackInstanced\n#define glDrawTransformFeedbackStreamInstanced 			jrgl::jrglDrawTransformFeedbackStreamInstanced\n\n// GL Version 4.3\n#define glClearBufferData 					jrgl::jrglClearBufferData\n#define glClearBufferSubData 				jrgl::jrglClearBufferSubData\n#define glDispatchCompute 					jrgl::jrglDispatchCompute\n#define glDispatchComputeIndirect 			jrgl::jrglDispatchComputeIndirect\n#define glCopyImageSubData 					jrgl::jrglCopyImageSubData\n#define glFramebufferParameteri 			jrgl::jrglFramebufferParameteri\n#define glGetFramebufferParameteriv 		jrgl::jrglGetFramebufferParameteriv\n#define glGetInternalformati64v 			jrgl::jrglGetInternalformati64v\n#define glInvalidateTexSubImage 			jrgl::jrglInvalidateTexSubImage\n#define glInvalidateTexImage 				jrgl::jrglInvalidateTexImage\n#define glInvalidateBufferSubData 			jrgl::jrglInvalidateBufferSubData\n#define glInvalidateBufferData 				jrgl::jrglInvalidateBufferData\n#define glInvalidateFramebuffer 			jrgl::jrglInvalidateFramebuffer\n#define glInvalidateSubFramebuffer 			jrgl::jrglInvalidateSubFramebuffer\n#define glMultiDrawArraysIndirect 			jrgl::jrglMultiDrawArraysIndirect\n#define glMultiDrawElementsIndirect 		jrgl::jrglMultiDrawElementsIndirect\n#define glGetProgramInterfaceiv 			jrgl::jrglGetProgramInterfaceiv\n#define glGetProgramResourceIndex 			jrgl::jrglGetProgramResourceIndex\n#define glGetProgramResourceName 			jrgl::jrglGetProgramResourceName\n#define glGetProgramResourceiv 				jrgl::jrglGetProgramResourceiv\n#define glGetProgramResourceLocation 		jrgl::jrglGetProgramResourceLocation\n#define glGetProgramResourceLocationIndex 	jrgl::jrglGetProgramResourceLocationIndex\n#define glShaderStorageBlockBinding 		jrgl::jrglShaderStorageBlockBinding\n#define glTexBufferRange 					jrgl::jrglTexBufferRange\n#define glTexStorage2DMultisample 			jrgl::jrglTexStorage2DMultisample\n#define glTexStorage3DMultisample 			jrgl::jrglTexStorage3DMultisample\n#define glTextureView 						jrgl::jrglTextureView\n#define glBindVertexBuffer 					jrgl::jrglBindVertexBuffer\n#define glVertexAttribFormat 				jrgl::jrglVertexAttribFormat\n#define glVertexAttribIFormat 				jrgl::jrglVertexAttribIFormat\n#define glVertexAttribLFormat 				jrgl::jrglVertexAttribLFormat\n#define glVertexAttribBinding 				jrgl::jrglVertexAttribBinding\n#define glVertexBindingDivisor 				jrgl::jrglVertexBindingDivisor\n#define glDebugMessageControl 				jrgl::jrglDebugMessageControl\n#define glDebugMessageInsert 				jrgl::jrglDebugMessageInsert\n#define glDebugMessageCallback 				jrgl::jrglDebugMessageCallback\n#define glGetDebugMessageLog 				jrgl::jrglGetDebugMessageLog\n#define glPushDebugGroup 					jrgl::jrglPushDebugGroup\n#define glPopDebugGroup 					jrgl::jrglPopDebugGroup\n#define glObjectLabel 						jrgl::jrglObjectLabel\n#define glGetObjectLabel 					jrgl::jrglGetObjectLabel\n#define glObjectPtrLabel 					jrgl::jrglObjectPtrLabel\n#define glGetObjectPtrLabel 				jrgl::jrglGetObjectPtrLabel\n\n// GL Version 4.4\n#define glBufferStorage 	jrgl::jrglBufferStorage\n#define glClearTexImage 	jrgl::jrglClearTexImage\n#define glClearTexSubImage 	jrgl::jrglClearTexSubImage\n#define glBindBuffersBase 	jrgl::jrglBindBuffersBase\n#define glBindBuffersRange 	jrgl::jrglBindBuffersRange\n#define glBindTextures 		jrgl::jrglBindTextures\n#define glBindSamplers 		jrgl::jrglBindSamplers\n#define glBindImageTextures jrgl::jrglBindImageTextures\n#define glBindVertexBuffers jrgl::jrglBindVertexBuffers\n\n// GL Version 4.5\n#define glClipControl 								jrgl::jrglClipControl\n#define glCreateTransformFeedbacks 					jrgl::jrglCreateTransformFeedbacks\n#define glTransformFeedbackBufferBase 				jrgl::jrglTransformFeedbackBufferBase\n#define glTransformFeedbackBufferRange 				jrgl::jrglTransformFeedbackBufferRange\n#define glGetTransformFeedbackiv 					jrgl::jrglGetTransformFeedbackiv\n#define glGetTransformFeedbacki_v 					jrgl::jrglGetTransformFeedbacki_v\n#define glGetTransformFeedbacki64_v 				jrgl::jrglGetTransformFeedbacki64_v\n#define glCreateBuffers 							jrgl::jrglCreateBuffers\n#define glNamedBufferStorage 						jrgl::jrglNamedBufferStorage\n#define glNamedBufferData 							jrgl::jrglNamedBufferData\n#define glNamedBufferSubData 						jrgl::jrglNamedBufferSubData\n#define glCopyNamedBufferSubData 					jrgl::jrglCopyNamedBufferSubData\n#define glClearNamedBufferData 						jrgl::jrglClearNamedBufferData\n#define glClearNamedBufferSubData 					jrgl::jrglClearNamedBufferSubData\n#define glMapNamedBuffer 							jrgl::jrglMapNamedBuffer\n#define glMapNamedBufferRange 						jrgl::jrglMapNamedBufferRange\n#define glUnmapNamedBuffer 							jrgl::jrglUnmapNamedBuffer\n#define glFlushMappedNamedBufferRange 				jrgl::jrglFlushMappedNamedBufferRange\n#define glGetNamedBufferParameteriv 				jrgl::jrglGetNamedBufferParameteriv\n#define glGetNamedBufferParameteri64v 				jrgl::jrglGetNamedBufferParameteri64v\n#define glGetNamedBufferPointerv 					jrgl::jrglGetNamedBufferPointerv\n#define glGetNamedBufferSubData 					jrgl::jrglGetNamedBufferSubData\n#define glCreateFramebuffers 						jrgl::jrglCreateFramebuffers\n#define glNamedFramebufferRenderbuffer 				jrgl::jrglNamedFramebufferRenderbuffer\n#define glNamedFramebufferParameteri 				jrgl::jrglNamedFramebufferParameteri\n#define glNamedFramebufferTexture 					jrgl::jrglNamedFramebufferTexture\n#define glNamedFramebufferTextureLayer 				jrgl::jrglNamedFramebufferTextureLayer\n#define glNamedFramebufferDrawBuffer 				jrgl::jrglNamedFramebufferDrawBuffer\n#define glNamedFramebufferDrawBuffers 				jrgl::jrglNamedFramebufferDrawBuffers\n#define glNamedFramebufferReadBuffer 				jrgl::jrglNamedFramebufferReadBuffer\n#define glInvalidateNamedFramebufferData 			jrgl::jrglInvalidateNamedFramebufferData\n#define glInvalidateNamedFramebufferSubData 		jrgl::jrglInvalidateNamedFramebufferSubData\n#define glClearNamedFramebufferiv 					jrgl::jrglClearNamedFramebufferiv\n#define glClearNamedFramebufferuiv 					jrgl::jrglClearNamedFramebufferuiv\n#define glClearNamedFramebufferfv 					jrgl::jrglClearNamedFramebufferfv\n#define glClearNamedFramebufferfi 					jrgl::jrglClearNamedFramebufferfi\n#define glBlitNamedFramebuffer 						jrgl::jrglBlitNamedFramebuffer\n#define glCheckNamedFramebufferStatus 				jrgl::jrglCheckNamedFramebufferStatus\n#define glGetNamedFramebufferParameteriv 			jrgl::jrglGetNamedFramebufferParameteriv\n#define glGetNamedFramebufferAttachmentParameteriv 	jrgl::jrglGetNamedFramebufferAttachmentParameteriv\n#define glCreateRenderbuffers 						jrgl::jrglCreateRenderbuffers\n#define glNamedRenderbufferStorage 					jrgl::jrglNamedRenderbufferStorage\n#define glNamedRenderbufferStorageMultisample 		jrgl::jrglNamedRenderbufferStorageMultisample\n#define glGetNamedRenderbufferParameteriv 			jrgl::jrglGetNamedRenderbufferParameteriv\n#define glCreateTextures 							jrgl::jrglCreateTextures\n#define glTextureBuffer 							jrgl::jrglTextureBuffer\n#define glTextureBufferRange 						jrgl::jrglTextureBufferRange\n#define glTextureStorage1D 							jrgl::jrglTextureStorage1D\n#define glTextureStorage2D 							jrgl::jrglTextureStorage2D\n#define glTextureStorage3D 							jrgl::jrglTextureStorage3D\n#define glTextureStorage2DMultisample 				jrgl::jrglTextureStorage2DMultisample\n#define glTextureStorage3DMultisample 				jrgl::jrglTextureStorage3DMultisample\n#define glTextureSubImage1D 						jrgl::jrglTextureSubImage1D\n#define glTextureSubImage2D 						jrgl::jrglTextureSubImage2D\n#define glTextureSubImage3D 						jrgl::jrglTextureSubImage3D\n#define glCompressedTextureSubImage1D 				jrgl::jrglCompressedTextureSubImage1D\n#define glCompressedTextureSubImage2D 				jrgl::jrglCompressedTextureSubImage2D\n#define glCompressedTextureSubImage3D 				jrgl::jrglCompressedTextureSubImage3D\n#define glCopyTextureSubImage1D 					jrgl::jrglCopyTextureSubImage1D\n#define glCopyTextureSubImage2D 					jrgl::jrglCopyTextureSubImage2D\n#define glCopyTextureSubImage3D 					jrgl::jrglCopyTextureSubImage3D\n#define glTextureParameterf 						jrgl::jrglTextureParameterf\n#define glTextureParameterfv 						jrgl::jrglTextureParameterfv\n#define glTextureParameteri 						jrgl::jrglTextureParameteri\n#define glTextureParameterIiv 						jrgl::jrglTextureParameterIiv\n#define glTextureParameterIuiv 						jrgl::jrglTextureParameterIuiv\n#define glTextureParameteriv 						jrgl::jrglTextureParameteriv\n#define glGenerateTextureMipmap 					jrgl::jrglGenerateTextureMipmap\n#define glBindTextureUnit 							jrgl::jrglBindTextureUnit\n#define glGetTextureImage 							jrgl::jrglGetTextureImage\n#define glGetCompressedTextureImage 				jrgl::jrglGetCompressedTextureImage\n#define glGetTextureLevelParameterfv 				jrgl::jrglGetTextureLevelParameterfv\n#define glGetTextureLevelParameteriv 				jrgl::jrglGetTextureLevelParameteriv\n#define glGetTextureParameterfv 					jrgl::jrglGetTextureParameterfv\n#define glGetTextureParameterIiv 					jrgl::jrglGetTextureParameterIiv\n#define glGetTextureParameterIuiv 					jrgl::jrglGetTextureParameterIuiv\n#define glGetTextureParameteriv 					jrgl::jrglGetTextureParameteriv\n#define glCreateVertexArrays 						jrgl::jrglCreateVertexArrays\n#define glDisableVertexArrayAttrib 					jrgl::jrglDisableVertexArrayAttrib\n#define glEnableVertexArrayAttrib 					jrgl::jrglEnableVertexArrayAttrib\n#define glVertexArrayElementBuffer 					jrgl::jrglVertexArrayElementBuffer\n#define glVertexArrayVertexBuffer 					jrgl::jrglVertexArrayVertexBuffer\n#define glVertexArrayVertexBuffers 					jrgl::jrglVertexArrayVertexBuffers\n#define glVertexArrayAttribBinding 					jrgl::jrglVertexArrayAttribBinding\n#define glVertexArrayAttribFormat 					jrgl::jrglVertexArrayAttribFormat\n#define glVertexArrayAttribIFormat 					jrgl::jrglVertexArrayAttribIFormat\n#define glVertexArrayAttribLFormat 					jrgl::jrglVertexArrayAttribLFormat\n#define glVertexArrayBindingDivisor 				jrgl::jrglVertexArrayBindingDivisor\n#define glGetVertexArrayiv 							jrgl::jrglGetVertexArrayiv\n#define glGetVertexArrayIndexediv 					jrgl::jrglGetVertexArrayIndexediv\n#define glGetVertexArrayIndexed64iv 				jrgl::jrglGetVertexArrayIndexed64iv\n#define glCreateSamplers 							jrgl::jrglCreateSamplers\n#define glCreateProgramPipelines 					jrgl::jrglCreateProgramPipelines\n#define glCreateQueries 							jrgl::jrglCreateQueries\n#define glGetQueryBufferObjecti64v 					jrgl::jrglGetQueryBufferObjecti64v\n#define glGetQueryBufferObjectiv 					jrgl::jrglGetQueryBufferObjectiv\n#define glGetQueryBufferObjectui64v 				jrgl::jrglGetQueryBufferObjectui64v\n#define glGetQueryBufferObjectuiv 					jrgl::jrglGetQueryBufferObjectuiv\n#define glMemoryBarrierByRegion 					jrgl::jrglMemoryBarrierByRegion\n#define glGetTextureSubImage 						jrgl::jrglGetTextureSubImage\n#define glGetCompressedTextureSubImage 				jrgl::jrglGetCompressedTextureSubImage\n#define glGetGraphicsResetStatus 					jrgl::jrglGetGraphicsResetStatus\n#define glGetnCompressedTexImage 					jrgl::jrglGetnCompressedTexImage\n#define glGetnTexImage 								jrgl::jrglGetnTexImage\n#define glGetnUniformdv 							jrgl::jrglGetnUniformdv\n#define glGetnUniformfv 							jrgl::jrglGetnUniformfv\n#define glGetnUniformiv 							jrgl::jrglGetnUniformiv\n#define glGetnUniformuiv 							jrgl::jrglGetnUniformuiv\n#define glReadnPixels 								jrgl::jrglReadnPixels\n#define glTextureBarrier 							jrgl::jrglTextureBarrier\n\n// GL ARB Bindless Textures\n#define glGetTextureHandleARB 				jrgl::jrglGetTextureHandleARB\n#define glGetTextureSamplerHandleARB 		jrgl::jrglGetTextureSamplerHandleARB\n#define glMakeTextureHandleResidentARB 		jrgl::jrglMakeTextureHandleResidentARB\n#define glMakeTextureHandleNonResidentARB 	jrgl::jrglMakeTextureHandleNonResidentARB\n#define glGetImageHandleARB 				jrgl::jrglGetImageHandleARB\n#define glMakeImageHandleResidentARB 		jrgl::jrglMakeImageHandleResidentARB\n#define glMakeImageHandleNonResidentARB 	jrgl::jrglMakeImageHandleNonResidentARB\n#define glUniformHandleui64ARB 				jrgl::jrglUniformHandleui64ARB\n#define glUniformHandleui64vARB 			jrgl::jrglUniformHandleui64vARB\n#define glProgramUniformHandleui64ARB 		jrgl::jrglProgramUniformHandleui64ARB\n#define glProgramUniformHandleui64vARB 		jrgl::jrglProgramUniformHandleui64vARB\n#define glIsTextureHandleResidentARB 		jrgl::jrglIsTextureHandleResidentARB\n#define glIsImageHandleResidentARB 			jrgl::jrglIsImageHandleResidentARB\n#define glVertexAttribL1ui64ARB 			jrgl::jrglVertexAttribL1ui64ARB\n#define glVertexAttribL1ui64vARB 			jrgl::jrglVertexAttribL1ui64vARB\n#define glGetVertexAttribLui64vARB 			jrgl::jrglGetVertexAttribLui64vARB\n\n// GL ARB Cl Event\n#define glCreateSyncFromCLeventARB jrgl::jrglCreateSyncFromCLeventARB\n\n// GL ARB Compute Variable Group Size\n#define glDispatchComputeGroupSizeARB jrgl::jrglDispatchComputeGroupSizeARB\n\n// GL ARB Debug Output\n#define glDebugMessageControlARB 	jrgl::jrglDebugMessageControlARB\n#define glDebugMessageInsertARB 	jrgl::jrglDebugMessageInsertARB\n#define glDebugMessageCallbackARB 	jrgl::jrglDebugMessageCallbackARB\n#define glGetDebugMessageLogARB 	jrgl::jrglGetDebugMessageLogARB\n\n// GL ARB Draw Buffers Blend\n#define glBlendEquationiARB 		jrgl::jrglBlendEquationiARB\n#define glBlendEquationSeparateiARB jrgl::jrglBlendEquationSeparateiARB\n#define glBlendFunciARB 			jrgl::jrglBlendFunciARB\n#define glBlendFuncSeparateiARB 	jrgl::jrglBlendFuncSeparateiARB\n\n// GL ARB Indirect Parameters\n#define glMultiDrawArraysIndirectCountARB 	jrgl::jrglMultiDrawArraysIndirectCountARB\n#define glMultiDrawElementsIndirectCountARB jrgl::jrglMultiDrawElementsIndirectCountARB\n\n// GL ARB Robustness\n#define glGetGraphicsResetStatusARB	jrgl::jrglGetGraphicsResetStatusARB\n#define glGetnTexImageARB			jrgl::jrglGetnTexImageARB\n#define glReadnPixelsARB			jrgl::jrglReadnPixelsARB\n#define glGetnCompressedTexImageARB	jrgl::jrglGetnCompressedTexImageARB\n#define glGetnUniformfvARB			jrgl::jrglGetnUniformfvARB\n#define glGetnUniformivARB			jrgl::jrglGetnUniformivARB\n#define glGetnUniformuivARB			jrgl::jrglGetnUniformuivARB\n#define glGetnUniformdvARB			jrgl::jrglGetnUniformdvARB\n\n// GL ARB Sample Shading\n#define glMinSampleShadingARB jrgl::jrglMinSampleShadingARB\n\n// GL ARB Shading Language Include\n#define glNamedStringARB			jrgl::jrglNamedStringARB\n#define glDeleteNamedStringARB		jrgl::jrglDeleteNamedStringARB\n#define glCompileShaderIncludeARB	jrgl::jrglCompileShaderIncludeARB\n#define glIsNamedStringARB			jrgl::jrglIsNamedStringARB\n#define glGetNamedStringARB			jrgl::jrglGetNamedStringARB\n#define glGetNamedStringivARB		jrgl::jrglGetNamedStringivARB\n\n// GL ARB Sparse Buffer\n#define glBufferPageCommitmentARB		jrgl::jrglBufferPageCommitmentARB\n#define glNamedBufferPageCommitmentEXT	jrgl::jrglNamedBufferPageCommitmentEXT\n#define glNamedBufferPageCommitmentARB	jrgl::jrglNamedBufferPageCommitmentARB\n\n// GL ARB Sparse Texture\n#define glTexPageCommitmentARB jrgl::jrglTexPageCommitmentARB\n\n#endif",
			"file": "lib/jrcore/inc/jr_gl.h",
			"file_size": 87259,
			"file_write_time": 130743081274104769,
			"settings":
			{
				"buffer_size": 87259,
				"line_ending": "Unix"
			}
		},
		{
			"file": "inc/InputManager.h",
			"settings":
			{
				"buffer_size": 535,
				"line_ending": "Windows"
			}
		},
		{
			"file": "code/TileMap.cpp",
			"settings":
			{
				"buffer_size": 3792,
				"line_ending": "Windows"
			}
		},
		{
			"file": "code/WindowManager.cpp",
			"settings":
			{
				"buffer_size": 2897,
				"line_ending": "Windows"
			}
		},
		{
			"file": "code/LocalMapState.cpp",
			"settings":
			{
				"buffer_size": 3456,
				"line_ending": "Windows"
			}
		},
		{
			"file": "code/Graphics.cpp",
			"settings":
			{
				"buffer_size": 13651,
				"line_ending": "Windows"
			}
		},
		{
			"file": "code/main.cpp",
			"settings":
			{
				"buffer_size": 1613,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Program Files (x86)/Windows Kits/8.1/Include/um/gl/GL.h",
			"settings":
			{
				"buffer_size": 67751,
				"line_ending": "Windows"
			}
		},
		{
			"file": "inc/Font.h",
			"settings":
			{
				"buffer_size": 1229,
				"line_ending": "Windows"
			}
		},
		{
			"file": "inc/Graphics.h",
			"settings":
			{
				"buffer_size": 4162,
				"line_ending": "Windows"
			}
		},
		{
			"file": "inc/Texture.h",
			"settings":
			{
				"buffer_size": 1026,
				"line_ending": "Windows"
			}
		},
		{
			"file": "inc/TextureManager.h",
			"settings":
			{
				"buffer_size": 933,
				"line_ending": "Windows"
			}
		},
		{
			"file": "inc/TileMap.h",
			"settings":
			{
				"buffer_size": 2065,
				"line_ending": "Windows"
			}
		},
		{
			"file": "inc/WindowManager.h",
			"settings":
			{
				"buffer_size": 2543,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Ruin2D.sln",
			"settings":
			{
				"buffer_size": 932,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 81.0,
		"last_filter": "ifndef",
		"selected_items":
		[
			[
				"ifndef",
				"Snippet: #ifndef … #define … #endif"
			],
			[
				"clisp",
				"SublimeREPL: Clisp"
			],
			[
				"tab",
				"Indentation: Convert to Tabs"
			],
			[
				"linter",
				"SublimeLinter: Next Error"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"bloc",
				"Toggle Block Comment"
			],
			[
				"block",
				"Toggle Block Comment"
			],
			[
				"com",
				"Toggle Block Comment"
			],
			[
				"comment",
				"Toggle Block Comment"
			],
			[
				"new v",
				"File: New View into File"
			],
			[
				"install 	",
				"Package Control: Install Package"
			],
			[
				"Package Control: insta",
				"Package Control: Install Package"
			],
			[
				"upper",
				"Convert Case: Upper Case"
			],
			[
				"open",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"l",
				"Snippet: luafuncheader"
			],
			[
				"android",
				"Android: New Android Project"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"",
				"ADB: Run App"
			],
			[
				"run",
				"ADB: Run App"
			],
			[
				"bui",
				"Build: Build"
			],
			[
				"adb",
				"ADB: List Devices"
			],
			[
				"pack",
				"Package Control: List Packages"
			],
			[
				"ant",
				"Build: Ant Debug"
			],
			[
				"Ant",
				"Build: Ant Clean"
			],
			[
				"Build",
				"Build: Ant Clean"
			]
		],
		"width": 520.0
	},
	"console":
	{
		"height": 278.0,
		"history":
		[
			"import urllib.request,os; pr='Preferences.sublime-settings'; ip='ignored_packages'; n='Package Control'; s=sublime.load_settings(pr); ig=s.get(ip); ig.append(n); s.set(ip,ig); sublime.save_settings('Preferences.sublime-settings'); pf=n+'.sublime-package'; urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler())); by=urllib.request.urlopen('https://packagecontrol.io/'+pf.replace(' ','%20')).read(); open(os.path.join(sublime.installed_packages_path(),pf),'wb').write(by); ig.remove(n); s.set(ip,ig); sublime.save_settings(pr); print('Package Control: 3.0.0 upgrade successful!')",
			"dir",
			"ls",
			"clear()",
			"clear",
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read()) ",
			"view.run_command('adb')"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": true,
		"show_open_files": true,
		"show_tabs": false,
		"side_bar_visible": true,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/Projects/Ruin2D"
	],
	"file_history":
	[
		"/D/Projects/Ruin2D/inc/InputManager.h",
		"/C/Program Files (x86)/Microsoft Visual Studio 12.0/VC/include/rapidjson/document.h",
		"/C/Program Files (x86)/Microsoft Visual Studio 12.0/VC/include/rapidjson/rapidjson.h",
		"/D/Projects/Ruin2D/code/TileSet.cpp",
		"/D/Projects/Ruin2D/code/WindowManager.cpp",
		"/D/Projects/Ruin2D/code/TextureManager.cpp",
		"/D/Projects/Ruin2D/code/Texture.cpp",
		"/D/Projects/Ruin2D/code/MemManager.cpp",
		"/D/Projects/Ruin2D/code/Font.cpp",
		"/D/Projects/Ruin2D/code/RuinAssert.cpp",
		"/D/Projects/Ruin2D/inc/WindowManager.h",
		"/D/Projects/Ruin2D/inc/RuinAssert.h",
		"/D/Projects/Ruin2D/inc/Font.h",
		"/D/Projects/Ruin2D/lib/jrcore/inc/jr_vec.h",
		"/D/Projects/Ruin2D/lib/jrcore/code/jr_matrix.cpp",
		"/D/Projects/Ruin2D/lib/jrcore/inc/jr_matrix.h",
		"/D/Projects/Ruin2D/code/Graphics.cpp",
		"/D/Projects/Ruin2D/inc/Sprite.h",
		"/D/Projects/Ruin2D/code/Sprite.cpp",
		"/D/Projects/Ruin2D/code/TileMap.cpp",
		"/D/Projects/Ruin2D/build.bat",
		"/D/Projects/Ruin2D/code/testmain.cpp",
		"/D/Projects/Ruin2D/code/main.cpp",
		"/D/Projects/Ruin2D/inc/Texture.h",
		"/D/Projects/Ruin2D/inc/GameData.h",
		"/D/Projects/Ruin2D/inc/Graphics.h",
		"/D/Projects/Ruin2D/inc/TextureManager.h",
		"/D/Projects/Ruin2D/inc/TileSet.h",
		"/D/Projects/Ruin2D/inc/TileMap.h",
		"/D/Projects/Ruin2D/inc/PointerUtils.h",
		"/D/Projects/Ruin2D/code/LocalMapState.cpp",
		"/D/Projects/Ruin2D/code/Camera.cpp",
		"/C/Program Files (x86)/Microsoft Visual Studio 12.0/VC/include/rapidjson/internal/pow10.h",
		"/D/Projects/Ruin2D/code/AllGameData.cpp",
		"/D/Projects/Ruin2D/inc/Camera.h",
		"/D/Projects/Ruin2D/inc/AllGameData.h",
		"/D/Projects/Ruin2D/lib/jrcore/proj/build.bat",
		"/D/Projects/Ruin2D/Ruin2D.sublime-project",
		"/D/Projects/jrcore2/jrcore/include/jrcore/collections/jr_queue.h",
		"/D/Projects/jrcore2/jrcore/clean.bat",
		"/D/Projects/jrcore2/jrcore/source/collections/jr_vector.c",
		"/D/Projects/jrcore2/jrcore/include/jrcore/jr_ptrutils.h",
		"/D/Projects/jrcore2/jrcore/include/jrcore/collections/jr_stack.h",
		"/D/Projects/jrcore2/jrcore/source/collections/jr_list.c",
		"/D/Projects/jrcore2/jrcore/include/jrcore/collections/jr_vector.h",
		"/D/Projects/Puck/code/jr_lisp.cpp",
		"/D/Projects/Puck/code/collections/jr_vector.c",
		"/D/Projects/Puck/proj/build.bat",
		"/D/Projects/Puck/code/jr_lisp.h",
		"/D/Projects/jrcore2/jrcore/build.bat",
		"/D/Projects/jrcore2/jrcore/source/main.c",
		"/D/Projects/Puck/code/collections/jr_vector.h",
		"/D/Projects/jrcore2/jrcore/jrcore.map",
		"/D/Projects/Puck/code/jr_allocator.h",
		"/D/Projects/Puck/code/collections/jr_vector.cpp",
		"/D/Projects/Puck/code/jr_mem.cpp",
		"/D/Projects/Puck/code/jrcore.h",
		"/D/Projects/Puck/code/jr_allocator.cpp",
		"/D/Projects/Puck/code/jr_pointerutils.h",
		"/D/Projects/Puck/code/jr_int.h",
		"/D/Projects/Puck/code/jrcore.cpp",
		"/D/Projects/Puck/code/collections/jr_stack.h",
		"/D/Projects/Puck/code/jr_mem.h",
		"/D/Projects/Puck/code/puck_win32.cpp",
		"/D/Projects/Puck/proj/Puck_Win32/Puck_Win32.vcxproj",
		"/D/Projects/Puck/code/collections/jr_hashtable.cpp",
		"/D/Projects/Puck/code/jr_tree.cpp",
		"/D/Projects/Puck/code/jr_tree.h",
		"/D/Projects/Puck/code/jr_list.h",
		"/D/Projects/Puck/code/jr_stack.h",
		"/D/Projects/Puck/code/jrwin32_mem.cpp",
		"/D/Projects/Puck/code/jr_stack.cpp",
		"/D/Projects/Puck/code/jr_vector.h",
		"/D/Projects/Puck/code/jr_hash.h",
		"/D/Projects/Puck/code/jr_hash.cpp",
		"/D/Projects/Puck/code/jr_boundarytagallocator.cpp",
		"/D/Projects/Puck/code/jr_memmanager.cpp",
		"/D/Projects/Puck/code/jr_memmanager.h",
		"/C/Users/Jake/AppData/Local/Temp/red_black_tree.h",
		"/C/Users/Jake/AppData/Local/Temp/red_black_tree.c",
		"/D/Projects/Puck/code/jr_redblacktree.h",
		"/D/Projects/Puck/code/GL/jr_assert.h",
		"/D/Projects/Puck/code/jr_shapes.h",
		"/D/Projects/Puck/code/puck_gamecommon.h",
		"/D/Projects/Puck/code/puck.cpp",
		"/D/Projects/Puck/proj/build2.bat",
		"/D/Projects/Puck/proj/puck.sublime-project",
		"/D/Projects/Puck/code/jr_shader.cpp",
		"/D/Projects/Puck/gen/jrgen_stack.gh",
		"/D/Projects/Puck/gen/jrgen_stack.gcpp",
		"/D/Projects/Puck/gen/jrgen_main.cpp",
		"/D/Projects/Puck/code/puck_wav.cpp",
		"/D/Projects/Puck/code/puck_wav.h",
		"/D/Projects/Puck/code/puck_bmp.cpp",
		"/D/Minecraft/.minecraft/config/TinkersConstruct.cfg",
		"/D/Minecraft/.minecraft/config/TinkersModules.cfg",
		"/D/Minecraft/.minecraft/config/IguanaTinkerTweaks/main.cfg",
		"/D/Downloads/curl-master/curl-master/README",
		"/D/Projects/Puck/code/GL/glcorearb.h",
		"/D/Cache/Roaming/.technic/modpacks/blightfall/config/SpiceOfLife.cfg",
		"/D/Downloads/curl/curl/README",
		"/C/Users/Jake/AppData/Local/Temp/glcorearb.h",
		"/D/Projects/Puck/data/Pickup_Coin.wav",
		"/C/Users/Jake/AppData/Local/Temp/wglext.h",
		"/C/GOG Games/Privateer 2 - The Darkening/dosbox_privateer2.conf",
		"/D/Projects/Puck/code/puck_win32_ub.cpp",
		"/D/Projects/Puck/data/basic.frag",
		"/D/Projects/Puck/code/puck_game_ub.cpp",
		"/D/Projects/Puck/build/build.bat",
		"/D/Projects/Puck/code/puck.h",
		"/D/Projects/Puck/build/puck_game_ub.map",
		"/D/Projects/Puck/code/puck_bmp.h",
		"/D/Projects/Puck/data/basic.vert",
		"/D/Projects/Ruin2D/Data/Shaders/DefaultTileShader.vert",
		"/D/Projects/Ruin2D/Data/Shaders/DefaultTileShader.frag",
		"/D/Projects/Puck/code/puck_mem.h",
		"/D/Projects/Puck/code/puck_mem.cpp",
		"/D/Projects/Puck/code/puck_math.h",
		"/C/Program Files (x86)/FMOD SoundSystem/FMOD Studio API Windows/api/lowlevel/examples/play_sound.cpp",
		"/C/Program Files (x86)/FMOD SoundSystem/FMOD Studio API Windows/api/lowlevel/examples/common.cpp",
		"/C/Program Files (x86)/FMOD SoundSystem/FMOD Studio API Windows/api/lowlevel/examples/common_platform.cpp",
		"/D/Projects/Puck/code/main.cpp",
		"/C/Users/Jake/AppData/Local/Temp/get-pip.py",
		"/C/Program Files (x86)/FMOD SoundSystem/FMOD Studio API Windows/api/lowlevel/examples/common.h",
		"/D/Projects/Puck/code/gl3w.c",
		"/D/Projects/Puck/code/GL/gl3w.h",
		"/C/Program Files (x86)/FMOD SoundSystem/FMOD Studio API Windows/api/lowlevel/examples/play_stream.cpp",
		"/C/Program Files (x86)/FMOD SoundSystem/FMOD Studio API Windows/api/lowlevel/examples/generate_tone.cpp"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"assert",
			"vec4",
			"vec2",
			"JRVector",
			"B",
			"jrMemCopy",
			"		\n",
			"uint32",
			"paddle3",
			"paddle2",
			"prevA",
			"paddle1",
			"_t",
			"GameUpdate",
			"InitalizeGame",
			"768",
			"1024",
			"game.",
			"windowWidth",
			"windowHeight",
			"camera",
			"DrawRec",
			"vec3",
			";\n",
			"camera",
			"pad",
			"50",
			"\n};",
			"ourOpenGLRenderingContext",
			"letWindowsChooseThisPixelFormat",
			"ourWindowHandleToDeviceContext",
			"hInstance",
			"build",
			"cpp",
			"popd",
			"992",
			"initialScene",
			"}\n",
			":",
			"0",
			"bShadowsOnGrass",
			"SetError"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"JRFloat4",
			"JRFloat2",
			"JRTVector",
			"uint32_t",
			"paddle4",
			"paddle3",
			"paddle2",
			"windowHeight",
			"windowWidth",
			"width",
			"height",
			"vec4",
			"hglrc",
			"pixelFormat",
			"hdc",
			"instance",
			" ="
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "build.bat",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 313,
						"regions":
						{
						},
						"selection":
						[
							[
								93,
								19
							]
						],
						"settings":
						{
							"syntax": "Packages/Batch File/Batch File.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "lib/jrcore/code/jr_vector.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4072,
						"regions":
						{
						},
						"selection":
						[
							[
								1674,
								1674
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 729.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "lib/jrcore/inc/GL/glcorearb.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 239636,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 864.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "lib/jrcore/inc/jr_gl.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 87259,
						"regions":
						{
						},
						"selection":
						[
							[
								178,
								190
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "inc/InputManager.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 535,
						"regions":
						{
						},
						"selection":
						[
							[
								535,
								535
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "code/TileMap.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3792,
						"regions":
						{
						},
						"selection":
						[
							[
								1708,
								1708
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1080.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "code/WindowManager.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2897,
						"regions":
						{
						},
						"selection":
						[
							[
								330,
								330
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "code/LocalMapState.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3456,
						"regions":
						{
						},
						"selection":
						[
							[
								2418,
								2418
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 1458.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "code/Graphics.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13651,
						"regions":
						{
						},
						"selection":
						[
							[
								10018,
								10018
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4935.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "code/main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1613,
						"regions":
						{
						},
						"selection":
						[
							[
								1274,
								1274
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 756.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/C/Program Files (x86)/Windows Kits/8.1/Include/um/gl/GL.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 67751,
						"regions":
						{
						},
						"selection":
						[
							[
								65398,
								65398
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 26937.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "inc/Font.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1229,
						"regions":
						{
						},
						"selection":
						[
							[
								132,
								132
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "inc/Graphics.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4162,
						"regions":
						{
						},
						"selection":
						[
							[
								76,
								76
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "inc/Texture.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1026,
						"regions":
						{
						},
						"selection":
						[
							[
								92,
								92
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "inc/TextureManager.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 933,
						"regions":
						{
						},
						"selection":
						[
							[
								106,
								106
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "inc/TileMap.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2065,
						"regions":
						{
						},
						"selection":
						[
							[
								189,
								189
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "inc/WindowManager.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2543,
						"regions":
						{
						},
						"selection":
						[
							[
								2435,
								2435
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "Ruin2D.sln",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 932,
						"regions":
						{
						},
						"selection":
						[
							[
								932,
								932
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 514.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Ruin2D",
	"project": "Ruin2D.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"jr_ve",
				"lib\\jrcore\\code\\jr_vector.cpp"
			],
			[
				"mem",
				"code\\jr_memmanager.cpp"
			],
			[
				"memmanager",
				"code\\jr_memmanager.h"
			],
			[
				"jrmem.cpp",
				"code\\jr_mem.cpp"
			],
			[
				"pointer",
				"code\\jr_pointerutils.h"
			],
			[
				"jr_mem",
				"code\\jr_mem.h"
			],
			[
				"project",
				"proj\\puck.sublime-project"
			],
			[
				"jr_lisp",
				"code\\jr_lisp.h"
			],
			[
				"jr_lisp.cpp",
				"code\\jr_lisp.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"D:\\Projects\\jrcore\\proj\\jrcore.sublime-project"
			],
			[
				"r",
				"D:\\Projects\\jrrender\\proj\\jrrender.sublime-project"
			],
			[
				"math",
				"D:\\Projects\\jrmath\\proj\\jrmath.sublime-project"
			],
			[
				"jrmath",
				"D:\\Projects\\jrmath\\proj\\jrmath.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 287.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
